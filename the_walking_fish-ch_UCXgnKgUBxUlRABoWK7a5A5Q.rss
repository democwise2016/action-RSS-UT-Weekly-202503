<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:media="http://www.rssboard.org/media-rss" version="2.0">
  <channel>
    <title><![CDATA[The walking fish 步行魚[YT+]]]></title>
    <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q</link>
    <image>
      <url>https://yt3.googleusercontent.com/RNU-ov0dYkt42kQ27bMZD90LwAdJKcR7b8oqdJrbefvx_7vGtwHkb9qNUa22jqDZ_8-Cnmf9=s900-b50-c-k-c0x008A95A5-no-rj</url>
      <title>The walking fish 步行魚[YT+]</title>
      <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q</link>
    </image>
    <language>en-us</language>
    <atom:link href="https://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q" rel="self" type="application/rss+xml"/>
    <copyright><![CDATA[The walking fish 步行魚[YT+]]]></copyright>
    <itunes:author><![CDATA[The walking fish 步行魚[YT+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCXgnKgUBxUlRABoWK7a5A5Q" target="_blank">https://www.youtube.com/channel/UCXgnKgUBxUlRABoWK7a5A5Q</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q</a>
      ]]>
    </itunes:summary>
    <description>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCXgnKgUBxUlRABoWK7a5A5Q" target="_blank">https://www.youtube.com/channel/UCXgnKgUBxUlRABoWK7a5A5Q</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCXgnKgUBxUlRABoWK7a5A5Q</a>
      ]]>
    </description>
    <itunes:owner>
      <itunes:name><![CDATA[The walking fish 步行魚[YT+]]]></itunes:name>
    </itunes:owner>
    <itunes:image href="https://yt3.googleusercontent.com/RNU-ov0dYkt42kQ27bMZD90LwAdJKcR7b8oqdJrbefvx_7vGtwHkb9qNUa22jqDZ_8-Cnmf9=s900-b50-c-k-c0x008A95A5-no-rj"/>
<item>
      <title><![CDATA[Nano Banana 終極玩法指南：不只P圖修臉！從專業證件照、商品模型到虛擬試衣，10大超實用技巧與創意提示詞一次全公開！超佛免費 AI 模型實測]]></title>
      <link>https://www.youtube.com/watch?v=iZlMmpoMT7Q</link>
      <itunes:title><![CDATA[Nano Banana 終極玩法指南：不只P圖修臉！從專業證件照、商品模型到虛擬試衣，10大超實用技巧與創意提示詞一次全公開！超佛免費 AI 模型實測]]></itunes:title>
      <itunes:author><![CDATA[The walking fish 步行魚]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/iZlMmpoMT7Q/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解Gemini 2.5 Flash Image（又稱Nano Banana模型）如何憑藉其卓越的<strong>人物一致性維持能力</strong>，在圖像編輯領域超越其他頂尖模型。</li> <li>探索該模型在<strong>髮型、服裝、姿勢修改、商品模擬、模特兒試穿</strong>，乃至<strong>證件照生成</strong>等多元應用，極大提升工作效率與創意表現。</li> <li>學習如何免費使用這項強大的AI工具，並透過實際案例了解其優勢與潛在限制，包括如何運用<strong>複雜自然語言</strong>來掌控圖片細節。</li> </ul> <hr /> <h1>摘要</h1> <h2>介紹：超越現有模型的圖像編輯利器</h2> <p>這段影片介紹了近期備受矚目的<strong>Gemini 2.5 Flash Image</strong>模型，又稱「Nano Banana模型」。作者指出，該模型最為人稱道的能力是其在<strong>保持畫面與角色一致性</strong>方面的卓越表現。相較於GPT-4O或Flux Kontext等模型，Gemini 2.5 Flash Image能在人物動作與構圖大幅改變的情況下，依然<strong>精確保持臉型</strong>，並且在修圖時不容易改變其餘畫面內容。作者強調，該模型能夠理解<strong>複雜的自然語言描述</strong>，允許使用者描述場景、打光、物品擺放位置、人物表情等細節，而無需像其他模型那樣偏向條列式關鍵字。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_160.jpg" /></p> <p>根據Google官方資料，Gemini 2.5 Flash Image在圖片編輯領域的表現超越目前市面上的各種模型，並在語言模型競技場中位居圖片編輯與圖片生成領域的<strong>排名第一</strong>。更重要的是，這項強大模型<strong>可供使用者免費使用</strong>，透過Google AI Studio選擇Nano Banana模型即可，生成速度快且額度充足，或是在Gemini網頁版上也能體驗，但AI Studio的額度更為豐厚。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_180.jpg" /></p> <h2>實測：令人驚艷的人物編輯能力</h2> <p>作者首先從編輯圖像開始測試，展示了該模型在<strong>人物髮型修改</strong>（短髮變長髮、髮色改變）上的完美效果，<strong>人物臉型基本沒有任何改變</strong>。接著，作者測試了<strong>調整頭部偏向</strong>、<strong>衣著顏色與圖案修改</strong>，Gemini 2.5 Flash Image都能成功執行，儘管衣著版型有時會略有變化。甚至在進行<strong>更大構圖改變或人物動作調整</strong>時，例如讓人物下床、手上拿吹風機，或將畫面拉遠變為遠景，模型也能維持<strong>人物五官與臉型的高度一致性</strong>，並處理好背景細節。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_480.jpg" /></p> <p>在進一步的測試中，作者讓人物做出了<strong>吹頭髮、跳起來</strong>等動作，模型均能生成合理的效果，跳起來時頭髮擺動及背景影子變化等細節也被捕捉。隨後，作者換圖展示了<strong>人物姿勢的修改能力</strong>，包括雙手插腰、身體轉向窗戶、左腳勾起等，模型都能完美執行。雖然在「左手伸出比愛心」的指令中，模型生成了右手，但整體表現依然令人滿意。此外，模型也能實現<strong>人物轉90度、背對鏡頭</strong>，以及調整鏡頭視角如<strong>仰視或俯視</strong>。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_650.jpg" /></p> <h2>進階應用：從產品設計到個人形象</h2> <p>Gemini 2.5 Flash Image支援<strong>同時處理多張圖片並融合元素</strong>。作者演示了如何快速製作<strong>商品模擬圖（Mockup）和模特兒試穿</strong>。將商品Logo與空白紙杯圖片一同上傳，模型能精確地將Logo印在杯子上並修改杯蓋顏色。同樣，也能將提供的圖片作為車輛貼膜，處理效果良好，若有瑕疵也能透過對話進一步調整。在模特兒試穿方面，只需提供模特兒和商品的圖片，模型就能依指令讓模特兒<strong>手持或肩掛包包</strong>，甚至<strong>穿上指定衣服</strong>，且可調整視角和動作。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_810.jpg" /></p> <p>在<strong>室內設計應用</strong>方面，作者嘗試提供空房間照片與傢俱圖片，讓模型將傢俱置入。雖然模型在維持房間一致性方面表現不如人物一致性，可能會改變格局，但作者發現先提供房間圖片再提供傢俱圖片，可稍微提高穩定性。接著，作者介紹了一項實用功能：<strong>證件照生成</strong>。透過將隨意拍攝的照片上傳，並搭配特定提示詞（如韓式護照風格、純白背景、柔和燈光、面朝前方、著裝正式），模型能生成出<strong>高品質的證件照</strong>。作者提醒，為達最佳效果，原始照片應正面朝鏡頭並露出耳朵。然而，作者也<strong>不建議將此功能生成的照片用於官方證件</strong>，因其屬合成照片，不符合規定，但非常適合用於學生證、員工證或履歷等非正式用途。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_16.jpg" /></p> <h2>創意玩法：證件照、背景修改與趣味生成</h2> <p>作者展示了如何利用該模型<strong>修改照片背景或文字</strong>。以舊影片封面為例，將雲朵組成的文字從「SD 3.5」修改為「Gemini 2.5 Flash」，模型成功保留雲朵排列風格並變更文字。但作者指出，模型目前<strong>無法很好地生成中文文字</strong>。在修改背景方面，模型能徹底改變場景，甚至調整<strong>畫面打光與人物光影</strong>，例如將背景改為房間窗邊的夕陽、海邊或陰暗巷弄中的發光塗鴉，效果均相當不錯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_18.jpg" /></p> <p>在基礎圖片生成方面，作者表示Gemini 2.5 Flash Image因其語言模型本質，能理解<strong>複雜的自然語言描述</strong>，因此在細節掌控上比純圖片生成模型（如Flux, Stable Diffusion）上限更高。然而，其<strong>下限也相對較低</strong>，若提示詞過於簡陋，生成的圖片品質也會相對簡陋。最後，作者分享了幾個<strong>有趣的提示詞</strong>：將照片轉化為<strong>PVC模型或公仔</strong>，背景顯示3D建模畫面；將照片轉換為<strong>3D結構設計圖</strong>，呈現物件或建築的透視拆解圖；以及將Google Map截圖轉換為<strong>遊戲主題公園風格</strong>，生成可愛的卡通化地圖。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_20.jpg" /></p> <h2>總結：優勢與使用注意事項</h2> <p>作者總結Gemini 2.5 Flash Image（Nano Banana）在<strong>修圖方面表現非常良好</strong>，尤其在多次修改人物動作、髮型、臉部光影時，<strong>臉型幾乎不會變形</strong>，展現出極高的一致性。然而，作者也指出了該模型的幾個<strong>缺點與注意事項</strong>：首先，它<strong>高度依賴詳細的提示詞</strong>，簡單的提示詞會導致圖片品質簡陋，與其他模型相比，缺乏基礎美感。其次，模型存在<strong>「矯枉過正」的內容審查</strong>，許多合法提示詞有時會被錯誤判定為違規。最後，該模型<strong>目前仍無法良好生成中文文字</strong>，甚至相較於上一代Gemini 2.0 Flash有所退步。作者鼓勵觀眾多加嘗試並分享有趣的提示詞。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_22.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># :00 Nano Banana 模型介紹</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :59 免費使用管道與額度說明</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">各位久等了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :36 圖像編輯實測：細節調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們來跟大家介紹近一段時間以來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :50 圖像編輯實測：大幅度動作與構圖變更</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家玩出各種花樣的Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :15 圖像編輯實測：姿勢調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">aka. Nano Banana模型。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :27 應用：融合多張圖片製作商品 Mockup</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">帶大家看一下這個模型它厲害在哪裡。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 應用：模特兒商品試穿</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成編輯圖片的效果如何。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :06 應用：簡易室內設計</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及可以將它應用在哪些地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :01 應用：生成證件照</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">順便跟大家分享一些我看到的有趣的提示詞。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :25 應用：修改照片背景與文字</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">相信這段時間應該不少人都有看到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 基本圖片生成能力淺談</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">網友們使用Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :21 有趣提示詞分享：PVC 公仔與 3D 建模</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成的各種人物或寵物的公仔加3D建模畫面的圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :00 有趣提示詞分享：3D 結構設計圖</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及使用Gemini 2.5 Flash Image來修圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :46 有趣提示詞分享：Google Map 轉遊戲主題公園</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改穿搭或是補全草圖等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :07 總結與使用注意事項</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它的能力主要應該說是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :42 結語</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">保持畫面和角色一致性的能力。可以說是得到了全球使用者的認可。因為不管是GPT-4O或者是Black Forest Lab。專門為編輯圖像而生的Flux Kontext。在輸入調整的目標有比較大的動作改變時。多多少少臉型都會有點改變。但Gemini 2.5 Flash Image。卻可以在角色動作與構圖大幅改變的情況下。依舊將人物的臉型保持得很好。其餘的畫面內容在修圖時也不容易發生改變。當然基於它本身是一個圓模型的緣故。它也比較可以理解複雜的自然語言描述。例如可以直接描述圖片想修改的。包含場景、打光、物品擺放位置、人物表情等各項細節。生成圖片時也一樣可以盡量詳細地描述。而不用像是使用Stable Diffusion、Flux.1 dev。等這些模型時一樣偏向於條列出各項關鍵字。根據Google官方提供的資料。Gemini 2.5 Flash Image在圖片編輯的領域。表現遠遠超過現在市面上的各種模型。包括GPT-4O、Flux Kontext。而在語言模型競技場中。Gemini 2.5 Flash Image目前也是屬於。圖片編輯以及圖片生成領域的排名第一。重點是這麼強大的模型我們還可以免費使用。只需要進到Google AI Studio中。模型選到Nano Banana就能夠免費使用。生成速度不慢且額度也給得相當多。簡單測下來生成個超過50張絕對不是問題。或是進到Gemini的網頁。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_134.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實也一樣可以使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但額度可能就沒有像在Google AI Studio一樣這麼多。雖然Google官方有公布一個。Gemini App的理論每日最大上限為100張。但它裡面有寫到會隨使用狀況而調整。所以大家有需要使用的話可以輪著用。反正兩個額度是分開算的。OK在介紹完基本訊息後。我們就來看看Gemini 2.5 Flash Image。它到底有多厲害。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我們先從編輯圖像的部分開始測起。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這邊我使用的這張圖大家可以先稍微看一下。這張圖是我用AI生的。首先我們先嘗試看看。讓它將人物的髮型從短髮變為長髮。然後這邊它生成失敗了。有時候Google AI Studio會這樣。我們就將滑鼠移到對話的右上角。點擊這個Gemini Logo的Rerun。讓它重新生成一次就好了。稍等一下就可以看到它生成出結果了。我們將它打開來比對一下。可以看到。臉型基本是完全沒有任何改變。效果非常的好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們再來試試看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">調整它的髮色。讓它頭髮變為淺黃色。一樣稍等一下。可以看到頭髮成功改變顏色了。臉型也一樣沒有任何改變。再來我們可以做更多的調整。我這邊輸入讓它的頭向檯燈的方向偏。稍等一下可以看到。它也確實有做到了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們來調整看看它的衣著。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們讓它的衣服顏色變為黑色。並且上面使用噴漆。寫著The Walking Fish。再稍等一下等它生成完後。可以看到Gemini 2.5 Flesh有成功做到了。只不過稍微有點可惜的是。它的衣服版型有一點改變。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了這些對照片的細節調整之外。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還可以對照片做更大的構圖改變。或是讓人物做更大的動作。首先我們這邊先測試。讓人物下床。然後手上拿吹風機。但這邊稍微有點可惜的是。它生成完之後的結果。它的床看起來有點詭異。斷在很奇怪的地方。那這邊我們暫時先不管它。再進行下一個測試。我們嘗試讓它將畫面拉遠。變為一個遠景。可以看到整個房間周圍的樣貌。以及更多的人身。等到它生成完。我們點開來放大一下。可以看到人物的五官及臉型。一樣維持得很好。也可以看到一些細節它處理得很不錯。像衣服上的皺褶。以及背景中的影子。然後看起來Gemini 2.5 Flesh image。判斷它應該是在一個旅館裡。再來我們試試看。讓人物開始用吹風機吹頭髮。它這邊生成的效果看起來。動作有一點點詭異。但也還在合理範圍。我們就來測試下一項東西。雖然說不知道為什麼。但我就想讓它跳起來。所以我們這邊就輸入。讓人物跳起來。稍等一下可以看到它的生成結果。它的頭髮有因為跳起來。而發生一些擺動或者被風吹到的感覺。背景中床上的影子。也有相對應的改變。當然人物的五官以及臉型。也一樣保持得很好。這張圖片玩得夠多了。我們換一張圖來玩玩看別的東西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_317.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了像剛剛那樣子。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對圖片中的元素進行一些修改。包括修改衣服。修改髮色修改髮型等。我們也可以來修改人物的姿勢。這邊我一樣上傳一張圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一步我先讓它拉遠鏡頭。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">擴圖一下。接著試試看。讓它將人物變為雙手插腰。稍等一下它完美的做到了。再來試試看。讓人物稍微向窗戶的方向轉。並且左腳勾起來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著試試看讓人物腳放下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">左手向鏡頭伸出比愛心。這次它的生成結果。雖然說看起來效果還不錯。但它其實並沒有完全遵循我的指令。人物伸出的是右手而非左手。再來我們試試其他的改變。像讓人物轉90度。它完美的做到了。讓人物背對鏡頭。它也可以做到。只不過姿勢不見了。要維持姿勢可能要額外下提示詞。以及想要的話。也可以如同一開始擴圖那樣操作一般。調整鏡頭的視角。讓它變成仰視或俯視等。OK. 對於人物的修改。我們暫時先測試到這邊。因為接下來我們還有很多其他的應用可以玩。Gemini 2.5 Flash Image. 可以支援同時處理多張圖片。並融合其中的元素。因此我們可以快速的使用它。來製作一些商品的Mockup。以及模特兒的試穿。這邊我從Mockup Design的網站上。載了個空白的紙杯下來。我們可以提供我們想要的Logo或是圖案。將兩個圖片一起丟給Gemini 2.5 Flash Image。讓它將圖片印在紙杯上。這邊我有額外下一個要求。讓它將杯蓋改為黑色。稍等一下可以看到它生成的結果。有做到我的要求。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外我有再載一個空白的車的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">試試看讓它使用我提供的圖片。來貼膜的效果如何。可以看到它處理的效果還算是不錯。就是窗戶這邊的處理稍微有點瑕疵。以及車頭的部分被截掉了。這邊我們再跟它對話一次。稍微調整一下。跟它說窗戶不需要塗裝並且車頭被截掉了。請讓整台車都顯示出來。就可以得到一張完整的成品圖。類似的用法也可以用在模特兒的試穿。這邊我們只需要提供給Gemini 2.5 Flash Image。模特兒的圖片。加上商品的圖片。我們就可以指定。模特兒使用什麼樣的方式。來試穿我們的商品。像這邊我提供的是模特兒加一個包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一個是讓她手持包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二個是讓她將包包掛在肩上。成品的效果都還不錯。讓模特兒試穿衣服的做法也是一樣。傳入兩張圖片。並且指定。讓人物穿上圖片中的衣服。這邊我們當然也還是一樣。可以再稍微調整一下視角。或是想要的話也可以調整動作。這邊就不多做示範了。再來我們也可以拿它來做一些簡單的室內設計。我們能夠提供一個房間的空照片。然後再提供一些傢俱。讓她將傢俱放到空房間內。但這邊稍微比較可惜的是。Gemini 2.5 Flash Image. 它目前對於房間的一致性維持。表現並沒有說這麼好。像我目前這樣子將圖片一次全部丟進去。讓她將傢俱們放到第一張圖片中。並且維持第一張圖片的房間格局。但這樣做的話。雖然說傢俱通常能夠正常的融入圖片中。但不太有辦法維持房間的格局與樣式。我目前找到稍微比較穩定一點的方法。是先傳第一張圖片。並告訴她。需要將傢俱填到這張圖片的房間中。之後再提供給她傢俱的圖片。這樣子她能夠稍微比較像第一張圖片一點。但還是會有一些改變。稍微算是比較可惜。下一個要跟大家介紹的。比較實用的一件應用。就是可以拿Gemini 2.5 Flash Image。來生成證件照的圖片。有時候我們可能懶得打扮。懶得處理妝髮。穿正式服裝。再出去拍一張正式的證件照。那我們就可以透過Gemini 2.5 Flash Image。來處理我們的圖片。只要在家隨便的拍一張照片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">將它傳到Google AI Studio上。使用這個提示詞。這個提示詞它大概的意思就是。將圖片轉換為韓式護照的照片風格。純白的背景。均勻柔和的燈光面朝前方。表情自然。著裝正式。不帶任何的配件。稍等一下就可以得到一張還不錯的證件照了。當然在提供的圖片上。最好還是正面朝鏡頭。並且露出耳朵。因為沒有拍到的東西。Gemini就只能憑空想像。縱使它的人物一致性表現再好。也沒辦法還原我們沒給它的資訊。這邊還是要小小提醒一下。雖然說它生成的效果非常好。人物基本上挺形不會變形。但依舊不太建議。把它拿去申請正式的護照。或者是其他的證件。畢竟依照我們中華民國護照的照片相關規定。就會寫到禁止使用合成照片。所以這項功能所生成出來的證件照。比較適合拿來放在一些相對比較沒有這麼重要。但平常比較有可能會用到的地方。像是我們的學生證 員工證。或者是可以拿來放在履歷的照片上。下一個要來跟大家分享的應用。是可以拿它來修改照片的背景。或者是照片中的文字。這邊我拿過去介紹SD 3.5時。所生成的影片封面。來做一個測試。我們輸入提示詞。讓它將背後的雲所排成的文字。修改成Gemini 2.5 Flash。可以看到它依舊保持著是使用雲來排列。且文字有正確的改變。但相同的做法。如果我們將文字改為中文的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那目前來看它是沒有辦法很好的生出中文字的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_655.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外修改背景的部分。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">也可以做到很徹底的修改。甚至調整整個畫面的打光。這邊我要求Gemini 2.5 Flash Image。將背景改為在房間中。自然光、人站在窗戶邊。夕陽從窗外斜射進來照在人物的臉上。它成功做到了。並且光線的調整也非常的好。我們再要求將背景改成在海邊。甚至是將背景改為在陰暗的巷子。牆壁上有著會發光的塗鴉。效果也都相當的不錯。人物身上的光影也會隨著環境而改變。分享了這麼多跟編輯與修改圖片相關的應用。當然我們還是要來簡單測一下。它基本的生成圖片能力如何。但這個部分我就不像過去測試圖片生成模型那樣。拿出來與其他圖片生成模型進行比較了。因為經過我實測下來Gemini 2.5 Flash Image。可能基於它是一個語言模型的緣故。它能夠理解較為複雜的自然語言描述。相較於Flux, Stable Diffusion。這一類純圖片的生成模型。我們可以描述並且掌控更多圖片的細節。整體來說它生成圖片的上限會更高。但相對的,它生成圖片的下限也很低。它對我們的描述並不會做過多的潤飾。描述得很簡單,它就生成很簡單的圖給我們。所以這邊就只給大家稍微看一下。我生成出來的圖片大約長什麼樣子。影片的最後就來跟大家分享一下。在網路上看到的一些有趣的提示詞。它也許不是那麼的實用。但生成出來的圖片效果很有趣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_749.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以玩一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是前一段時間非常流行的。將照片轉為PVC模型或公仔。然後在背景螢幕上顯示3D建模的結果。我們將包含我們主角的圖片。傳到Google AI Studio之後。貼上這一串指令。然後直接送出,等待它生成的結果。通常來說這個提示詞不需要測試太多次。一次就能成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只不過它背後電腦上的建模畫面。可能有時候會稍微不太精細。或者是稍微有點變形。那麼這個時候我們可以再給它重新生成一下。再來是一個有趣的。將照片轉換為3D結構設計圖的圖片。這個提示詞的生成效果。我直接測試給大家看好了。這邊我們貼上我們想轉換的東西。我先貼個剛剛從Mockup Designs。寫下來的空白車子圖片。然後貼上提示詞。稍等一下。我們可以看到它生成出來的這個圖片。就像是一個3D透視以及拆解出來的圖片。甚至上面還有一些標註。當然這張圖片它就只是好玩。然後看起來有趣而已。它跟實際的設計完全沒有任何的關係。我們也可以將它用在建築上。這邊我就貼上前一段時間去澎湖出差時。所拍下的澎湖醫院的照片。它也可以給出一個效果不錯的3D結構圖。甚至連那台巴士都一起被解構了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_828.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後是將Google Map截圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">並將上面的地標轉換為遊戲主題公園風格。我這邊貼上我讀的大學的Google Map截圖。讓它跑一下。可以看到它生成出來的效果。看起來還蠻可愛的。雖然說它實際上生出來的東西。跟我們大學的內部結構完全不一樣就是了。但就是看起來蠻有趣。OK. 影片的最後稍微來做一下簡單的統整。Gemini 2.5 Flash Image. aka Nano Banana. 它在修圖的方面表現非常良好。尤其是人物一致性的部分。在多次修改甚至有動到頭髮以及臉部的光影時。臉型也幾乎都不會發生改變。但當然這邊也是要稍微講一下。Gemini 2.5 Flash Image的小缺點。也算是提醒大家使用時需要注意的地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它本身雖然說因為是語言模型的關係。可以接收比較複雜的提示詞。這提高了它生成圖片的上限。但它生成圖片品質的下限也非常低。可以說這個模型它很吃提示詞的詳細程度。像Flex.1 Dev或Google自家的Imagen 4的模型。即便我們給的提示詞較為簡單。生成出來的圖片也多多少少會有一些基本的美感。但Gemini 2.5 Flash Image給的提示詞簡陋。生成出來的圖片通常也會很簡陋。再來就是它剛推出時就在Reddit上被網民們罵爆的。「矯枉過正」的內容審查。很多完全合法且沒有任何問題的提示詞。有時候就是被判定違反規則生不出來的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_918.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後就是目前它依然不太能生成中文字。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至應該說它生成中文字的能力還退步了。在上一代也就是Gemini 2.0 Flash時。它多多少少還能擠出幾個字。但現在幾乎就是完全生不出來。OK 以上就是今天全部的測試與分享。希望大家可以用Gemini 2.5 Flash Image。修圖或者是生成出自己滿意的圖片。如果大家有發現什麼好玩的提示詞。也歡迎在影片下方留言分享給大家看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外這支影片會這麼晚出。剛剛其實有稍微提到了。就是在前一段時間Gemini 2.5 Flash Image剛出時。我剛好在澎湖出差。所以那個時候就只有簡單發個貼文。測試一下效果給大家看。現在才拍出正式的影片。OK 那麼各位觀眾。我們就。下支影片見。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><p>實測 Google 最新免費 AI 模型 Gemini 2.5 Flash Image (aka. Nano Banana)，它在修圖時保持人物臉部一致性的能力完勝 GPT-4o！本文將帶你從零開始，完整教學12個超實用技巧與創意玩法，包含一鍵生成證件照、商品試穿、室內設計，並分享爆紅的3D公仔提示詞。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>Google AI Studio: </p><p><a href="https://aistudio.google.com/prompts">https://aistudio.google.com/prompts</a></p><p></p><p>Gemini 網頁版: </p><p><a href="https://gemini.google.com/app">https://gemini.google.com/app</a></p><p></p><p>Gemini App 每日生成圖片上限: </p><p><a href="https://support.google.com/gemini/answer/16275805?hl=en">https://support.google.com/gemini/answer/16275805?hl=en</a></p><p></p><p>語言模型競技場: </p><p><a href="https://lmarena.ai/">https://lmarena.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-2.5-flash-image/">https://the-walking-fish.com/p/gemini-2.5-flash-image/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00:00 Nano Banana 模型介紹</p><p>00:01:59 免費使用管道與額度說明</p><p>00:02:36 圖像編輯實測：細節調整</p><p>00:03:50 圖像編輯實測：大幅度動作與構圖變更</p><p>00:05:15 圖像編輯實測：姿勢調整</p><p>00:06:27 應用：融合多張圖片製作商品 Mockup</p><p>00:07:30 應用：模特兒商品試穿</p><p>00:08:06 應用：簡易室內設計</p><p>00:09:01 應用：生成證件照</p><p>00:10:25 應用：修改照片背景與文字</p><p>00:11:30 基本圖片生成能力淺談</p><p>00:12:21 有趣提示詞分享：PVC 公仔與 3D 建模</p><p>00:13:00 有趣提示詞分享：3D 結構設計圖</p><p>00:13:46 有趣提示詞分享：Google Map 轉遊戲主題公園</p><p>00:14:07 總結與使用注意事項</p><p>00:15:42 結語</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/iZlMmpoMT7Q/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解Gemini 2.5 Flash Image（又稱Nano Banana模型）如何憑藉其卓越的<strong>人物一致性維持能力</strong>，在圖像編輯領域超越其他頂尖模型。</li> <li>探索該模型在<strong>髮型、服裝、姿勢修改、商品模擬、模特兒試穿</strong>，乃至<strong>證件照生成</strong>等多元應用，極大提升工作效率與創意表現。</li> <li>學習如何免費使用這項強大的AI工具，並透過實際案例了解其優勢與潛在限制，包括如何運用<strong>複雜自然語言</strong>來掌控圖片細節。</li> </ul> <hr /> <h1>摘要</h1> <h2>介紹：超越現有模型的圖像編輯利器</h2> <p>這段影片介紹了近期備受矚目的<strong>Gemini 2.5 Flash Image</strong>模型，又稱「Nano Banana模型」。作者指出，該模型最為人稱道的能力是其在<strong>保持畫面與角色一致性</strong>方面的卓越表現。相較於GPT-4O或Flux Kontext等模型，Gemini 2.5 Flash Image能在人物動作與構圖大幅改變的情況下，依然<strong>精確保持臉型</strong>，並且在修圖時不容易改變其餘畫面內容。作者強調，該模型能夠理解<strong>複雜的自然語言描述</strong>，允許使用者描述場景、打光、物品擺放位置、人物表情等細節，而無需像其他模型那樣偏向條列式關鍵字。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_160.jpg" /></p> <p>根據Google官方資料，Gemini 2.5 Flash Image在圖片編輯領域的表現超越目前市面上的各種模型，並在語言模型競技場中位居圖片編輯與圖片生成領域的<strong>排名第一</strong>。更重要的是，這項強大模型<strong>可供使用者免費使用</strong>，透過Google AI Studio選擇Nano Banana模型即可，生成速度快且額度充足，或是在Gemini網頁版上也能體驗，但AI Studio的額度更為豐厚。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_180.jpg" /></p> <h2>實測：令人驚艷的人物編輯能力</h2> <p>作者首先從編輯圖像開始測試，展示了該模型在<strong>人物髮型修改</strong>（短髮變長髮、髮色改變）上的完美效果，<strong>人物臉型基本沒有任何改變</strong>。接著，作者測試了<strong>調整頭部偏向</strong>、<strong>衣著顏色與圖案修改</strong>，Gemini 2.5 Flash Image都能成功執行，儘管衣著版型有時會略有變化。甚至在進行<strong>更大構圖改變或人物動作調整</strong>時，例如讓人物下床、手上拿吹風機，或將畫面拉遠變為遠景，模型也能維持<strong>人物五官與臉型的高度一致性</strong>，並處理好背景細節。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_480.jpg" /></p> <p>在進一步的測試中，作者讓人物做出了<strong>吹頭髮、跳起來</strong>等動作，模型均能生成合理的效果，跳起來時頭髮擺動及背景影子變化等細節也被捕捉。隨後，作者換圖展示了<strong>人物姿勢的修改能力</strong>，包括雙手插腰、身體轉向窗戶、左腳勾起等，模型都能完美執行。雖然在「左手伸出比愛心」的指令中，模型生成了右手，但整體表現依然令人滿意。此外，模型也能實現<strong>人物轉90度、背對鏡頭</strong>，以及調整鏡頭視角如<strong>仰視或俯視</strong>。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_650.jpg" /></p> <h2>進階應用：從產品設計到個人形象</h2> <p>Gemini 2.5 Flash Image支援<strong>同時處理多張圖片並融合元素</strong>。作者演示了如何快速製作<strong>商品模擬圖（Mockup）和模特兒試穿</strong>。將商品Logo與空白紙杯圖片一同上傳，模型能精確地將Logo印在杯子上並修改杯蓋顏色。同樣，也能將提供的圖片作為車輛貼膜，處理效果良好，若有瑕疵也能透過對話進一步調整。在模特兒試穿方面，只需提供模特兒和商品的圖片，模型就能依指令讓模特兒<strong>手持或肩掛包包</strong>，甚至<strong>穿上指定衣服</strong>，且可調整視角和動作。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_810.jpg" /></p> <p>在<strong>室內設計應用</strong>方面，作者嘗試提供空房間照片與傢俱圖片，讓模型將傢俱置入。雖然模型在維持房間一致性方面表現不如人物一致性，可能會改變格局，但作者發現先提供房間圖片再提供傢俱圖片，可稍微提高穩定性。接著，作者介紹了一項實用功能：<strong>證件照生成</strong>。透過將隨意拍攝的照片上傳，並搭配特定提示詞（如韓式護照風格、純白背景、柔和燈光、面朝前方、著裝正式），模型能生成出<strong>高品質的證件照</strong>。作者提醒，為達最佳效果，原始照片應正面朝鏡頭並露出耳朵。然而，作者也<strong>不建議將此功能生成的照片用於官方證件</strong>，因其屬合成照片，不符合規定，但非常適合用於學生證、員工證或履歷等非正式用途。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_16.jpg" /></p> <h2>創意玩法：證件照、背景修改與趣味生成</h2> <p>作者展示了如何利用該模型<strong>修改照片背景或文字</strong>。以舊影片封面為例，將雲朵組成的文字從「SD 3.5」修改為「Gemini 2.5 Flash」，模型成功保留雲朵排列風格並變更文字。但作者指出，模型目前<strong>無法很好地生成中文文字</strong>。在修改背景方面，模型能徹底改變場景，甚至調整<strong>畫面打光與人物光影</strong>，例如將背景改為房間窗邊的夕陽、海邊或陰暗巷弄中的發光塗鴉，效果均相當不錯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_18.jpg" /></p> <p>在基礎圖片生成方面，作者表示Gemini 2.5 Flash Image因其語言模型本質，能理解<strong>複雜的自然語言描述</strong>，因此在細節掌控上比純圖片生成模型（如Flux, Stable Diffusion）上限更高。然而，其<strong>下限也相對較低</strong>，若提示詞過於簡陋，生成的圖片品質也會相對簡陋。最後，作者分享了幾個<strong>有趣的提示詞</strong>：將照片轉化為<strong>PVC模型或公仔</strong>，背景顯示3D建模畫面；將照片轉換為<strong>3D結構設計圖</strong>，呈現物件或建築的透視拆解圖；以及將Google Map截圖轉換為<strong>遊戲主題公園風格</strong>，生成可愛的卡通化地圖。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_20.jpg" /></p> <h2>總結：優勢與使用注意事項</h2> <p>作者總結Gemini 2.5 Flash Image（Nano Banana）在<strong>修圖方面表現非常良好</strong>，尤其在多次修改人物動作、髮型、臉部光影時，<strong>臉型幾乎不會變形</strong>，展現出極高的一致性。然而，作者也指出了該模型的幾個<strong>缺點與注意事項</strong>：首先，它<strong>高度依賴詳細的提示詞</strong>，簡單的提示詞會導致圖片品質簡陋，與其他模型相比，缺乏基礎美感。其次，模型存在<strong>「矯枉過正」的內容審查</strong>，許多合法提示詞有時會被錯誤判定為違規。最後，該模型<strong>目前仍無法良好生成中文文字</strong>，甚至相較於上一代Gemini 2.0 Flash有所退步。作者鼓勵觀眾多加嘗試並分享有趣的提示詞。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_22.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># :00 Nano Banana 模型介紹</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :59 免費使用管道與額度說明</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">各位久等了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :36 圖像編輯實測：細節調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們來跟大家介紹近一段時間以來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :50 圖像編輯實測：大幅度動作與構圖變更</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家玩出各種花樣的Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :15 圖像編輯實測：姿勢調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">aka. Nano Banana模型。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :27 應用：融合多張圖片製作商品 Mockup</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">帶大家看一下這個模型它厲害在哪裡。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 應用：模特兒商品試穿</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成編輯圖片的效果如何。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :06 應用：簡易室內設計</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及可以將它應用在哪些地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :01 應用：生成證件照</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">順便跟大家分享一些我看到的有趣的提示詞。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :25 應用：修改照片背景與文字</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">相信這段時間應該不少人都有看到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 基本圖片生成能力淺談</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">網友們使用Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :21 有趣提示詞分享：PVC 公仔與 3D 建模</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成的各種人物或寵物的公仔加3D建模畫面的圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :00 有趣提示詞分享：3D 結構設計圖</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及使用Gemini 2.5 Flash Image來修圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :46 有趣提示詞分享：Google Map 轉遊戲主題公園</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改穿搭或是補全草圖等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :07 總結與使用注意事項</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它的能力主要應該說是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :42 結語</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">保持畫面和角色一致性的能力。可以說是得到了全球使用者的認可。因為不管是GPT-4O或者是Black Forest Lab。專門為編輯圖像而生的Flux Kontext。在輸入調整的目標有比較大的動作改變時。多多少少臉型都會有點改變。但Gemini 2.5 Flash Image。卻可以在角色動作與構圖大幅改變的情況下。依舊將人物的臉型保持得很好。其餘的畫面內容在修圖時也不容易發生改變。當然基於它本身是一個圓模型的緣故。它也比較可以理解複雜的自然語言描述。例如可以直接描述圖片想修改的。包含場景、打光、物品擺放位置、人物表情等各項細節。生成圖片時也一樣可以盡量詳細地描述。而不用像是使用Stable Diffusion、Flux.1 dev。等這些模型時一樣偏向於條列出各項關鍵字。根據Google官方提供的資料。Gemini 2.5 Flash Image在圖片編輯的領域。表現遠遠超過現在市面上的各種模型。包括GPT-4O、Flux Kontext。而在語言模型競技場中。Gemini 2.5 Flash Image目前也是屬於。圖片編輯以及圖片生成領域的排名第一。重點是這麼強大的模型我們還可以免費使用。只需要進到Google AI Studio中。模型選到Nano Banana就能夠免費使用。生成速度不慢且額度也給得相當多。簡單測下來生成個超過50張絕對不是問題。或是進到Gemini的網頁。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_134.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實也一樣可以使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但額度可能就沒有像在Google AI Studio一樣這麼多。雖然Google官方有公布一個。Gemini App的理論每日最大上限為100張。但它裡面有寫到會隨使用狀況而調整。所以大家有需要使用的話可以輪著用。反正兩個額度是分開算的。OK在介紹完基本訊息後。我們就來看看Gemini 2.5 Flash Image。它到底有多厲害。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我們先從編輯圖像的部分開始測起。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這邊我使用的這張圖大家可以先稍微看一下。這張圖是我用AI生的。首先我們先嘗試看看。讓它將人物的髮型從短髮變為長髮。然後這邊它生成失敗了。有時候Google AI Studio會這樣。我們就將滑鼠移到對話的右上角。點擊這個Gemini Logo的Rerun。讓它重新生成一次就好了。稍等一下就可以看到它生成出結果了。我們將它打開來比對一下。可以看到。臉型基本是完全沒有任何改變。效果非常的好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們再來試試看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">調整它的髮色。讓它頭髮變為淺黃色。一樣稍等一下。可以看到頭髮成功改變顏色了。臉型也一樣沒有任何改變。再來我們可以做更多的調整。我這邊輸入讓它的頭向檯燈的方向偏。稍等一下可以看到。它也確實有做到了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們來調整看看它的衣著。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們讓它的衣服顏色變為黑色。並且上面使用噴漆。寫著The Walking Fish。再稍等一下等它生成完後。可以看到Gemini 2.5 Flesh有成功做到了。只不過稍微有點可惜的是。它的衣服版型有一點改變。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了這些對照片的細節調整之外。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還可以對照片做更大的構圖改變。或是讓人物做更大的動作。首先我們這邊先測試。讓人物下床。然後手上拿吹風機。但這邊稍微有點可惜的是。它生成完之後的結果。它的床看起來有點詭異。斷在很奇怪的地方。那這邊我們暫時先不管它。再進行下一個測試。我們嘗試讓它將畫面拉遠。變為一個遠景。可以看到整個房間周圍的樣貌。以及更多的人身。等到它生成完。我們點開來放大一下。可以看到人物的五官及臉型。一樣維持得很好。也可以看到一些細節它處理得很不錯。像衣服上的皺褶。以及背景中的影子。然後看起來Gemini 2.5 Flesh image。判斷它應該是在一個旅館裡。再來我們試試看。讓人物開始用吹風機吹頭髮。它這邊生成的效果看起來。動作有一點點詭異。但也還在合理範圍。我們就來測試下一項東西。雖然說不知道為什麼。但我就想讓它跳起來。所以我們這邊就輸入。讓人物跳起來。稍等一下可以看到它的生成結果。它的頭髮有因為跳起來。而發生一些擺動或者被風吹到的感覺。背景中床上的影子。也有相對應的改變。當然人物的五官以及臉型。也一樣保持得很好。這張圖片玩得夠多了。我們換一張圖來玩玩看別的東西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_317.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了像剛剛那樣子。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對圖片中的元素進行一些修改。包括修改衣服。修改髮色修改髮型等。我們也可以來修改人物的姿勢。這邊我一樣上傳一張圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一步我先讓它拉遠鏡頭。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">擴圖一下。接著試試看。讓它將人物變為雙手插腰。稍等一下它完美的做到了。再來試試看。讓人物稍微向窗戶的方向轉。並且左腳勾起來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著試試看讓人物腳放下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">左手向鏡頭伸出比愛心。這次它的生成結果。雖然說看起來效果還不錯。但它其實並沒有完全遵循我的指令。人物伸出的是右手而非左手。再來我們試試其他的改變。像讓人物轉90度。它完美的做到了。讓人物背對鏡頭。它也可以做到。只不過姿勢不見了。要維持姿勢可能要額外下提示詞。以及想要的話。也可以如同一開始擴圖那樣操作一般。調整鏡頭的視角。讓它變成仰視或俯視等。OK. 對於人物的修改。我們暫時先測試到這邊。因為接下來我們還有很多其他的應用可以玩。Gemini 2.5 Flash Image. 可以支援同時處理多張圖片。並融合其中的元素。因此我們可以快速的使用它。來製作一些商品的Mockup。以及模特兒的試穿。這邊我從Mockup Design的網站上。載了個空白的紙杯下來。我們可以提供我們想要的Logo或是圖案。將兩個圖片一起丟給Gemini 2.5 Flash Image。讓它將圖片印在紙杯上。這邊我有額外下一個要求。讓它將杯蓋改為黑色。稍等一下可以看到它生成的結果。有做到我的要求。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外我有再載一個空白的車的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">試試看讓它使用我提供的圖片。來貼膜的效果如何。可以看到它處理的效果還算是不錯。就是窗戶這邊的處理稍微有點瑕疵。以及車頭的部分被截掉了。這邊我們再跟它對話一次。稍微調整一下。跟它說窗戶不需要塗裝並且車頭被截掉了。請讓整台車都顯示出來。就可以得到一張完整的成品圖。類似的用法也可以用在模特兒的試穿。這邊我們只需要提供給Gemini 2.5 Flash Image。模特兒的圖片。加上商品的圖片。我們就可以指定。模特兒使用什麼樣的方式。來試穿我們的商品。像這邊我提供的是模特兒加一個包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一個是讓她手持包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二個是讓她將包包掛在肩上。成品的效果都還不錯。讓模特兒試穿衣服的做法也是一樣。傳入兩張圖片。並且指定。讓人物穿上圖片中的衣服。這邊我們當然也還是一樣。可以再稍微調整一下視角。或是想要的話也可以調整動作。這邊就不多做示範了。再來我們也可以拿它來做一些簡單的室內設計。我們能夠提供一個房間的空照片。然後再提供一些傢俱。讓她將傢俱放到空房間內。但這邊稍微比較可惜的是。Gemini 2.5 Flash Image. 它目前對於房間的一致性維持。表現並沒有說這麼好。像我目前這樣子將圖片一次全部丟進去。讓她將傢俱們放到第一張圖片中。並且維持第一張圖片的房間格局。但這樣做的話。雖然說傢俱通常能夠正常的融入圖片中。但不太有辦法維持房間的格局與樣式。我目前找到稍微比較穩定一點的方法。是先傳第一張圖片。並告訴她。需要將傢俱填到這張圖片的房間中。之後再提供給她傢俱的圖片。這樣子她能夠稍微比較像第一張圖片一點。但還是會有一些改變。稍微算是比較可惜。下一個要跟大家介紹的。比較實用的一件應用。就是可以拿Gemini 2.5 Flash Image。來生成證件照的圖片。有時候我們可能懶得打扮。懶得處理妝髮。穿正式服裝。再出去拍一張正式的證件照。那我們就可以透過Gemini 2.5 Flash Image。來處理我們的圖片。只要在家隨便的拍一張照片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">將它傳到Google AI Studio上。使用這個提示詞。這個提示詞它大概的意思就是。將圖片轉換為韓式護照的照片風格。純白的背景。均勻柔和的燈光面朝前方。表情自然。著裝正式。不帶任何的配件。稍等一下就可以得到一張還不錯的證件照了。當然在提供的圖片上。最好還是正面朝鏡頭。並且露出耳朵。因為沒有拍到的東西。Gemini就只能憑空想像。縱使它的人物一致性表現再好。也沒辦法還原我們沒給它的資訊。這邊還是要小小提醒一下。雖然說它生成的效果非常好。人物基本上挺形不會變形。但依舊不太建議。把它拿去申請正式的護照。或者是其他的證件。畢竟依照我們中華民國護照的照片相關規定。就會寫到禁止使用合成照片。所以這項功能所生成出來的證件照。比較適合拿來放在一些相對比較沒有這麼重要。但平常比較有可能會用到的地方。像是我們的學生證 員工證。或者是可以拿來放在履歷的照片上。下一個要來跟大家分享的應用。是可以拿它來修改照片的背景。或者是照片中的文字。這邊我拿過去介紹SD 3.5時。所生成的影片封面。來做一個測試。我們輸入提示詞。讓它將背後的雲所排成的文字。修改成Gemini 2.5 Flash。可以看到它依舊保持著是使用雲來排列。且文字有正確的改變。但相同的做法。如果我們將文字改為中文的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那目前來看它是沒有辦法很好的生出中文字的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_655.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外修改背景的部分。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">也可以做到很徹底的修改。甚至調整整個畫面的打光。這邊我要求Gemini 2.5 Flash Image。將背景改為在房間中。自然光、人站在窗戶邊。夕陽從窗外斜射進來照在人物的臉上。它成功做到了。並且光線的調整也非常的好。我們再要求將背景改成在海邊。甚至是將背景改為在陰暗的巷子。牆壁上有著會發光的塗鴉。效果也都相當的不錯。人物身上的光影也會隨著環境而改變。分享了這麼多跟編輯與修改圖片相關的應用。當然我們還是要來簡單測一下。它基本的生成圖片能力如何。但這個部分我就不像過去測試圖片生成模型那樣。拿出來與其他圖片生成模型進行比較了。因為經過我實測下來Gemini 2.5 Flash Image。可能基於它是一個語言模型的緣故。它能夠理解較為複雜的自然語言描述。相較於Flux, Stable Diffusion。這一類純圖片的生成模型。我們可以描述並且掌控更多圖片的細節。整體來說它生成圖片的上限會更高。但相對的,它生成圖片的下限也很低。它對我們的描述並不會做過多的潤飾。描述得很簡單,它就生成很簡單的圖給我們。所以這邊就只給大家稍微看一下。我生成出來的圖片大約長什麼樣子。影片的最後就來跟大家分享一下。在網路上看到的一些有趣的提示詞。它也許不是那麼的實用。但生成出來的圖片效果很有趣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_749.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以玩一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是前一段時間非常流行的。將照片轉為PVC模型或公仔。然後在背景螢幕上顯示3D建模的結果。我們將包含我們主角的圖片。傳到Google AI Studio之後。貼上這一串指令。然後直接送出,等待它生成的結果。通常來說這個提示詞不需要測試太多次。一次就能成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只不過它背後電腦上的建模畫面。可能有時候會稍微不太精細。或者是稍微有點變形。那麼這個時候我們可以再給它重新生成一下。再來是一個有趣的。將照片轉換為3D結構設計圖的圖片。這個提示詞的生成效果。我直接測試給大家看好了。這邊我們貼上我們想轉換的東西。我先貼個剛剛從Mockup Designs。寫下來的空白車子圖片。然後貼上提示詞。稍等一下。我們可以看到它生成出來的這個圖片。就像是一個3D透視以及拆解出來的圖片。甚至上面還有一些標註。當然這張圖片它就只是好玩。然後看起來有趣而已。它跟實際的設計完全沒有任何的關係。我們也可以將它用在建築上。這邊我就貼上前一段時間去澎湖出差時。所拍下的澎湖醫院的照片。它也可以給出一個效果不錯的3D結構圖。甚至連那台巴士都一起被解構了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_828.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後是將Google Map截圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">並將上面的地標轉換為遊戲主題公園風格。我這邊貼上我讀的大學的Google Map截圖。讓它跑一下。可以看到它生成出來的效果。看起來還蠻可愛的。雖然說它實際上生出來的東西。跟我們大學的內部結構完全不一樣就是了。但就是看起來蠻有趣。OK. 影片的最後稍微來做一下簡單的統整。Gemini 2.5 Flash Image. aka Nano Banana. 它在修圖的方面表現非常良好。尤其是人物一致性的部分。在多次修改甚至有動到頭髮以及臉部的光影時。臉型也幾乎都不會發生改變。但當然這邊也是要稍微講一下。Gemini 2.5 Flash Image的小缺點。也算是提醒大家使用時需要注意的地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它本身雖然說因為是語言模型的關係。可以接收比較複雜的提示詞。這提高了它生成圖片的上限。但它生成圖片品質的下限也非常低。可以說這個模型它很吃提示詞的詳細程度。像Flex.1 Dev或Google自家的Imagen 4的模型。即便我們給的提示詞較為簡單。生成出來的圖片也多多少少會有一些基本的美感。但Gemini 2.5 Flash Image給的提示詞簡陋。生成出來的圖片通常也會很簡陋。再來就是它剛推出時就在Reddit上被網民們罵爆的。「矯枉過正」的內容審查。很多完全合法且沒有任何問題的提示詞。有時候就是被判定違反規則生不出來的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_918.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後就是目前它依然不太能生成中文字。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至應該說它生成中文字的能力還退步了。在上一代也就是Gemini 2.0 Flash時。它多多少少還能擠出幾個字。但現在幾乎就是完全生不出來。OK 以上就是今天全部的測試與分享。希望大家可以用Gemini 2.5 Flash Image。修圖或者是生成出自己滿意的圖片。如果大家有發現什麼好玩的提示詞。也歡迎在影片下方留言分享給大家看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外這支影片會這麼晚出。剛剛其實有稍微提到了。就是在前一段時間Gemini 2.5 Flash Image剛出時。我剛好在澎湖出差。所以那個時候就只有簡單發個貼文。測試一下效果給大家看。現在才拍出正式的影片。OK 那麼各位觀眾。我們就。下支影片見。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><p>實測 Google 最新免費 AI 模型 Gemini 2.5 Flash Image (aka. Nano Banana)，它在修圖時保持人物臉部一致性的能力完勝 GPT-4o！本文將帶你從零開始，完整教學12個超實用技巧與創意玩法，包含一鍵生成證件照、商品試穿、室內設計，並分享爆紅的3D公仔提示詞。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>Google AI Studio: </p><p><a href="https://aistudio.google.com/prompts">https://aistudio.google.com/prompts</a></p><p></p><p>Gemini 網頁版: </p><p><a href="https://gemini.google.com/app">https://gemini.google.com/app</a></p><p></p><p>Gemini App 每日生成圖片上限: </p><p><a href="https://support.google.com/gemini/answer/16275805?hl=en">https://support.google.com/gemini/answer/16275805?hl=en</a></p><p></p><p>語言模型競技場: </p><p><a href="https://lmarena.ai/">https://lmarena.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-2.5-flash-image/">https://the-walking-fish.com/p/gemini-2.5-flash-image/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00:00 Nano Banana 模型介紹</p><p>00:01:59 免費使用管道與額度說明</p><p>00:02:36 圖像編輯實測：細節調整</p><p>00:03:50 圖像編輯實測：大幅度動作與構圖變更</p><p>00:05:15 圖像編輯實測：姿勢調整</p><p>00:06:27 應用：融合多張圖片製作商品 Mockup</p><p>00:07:30 應用：模特兒商品試穿</p><p>00:08:06 應用：簡易室內設計</p><p>00:09:01 應用：生成證件照</p><p>00:10:25 應用：修改照片背景與文字</p><p>00:11:30 基本圖片生成能力淺談</p><p>00:12:21 有趣提示詞分享：PVC 公仔與 3D 建模</p><p>00:13:00 有趣提示詞分享：3D 結構設計圖</p><p>00:13:46 有趣提示詞分享：Google Map 轉遊戲主題公園</p><p>00:14:07 總結與使用注意事項</p><p>00:15:42 結語</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/iZlMmpoMT7Q/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解Gemini 2.5 Flash Image（又稱Nano Banana模型）如何憑藉其卓越的<strong>人物一致性維持能力</strong>，在圖像編輯領域超越其他頂尖模型。</li> <li>探索該模型在<strong>髮型、服裝、姿勢修改、商品模擬、模特兒試穿</strong>，乃至<strong>證件照生成</strong>等多元應用，極大提升工作效率與創意表現。</li> <li>學習如何免費使用這項強大的AI工具，並透過實際案例了解其優勢與潛在限制，包括如何運用<strong>複雜自然語言</strong>來掌控圖片細節。</li> </ul> <hr /> <h1>摘要</h1> <h2>介紹：超越現有模型的圖像編輯利器</h2> <p>這段影片介紹了近期備受矚目的<strong>Gemini 2.5 Flash Image</strong>模型，又稱「Nano Banana模型」。作者指出，該模型最為人稱道的能力是其在<strong>保持畫面與角色一致性</strong>方面的卓越表現。相較於GPT-4O或Flux Kontext等模型，Gemini 2.5 Flash Image能在人物動作與構圖大幅改變的情況下，依然<strong>精確保持臉型</strong>，並且在修圖時不容易改變其餘畫面內容。作者強調，該模型能夠理解<strong>複雜的自然語言描述</strong>，允許使用者描述場景、打光、物品擺放位置、人物表情等細節，而無需像其他模型那樣偏向條列式關鍵字。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_160.jpg" /></p> <p>根據Google官方資料，Gemini 2.5 Flash Image在圖片編輯領域的表現超越目前市面上的各種模型，並在語言模型競技場中位居圖片編輯與圖片生成領域的<strong>排名第一</strong>。更重要的是，這項強大模型<strong>可供使用者免費使用</strong>，透過Google AI Studio選擇Nano Banana模型即可，生成速度快且額度充足，或是在Gemini網頁版上也能體驗，但AI Studio的額度更為豐厚。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_180.jpg" /></p> <h2>實測：令人驚艷的人物編輯能力</h2> <p>作者首先從編輯圖像開始測試，展示了該模型在<strong>人物髮型修改</strong>（短髮變長髮、髮色改變）上的完美效果，<strong>人物臉型基本沒有任何改變</strong>。接著，作者測試了<strong>調整頭部偏向</strong>、<strong>衣著顏色與圖案修改</strong>，Gemini 2.5 Flash Image都能成功執行，儘管衣著版型有時會略有變化。甚至在進行<strong>更大構圖改變或人物動作調整</strong>時，例如讓人物下床、手上拿吹風機，或將畫面拉遠變為遠景，模型也能維持<strong>人物五官與臉型的高度一致性</strong>，並處理好背景細節。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_480.jpg" /></p> <p>在進一步的測試中，作者讓人物做出了<strong>吹頭髮、跳起來</strong>等動作，模型均能生成合理的效果，跳起來時頭髮擺動及背景影子變化等細節也被捕捉。隨後，作者換圖展示了<strong>人物姿勢的修改能力</strong>，包括雙手插腰、身體轉向窗戶、左腳勾起等，模型都能完美執行。雖然在「左手伸出比愛心」的指令中，模型生成了右手，但整體表現依然令人滿意。此外，模型也能實現<strong>人物轉90度、背對鏡頭</strong>，以及調整鏡頭視角如<strong>仰視或俯視</strong>。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_650.jpg" /></p> <h2>進階應用：從產品設計到個人形象</h2> <p>Gemini 2.5 Flash Image支援<strong>同時處理多張圖片並融合元素</strong>。作者演示了如何快速製作<strong>商品模擬圖（Mockup）和模特兒試穿</strong>。將商品Logo與空白紙杯圖片一同上傳，模型能精確地將Logo印在杯子上並修改杯蓋顏色。同樣，也能將提供的圖片作為車輛貼膜，處理效果良好，若有瑕疵也能透過對話進一步調整。在模特兒試穿方面，只需提供模特兒和商品的圖片，模型就能依指令讓模特兒<strong>手持或肩掛包包</strong>，甚至<strong>穿上指定衣服</strong>，且可調整視角和動作。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_810.jpg" /></p> <p>在<strong>室內設計應用</strong>方面，作者嘗試提供空房間照片與傢俱圖片，讓模型將傢俱置入。雖然模型在維持房間一致性方面表現不如人物一致性，可能會改變格局，但作者發現先提供房間圖片再提供傢俱圖片，可稍微提高穩定性。接著，作者介紹了一項實用功能：<strong>證件照生成</strong>。透過將隨意拍攝的照片上傳，並搭配特定提示詞（如韓式護照風格、純白背景、柔和燈光、面朝前方、著裝正式），模型能生成出<strong>高品質的證件照</strong>。作者提醒，為達最佳效果，原始照片應正面朝鏡頭並露出耳朵。然而，作者也<strong>不建議將此功能生成的照片用於官方證件</strong>，因其屬合成照片，不符合規定，但非常適合用於學生證、員工證或履歷等非正式用途。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_16.jpg" /></p> <h2>創意玩法：證件照、背景修改與趣味生成</h2> <p>作者展示了如何利用該模型<strong>修改照片背景或文字</strong>。以舊影片封面為例，將雲朵組成的文字從「SD 3.5」修改為「Gemini 2.5 Flash」，模型成功保留雲朵排列風格並變更文字。但作者指出，模型目前<strong>無法很好地生成中文文字</strong>。在修改背景方面，模型能徹底改變場景，甚至調整<strong>畫面打光與人物光影</strong>，例如將背景改為房間窗邊的夕陽、海邊或陰暗巷弄中的發光塗鴉，效果均相當不錯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_18.jpg" /></p> <p>在基礎圖片生成方面，作者表示Gemini 2.5 Flash Image因其語言模型本質，能理解<strong>複雜的自然語言描述</strong>，因此在細節掌控上比純圖片生成模型（如Flux, Stable Diffusion）上限更高。然而，其<strong>下限也相對較低</strong>，若提示詞過於簡陋，生成的圖片品質也會相對簡陋。最後，作者分享了幾個<strong>有趣的提示詞</strong>：將照片轉化為<strong>PVC模型或公仔</strong>，背景顯示3D建模畫面；將照片轉換為<strong>3D結構設計圖</strong>，呈現物件或建築的透視拆解圖；以及將Google Map截圖轉換為<strong>遊戲主題公園風格</strong>，生成可愛的卡通化地圖。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_20.jpg" /></p> <h2>總結：優勢與使用注意事項</h2> <p>作者總結Gemini 2.5 Flash Image（Nano Banana）在<strong>修圖方面表現非常良好</strong>，尤其在多次修改人物動作、髮型、臉部光影時，<strong>臉型幾乎不會變形</strong>，展現出極高的一致性。然而，作者也指出了該模型的幾個<strong>缺點與注意事項</strong>：首先，它<strong>高度依賴詳細的提示詞</strong>，簡單的提示詞會導致圖片品質簡陋，與其他模型相比，缺乏基礎美感。其次，模型存在<strong>「矯枉過正」的內容審查</strong>，許多合法提示詞有時會被錯誤判定為違規。最後，該模型<strong>目前仍無法良好生成中文文字</strong>，甚至相較於上一代Gemini 2.0 Flash有所退步。作者鼓勵觀眾多加嘗試並分享有趣的提示詞。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_22.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># :00 Nano Banana 模型介紹</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :59 免費使用管道與額度說明</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">各位久等了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :36 圖像編輯實測：細節調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們來跟大家介紹近一段時間以來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :50 圖像編輯實測：大幅度動作與構圖變更</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家玩出各種花樣的Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :15 圖像編輯實測：姿勢調整</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">aka. Nano Banana模型。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :27 應用：融合多張圖片製作商品 Mockup</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">帶大家看一下這個模型它厲害在哪裡。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 應用：模特兒商品試穿</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成編輯圖片的效果如何。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :06 應用：簡易室內設計</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及可以將它應用在哪些地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :01 應用：生成證件照</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">順便跟大家分享一些我看到的有趣的提示詞。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :25 應用：修改照片背景與文字</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">相信這段時間應該不少人都有看到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :30 基本圖片生成能力淺談</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">網友們使用Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :21 有趣提示詞分享：PVC 公仔與 3D 建模</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">生成的各種人物或寵物的公仔加3D建模畫面的圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :00 有趣提示詞分享：3D 結構設計圖</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以及使用Gemini 2.5 Flash Image來修圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :46 有趣提示詞分享：Google Map 轉遊戲主題公園</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改穿搭或是補全草圖等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :07 總結與使用注意事項</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它的能力主要應該說是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/iZlMmpoMT7Q&t=0" target="_blank"><strong># :42 結語</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">保持畫面和角色一致性的能力。可以說是得到了全球使用者的認可。因為不管是GPT-4O或者是Black Forest Lab。專門為編輯圖像而生的Flux Kontext。在輸入調整的目標有比較大的動作改變時。多多少少臉型都會有點改變。但Gemini 2.5 Flash Image。卻可以在角色動作與構圖大幅改變的情況下。依舊將人物的臉型保持得很好。其餘的畫面內容在修圖時也不容易發生改變。當然基於它本身是一個圓模型的緣故。它也比較可以理解複雜的自然語言描述。例如可以直接描述圖片想修改的。包含場景、打光、物品擺放位置、人物表情等各項細節。生成圖片時也一樣可以盡量詳細地描述。而不用像是使用Stable Diffusion、Flux.1 dev。等這些模型時一樣偏向於條列出各項關鍵字。根據Google官方提供的資料。Gemini 2.5 Flash Image在圖片編輯的領域。表現遠遠超過現在市面上的各種模型。包括GPT-4O、Flux Kontext。而在語言模型競技場中。Gemini 2.5 Flash Image目前也是屬於。圖片編輯以及圖片生成領域的排名第一。重點是這麼強大的模型我們還可以免費使用。只需要進到Google AI Studio中。模型選到Nano Banana就能夠免費使用。生成速度不慢且額度也給得相當多。簡單測下來生成個超過50張絕對不是問題。或是進到Gemini的網頁。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_134.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實也一樣可以使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但額度可能就沒有像在Google AI Studio一樣這麼多。雖然Google官方有公布一個。Gemini App的理論每日最大上限為100張。但它裡面有寫到會隨使用狀況而調整。所以大家有需要使用的話可以輪著用。反正兩個額度是分開算的。OK在介紹完基本訊息後。我們就來看看Gemini 2.5 Flash Image。它到底有多厲害。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我們先從編輯圖像的部分開始測起。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這邊我使用的這張圖大家可以先稍微看一下。這張圖是我用AI生的。首先我們先嘗試看看。讓它將人物的髮型從短髮變為長髮。然後這邊它生成失敗了。有時候Google AI Studio會這樣。我們就將滑鼠移到對話的右上角。點擊這個Gemini Logo的Rerun。讓它重新生成一次就好了。稍等一下就可以看到它生成出結果了。我們將它打開來比對一下。可以看到。臉型基本是完全沒有任何改變。效果非常的好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們再來試試看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">調整它的髮色。讓它頭髮變為淺黃色。一樣稍等一下。可以看到頭髮成功改變顏色了。臉型也一樣沒有任何改變。再來我們可以做更多的調整。我這邊輸入讓它的頭向檯燈的方向偏。稍等一下可以看到。它也確實有做到了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們來調整看看它的衣著。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們讓它的衣服顏色變為黑色。並且上面使用噴漆。寫著The Walking Fish。再稍等一下等它生成完後。可以看到Gemini 2.5 Flesh有成功做到了。只不過稍微有點可惜的是。它的衣服版型有一點改變。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了這些對照片的細節調整之外。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還可以對照片做更大的構圖改變。或是讓人物做更大的動作。首先我們這邊先測試。讓人物下床。然後手上拿吹風機。但這邊稍微有點可惜的是。它生成完之後的結果。它的床看起來有點詭異。斷在很奇怪的地方。那這邊我們暫時先不管它。再進行下一個測試。我們嘗試讓它將畫面拉遠。變為一個遠景。可以看到整個房間周圍的樣貌。以及更多的人身。等到它生成完。我們點開來放大一下。可以看到人物的五官及臉型。一樣維持得很好。也可以看到一些細節它處理得很不錯。像衣服上的皺褶。以及背景中的影子。然後看起來Gemini 2.5 Flesh image。判斷它應該是在一個旅館裡。再來我們試試看。讓人物開始用吹風機吹頭髮。它這邊生成的效果看起來。動作有一點點詭異。但也還在合理範圍。我們就來測試下一項東西。雖然說不知道為什麼。但我就想讓它跳起來。所以我們這邊就輸入。讓人物跳起來。稍等一下可以看到它的生成結果。它的頭髮有因為跳起來。而發生一些擺動或者被風吹到的感覺。背景中床上的影子。也有相對應的改變。當然人物的五官以及臉型。也一樣保持得很好。這張圖片玩得夠多了。我們換一張圖來玩玩看別的東西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_317.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了像剛剛那樣子。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對圖片中的元素進行一些修改。包括修改衣服。修改髮色修改髮型等。我們也可以來修改人物的姿勢。這邊我一樣上傳一張圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一步我先讓它拉遠鏡頭。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">擴圖一下。接著試試看。讓它將人物變為雙手插腰。稍等一下它完美的做到了。再來試試看。讓人物稍微向窗戶的方向轉。並且左腳勾起來。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著試試看讓人物腳放下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">左手向鏡頭伸出比愛心。這次它的生成結果。雖然說看起來效果還不錯。但它其實並沒有完全遵循我的指令。人物伸出的是右手而非左手。再來我們試試其他的改變。像讓人物轉90度。它完美的做到了。讓人物背對鏡頭。它也可以做到。只不過姿勢不見了。要維持姿勢可能要額外下提示詞。以及想要的話。也可以如同一開始擴圖那樣操作一般。調整鏡頭的視角。讓它變成仰視或俯視等。OK. 對於人物的修改。我們暫時先測試到這邊。因為接下來我們還有很多其他的應用可以玩。Gemini 2.5 Flash Image. 可以支援同時處理多張圖片。並融合其中的元素。因此我們可以快速的使用它。來製作一些商品的Mockup。以及模特兒的試穿。這邊我從Mockup Design的網站上。載了個空白的紙杯下來。我們可以提供我們想要的Logo或是圖案。將兩個圖片一起丟給Gemini 2.5 Flash Image。讓它將圖片印在紙杯上。這邊我有額外下一個要求。讓它將杯蓋改為黑色。稍等一下可以看到它生成的結果。有做到我的要求。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外我有再載一個空白的車的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">試試看讓它使用我提供的圖片。來貼膜的效果如何。可以看到它處理的效果還算是不錯。就是窗戶這邊的處理稍微有點瑕疵。以及車頭的部分被截掉了。這邊我們再跟它對話一次。稍微調整一下。跟它說窗戶不需要塗裝並且車頭被截掉了。請讓整台車都顯示出來。就可以得到一張完整的成品圖。類似的用法也可以用在模特兒的試穿。這邊我們只需要提供給Gemini 2.5 Flash Image。模特兒的圖片。加上商品的圖片。我們就可以指定。模特兒使用什麼樣的方式。來試穿我們的商品。像這邊我提供的是模特兒加一個包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一個是讓她手持包包。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二個是讓她將包包掛在肩上。成品的效果都還不錯。讓模特兒試穿衣服的做法也是一樣。傳入兩張圖片。並且指定。讓人物穿上圖片中的衣服。這邊我們當然也還是一樣。可以再稍微調整一下視角。或是想要的話也可以調整動作。這邊就不多做示範了。再來我們也可以拿它來做一些簡單的室內設計。我們能夠提供一個房間的空照片。然後再提供一些傢俱。讓她將傢俱放到空房間內。但這邊稍微比較可惜的是。Gemini 2.5 Flash Image. 它目前對於房間的一致性維持。表現並沒有說這麼好。像我目前這樣子將圖片一次全部丟進去。讓她將傢俱們放到第一張圖片中。並且維持第一張圖片的房間格局。但這樣做的話。雖然說傢俱通常能夠正常的融入圖片中。但不太有辦法維持房間的格局與樣式。我目前找到稍微比較穩定一點的方法。是先傳第一張圖片。並告訴她。需要將傢俱填到這張圖片的房間中。之後再提供給她傢俱的圖片。這樣子她能夠稍微比較像第一張圖片一點。但還是會有一些改變。稍微算是比較可惜。下一個要跟大家介紹的。比較實用的一件應用。就是可以拿Gemini 2.5 Flash Image。來生成證件照的圖片。有時候我們可能懶得打扮。懶得處理妝髮。穿正式服裝。再出去拍一張正式的證件照。那我們就可以透過Gemini 2.5 Flash Image。來處理我們的圖片。只要在家隨便的拍一張照片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">將它傳到Google AI Studio上。使用這個提示詞。這個提示詞它大概的意思就是。將圖片轉換為韓式護照的照片風格。純白的背景。均勻柔和的燈光面朝前方。表情自然。著裝正式。不帶任何的配件。稍等一下就可以得到一張還不錯的證件照了。當然在提供的圖片上。最好還是正面朝鏡頭。並且露出耳朵。因為沒有拍到的東西。Gemini就只能憑空想像。縱使它的人物一致性表現再好。也沒辦法還原我們沒給它的資訊。這邊還是要小小提醒一下。雖然說它生成的效果非常好。人物基本上挺形不會變形。但依舊不太建議。把它拿去申請正式的護照。或者是其他的證件。畢竟依照我們中華民國護照的照片相關規定。就會寫到禁止使用合成照片。所以這項功能所生成出來的證件照。比較適合拿來放在一些相對比較沒有這麼重要。但平常比較有可能會用到的地方。像是我們的學生證 員工證。或者是可以拿來放在履歷的照片上。下一個要來跟大家分享的應用。是可以拿它來修改照片的背景。或者是照片中的文字。這邊我拿過去介紹SD 3.5時。所生成的影片封面。來做一個測試。我們輸入提示詞。讓它將背後的雲所排成的文字。修改成Gemini 2.5 Flash。可以看到它依舊保持著是使用雲來排列。且文字有正確的改變。但相同的做法。如果我們將文字改為中文的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那目前來看它是沒有辦法很好的生出中文字的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_655.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外修改背景的部分。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">也可以做到很徹底的修改。甚至調整整個畫面的打光。這邊我要求Gemini 2.5 Flash Image。將背景改為在房間中。自然光、人站在窗戶邊。夕陽從窗外斜射進來照在人物的臉上。它成功做到了。並且光線的調整也非常的好。我們再要求將背景改成在海邊。甚至是將背景改為在陰暗的巷子。牆壁上有著會發光的塗鴉。效果也都相當的不錯。人物身上的光影也會隨著環境而改變。分享了這麼多跟編輯與修改圖片相關的應用。當然我們還是要來簡單測一下。它基本的生成圖片能力如何。但這個部分我就不像過去測試圖片生成模型那樣。拿出來與其他圖片生成模型進行比較了。因為經過我實測下來Gemini 2.5 Flash Image。可能基於它是一個語言模型的緣故。它能夠理解較為複雜的自然語言描述。相較於Flux, Stable Diffusion。這一類純圖片的生成模型。我們可以描述並且掌控更多圖片的細節。整體來說它生成圖片的上限會更高。但相對的,它生成圖片的下限也很低。它對我們的描述並不會做過多的潤飾。描述得很簡單,它就生成很簡單的圖給我們。所以這邊就只給大家稍微看一下。我生成出來的圖片大約長什麼樣子。影片的最後就來跟大家分享一下。在網路上看到的一些有趣的提示詞。它也許不是那麼的實用。但生成出來的圖片效果很有趣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_749.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以玩一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是前一段時間非常流行的。將照片轉為PVC模型或公仔。然後在背景螢幕上顯示3D建模的結果。我們將包含我們主角的圖片。傳到Google AI Studio之後。貼上這一串指令。然後直接送出,等待它生成的結果。通常來說這個提示詞不需要測試太多次。一次就能成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只不過它背後電腦上的建模畫面。可能有時候會稍微不太精細。或者是稍微有點變形。那麼這個時候我們可以再給它重新生成一下。再來是一個有趣的。將照片轉換為3D結構設計圖的圖片。這個提示詞的生成效果。我直接測試給大家看好了。這邊我們貼上我們想轉換的東西。我先貼個剛剛從Mockup Designs。寫下來的空白車子圖片。然後貼上提示詞。稍等一下。我們可以看到它生成出來的這個圖片。就像是一個3D透視以及拆解出來的圖片。甚至上面還有一些標註。當然這張圖片它就只是好玩。然後看起來有趣而已。它跟實際的設計完全沒有任何的關係。我們也可以將它用在建築上。這邊我就貼上前一段時間去澎湖出差時。所拍下的澎湖醫院的照片。它也可以給出一個效果不錯的3D結構圖。甚至連那台巴士都一起被解構了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_828.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後是將Google Map截圖。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">並將上面的地標轉換為遊戲主題公園風格。我這邊貼上我讀的大學的Google Map截圖。讓它跑一下。可以看到它生成出來的效果。看起來還蠻可愛的。雖然說它實際上生出來的東西。跟我們大學的內部結構完全不一樣就是了。但就是看起來蠻有趣。OK. 影片的最後稍微來做一下簡單的統整。Gemini 2.5 Flash Image. aka Nano Banana. 它在修圖的方面表現非常良好。尤其是人物一致性的部分。在多次修改甚至有動到頭髮以及臉部的光影時。臉型也幾乎都不會發生改變。但當然這邊也是要稍微講一下。Gemini 2.5 Flash Image的小缺點。也算是提醒大家使用時需要注意的地方。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先就是Gemini 2.5 Flash Image。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它本身雖然說因為是語言模型的關係。可以接收比較複雜的提示詞。這提高了它生成圖片的上限。但它生成圖片品質的下限也非常低。可以說這個模型它很吃提示詞的詳細程度。像Flex.1 Dev或Google自家的Imagen 4的模型。即便我們給的提示詞較為簡單。生成出來的圖片也多多少少會有一些基本的美感。但Gemini 2.5 Flash Image給的提示詞簡陋。生成出來的圖片通常也會很簡陋。再來就是它剛推出時就在Reddit上被網民們罵爆的。「矯枉過正」的內容審查。很多完全合法且沒有任何問題的提示詞。有時候就是被判定違反規則生不出來的圖片。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/iZlMmpoMT7Q_918.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後就是目前它依然不太能生成中文字。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至應該說它生成中文字的能力還退步了。在上一代也就是Gemini 2.0 Flash時。它多多少少還能擠出幾個字。但現在幾乎就是完全生不出來。OK 以上就是今天全部的測試與分享。希望大家可以用Gemini 2.5 Flash Image。修圖或者是生成出自己滿意的圖片。如果大家有發現什麼好玩的提示詞。也歡迎在影片下方留言分享給大家看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外這支影片會這麼晚出。剛剛其實有稍微提到了。就是在前一段時間Gemini 2.5 Flash Image剛出時。我剛好在澎湖出差。所以那個時候就只有簡單發個貼文。測試一下效果給大家看。現在才拍出正式的影片。OK 那麼各位觀眾。我們就。下支影片見。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=iZlMmpoMT7Q">https://www.youtube.com/watch?v=iZlMmpoMT7Q</a></p><p>實測 Google 最新免費 AI 模型 Gemini 2.5 Flash Image (aka. Nano Banana)，它在修圖時保持人物臉部一致性的能力完勝 GPT-4o！本文將帶你從零開始，完整教學12個超實用技巧與創意玩法，包含一鍵生成證件照、商品試穿、室內設計，並分享爆紅的3D公仔提示詞。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>Google AI Studio: </p><p><a href="https://aistudio.google.com/prompts">https://aistudio.google.com/prompts</a></p><p></p><p>Gemini 網頁版: </p><p><a href="https://gemini.google.com/app">https://gemini.google.com/app</a></p><p></p><p>Gemini App 每日生成圖片上限: </p><p><a href="https://support.google.com/gemini/answer/16275805?hl=en">https://support.google.com/gemini/answer/16275805?hl=en</a></p><p></p><p>語言模型競技場: </p><p><a href="https://lmarena.ai/">https://lmarena.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-2.5-flash-image/">https://the-walking-fish.com/p/gemini-2.5-flash-image/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00:00 Nano Banana 模型介紹</p><p>00:01:59 免費使用管道與額度說明</p><p>00:02:36 圖像編輯實測：細節調整</p><p>00:03:50 圖像編輯實測：大幅度動作與構圖變更</p><p>00:05:15 圖像編輯實測：姿勢調整</p><p>00:06:27 應用：融合多張圖片製作商品 Mockup</p><p>00:07:30 應用：模特兒商品試穿</p><p>00:08:06 應用：簡易室內設計</p><p>00:09:01 應用：生成證件照</p><p>00:10:25 應用：修改照片背景與文字</p><p>00:11:30 基本圖片生成能力淺談</p><p>00:12:21 有趣提示詞分享：PVC 公仔與 3D 建模</p><p>00:13:00 有趣提示詞分享：3D 結構設計圖</p><p>00:13:46 有趣提示詞分享：Google Map 轉遊戲主題公園</p><p>00:14:07 總結與使用注意事項</p><p>00:15:42 結語</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/iZlMmpoMT7Q/hqdefault.jpg"/>
      <pubDate>2025-09-28T14:01:09.000Z</pubDate>
    </item><item>
      <title><![CDATA[【免費AI證書】Google Gemini 教師認證開放！不只老師能考，20分鐘為你的履歷加分！]]></title>
      <link>https://www.youtube.com/watch?v=aVVMcliYJIw</link>
      <itunes:title><![CDATA[【免費AI證書】Google Gemini 教師認證開放！不只老師能考，20分鐘為你的履歷加分！]]></itunes:title>
      <itunes:author><![CDATA[The walking fish 步行魚]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/aVVMcliYJIw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><h1>值得閱讀的理由</h1><ul><li>了解如何免費獲得 Google Gemini 認證教師證書，提升個人專業技能。</li><li>深入理解 Google 在推廣 <strong>AI 負責任使用</strong>及<strong>AI 應用於教育</strong>領域的重點。</li><li>快速掌握考試內容與常見題型，為有意報考者提供實用準備方向。</li></ul><hr /><h1>摘要</h1><h2>引言與認證簡介</h2><p><strong>作者</strong>分享了 Google 最近推出的「<strong>Gemini 認證教師證書</strong>」，旨在推廣 <strong>AI 的負責任使用</strong>及將 <strong>AI 應用於教育</strong>。這張證書雖然名為「教師認證」，但並未限制報考者身份，所有人皆可參與，藉此驗證對 Google <strong>Gemini</strong> 及 <strong>NotebookLM</strong> 等工具的理解程度。這項考試僅有 37 題，<strong>作者</strong>約花 20 分鐘完成，建議有興趣的觀眾不妨一試，多一份免費證書。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_30.jpg" /></p><h2>認證目標與能力面向</h2><p>該證書的目標受眾為 K12 教師（幼稚園、小學、國高中），但 Google 未來也規劃為大學生及高中以下學生推出相關認證。本次教師認證主要驗證四個面向的能力：如何<strong>有效應用 Gemini 與 NotebookLM 提升工作效率</strong>；如何下 <strong>Prompt</strong> 使 AI 生成內容符合需求；對 <strong>Google Gemini</strong> 及 <strong>NotebookLM 功能的了解程度</strong>；以及如何<strong>將 AI 融入教學</strong>，並引導學生負責任地使用 AI。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p><h2>證書獲取流程</h2><p>要獲取這張證書，需先造訪 <code>educertifications.google</code> 網站並登入 Google 帳號。接著點擊「Gemini Educator」考試註冊，填寫基本資料並勾選底部兩項同意聲明後即可進入考試。<strong>作者</strong>指出，目前考試語言僅提供英文，建議可搭配翻譯工具輔助閱讀，如「沉浸式翻譯」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_140.jpg" /></p><h2>考試內容與實例解析</h2><p>影片中，<strong>作者</strong>舉例說明了幾道考題。例如，當 AI 總結歷史事件並給出可疑日期時，最佳解決方案是<strong>驗證資訊的真實性</strong>，因為 AI 存在「幻覺」問題。其他題目包括教師如何幫助學生理解 AI 輸出可能含有錯誤訊息或偏見，以及 <strong>NotebookLM</strong> 的語音摘要功能是否可調整音訊長度（答案為「是」）。此外，考題也涵蓋了 <strong>NotebookLM</strong> 的「<strong>學習指南</strong>」等基本功能操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_230.jpg" /></p><h2>進階考題與道德議題</h2><p>更深入的考題探討了如何利用 <strong>Gemini 減少行政文書工作</strong>，以及學生使用 AI 輔助或生成功課報告的<strong>道德問題</strong>。對於後者，教師能做的就是要求學生若有使用 AI 進行腦力激盪或起草，需<strong>註明引用</strong>。還有題目是關於新教練如何利用 <strong>NotebookLM 結合戰術手冊與比賽摘要</strong>，分析出最成功的戰術。<strong>作者</strong>表示，熟悉 Google AI 工具的觀眾應能輕鬆作答。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_5.jpg" /></p><h2>考試結果與證書取得</h2><p><strong>作者</strong>在考試中僅答錯一題，原因為看錯題目中的「不適合」。考完後，Google 會將證書連結寄送到註冊的 Email 中。這張證書<strong>效期為三年</strong>，可下載為 PDF 或公開分享。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_6.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># Gemini 教師認證是什麼？</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。今天來跟大家分享一個消息。Google 最近推出了 Gemini 認證教師的證書。主要算是在推廣如何負責任的使用AI。以及應當使用什麼方式。將AI應用在教育方面。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來帶大家簡單看一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如何獲得這張免費的證書。以及大約看一下。它考試裡面的內容是在問些什麼。當然 雖然今天這個證書叫做。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_23.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=23" target="_blank"><strong># 誰適合考？考試內容與難度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Gemini 認證教師證書。但它並沒有限制只有教師才能夠獲得。它的考試內容也能夠稍微驗證一下。我們對AI的理解。主要是對Google的 Gemini 以及 NotebookLM。這兩個方便的工具它的熟悉程度。所以有興趣的觀眾。建議大家都可以稍微考一下。它考起來並不難。總共只有37題。我大概花20分鐘左右的時間就考完了。就當作多拿一份免費的證書。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_50.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=50" target="_blank"><strong># 證照目標對象與四大驗證能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這次的證照(證書)它的目標對象。是提供給K12的教師。也就是幼稚園 小學 國高中的教師。但Google並沒有限制只有教師才能夠報考。未來也有規劃要推出大學生與高中以下學生的 Gemini 認證。而本次的教師認證。它主要要驗證的能力分為四個面向。分別為如何有效的應用 Gemini 與 NotebookLM 提升工作效率。如何下Prompt讓AI的生成符合需求。對Google Gemini 以及 NotebookLM的功能了解程度。以及如何將AI融入教學。並引導學生負責任的使用AI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=85" target="_blank"><strong># 手把手教學：如何註冊考試？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們就來看看如何獲得這張證書。首先我們需要先進到這個網頁。educertifications.google. 這個網頁最開始會叫我們要先登入Google帳號。登入後我們就可以看到目前下方。有一個 Gemini Educator 的考試可以註冊。點下去後。它會先要求我們要填入一些基本資訊。這些大致填一下就好了。不影響後續的考試。填完後滾到底部。在送出前我們要勾選底部兩個Checkbox。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只需要勾選底部兩個就好了。上面兩個是問你願不願意收到新聞以及被聯絡。進到下一步。這邊我們就可以按 Take Exam。然後它的語言目前就只有英文。這邊有一個比較麻煩的事情。不知道未來Google會不會把它整合好。但我們按下 Take Exam。進到下一個頁面後。我們還需要再重新填一次。我們剛剛填過的基本資料。就有點不知道到底在幹嘛。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之這些資料都填完之後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們終於可以點進 Gemini Certification for Educators 的測驗。開始考取這張證書了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_145.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=145" target="_blank"><strong># 正式測驗開始！考試介面與翻譯技巧</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">點進來之後可以看到。因為它目前只有英文這個語言選項。大家可以當作練練英文。或者是如果真的不想讀英文的話。就直接開翻譯吧。推薦大家可以用我之前介紹過的沉浸式翻譯。讓我們在它翻譯出來的東西有點怪怪的。看不太懂時。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還可以比對一下原文。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_163.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=163" target="_blank"><strong># 考試題目解析 (1)：AI 幻覺與事實查核</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們來看一下它的問題。這邊它的問題是。一位老師要求生成式AI。總結一個歷史事件。但裡面提到了一場戰役的具體日期。但老師覺得這個日期怪怪的。應該怎麼解決比較好。這邊最好的解決方式當然就是。要再去驗證這些資訊的真實性。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由於AI多少會有一些幻覺的問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它所提供的具體數字、具體日期。有時候會出一些差錯。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那我們就需要再去驗證一下。這些日期是否是正確的。甚至有一些模型幻覺比較嚴重的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還會自己瞎掰一些歷史事件。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_195.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=195" target="_blank"><strong># 考試題目解析 (2)：教育應用與 NotebookLM 功能</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們看到下一題。這邊它的內容就比較偏向教育方面了。問教師要如何幫助學生了解。AI的輸出可能包含錯誤的訊息或是偏見。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來下一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它要問的是 NotebookLM 的語音摘要。是否可以調整它生成的音訊長短。答案是「是」。它沒有什麼好疑問的。最開始版本的語音摘要。我們可能還要用自訂的Prompt。讓它嘗試能不能縮短一點或變長一點。但現在它已經有按鈕可以讓我們直接按了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">再來接下來就是考 NotebookLM 的基本功能。叫做學習指南。我們只需要將檔案全部都傳上去之後。在右側的報告裡點擊學習指南。讓它建立就可以了。後續的問題大約也都是這樣的類型。考使用者對Google家AI工具的了解程度。以及AI在教育領域需要解決的一些問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_242.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=242" target="_blank"><strong># 考試題目解析 (3)：AI 道德與行政應用</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我再來挑幾題我覺得比較有趣的給大家看一下。首先就是這邊這一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要如何使用 Gemini 來減少一些行政文書的工作。再來就是一個難以避免的道德問題。學生使用AI輔助。或者是直接使用AI生成功課與報告。那該怎麼辦。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那教師能做的也就只有要求學生。有使用到AI進行腦力激盪或起草的話。需要註明引用。再來是新來的教練該如何使用 NotebookLM。結合戰術手冊與上季的比賽摘要。整理出哪些戰術在比賽中最為成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對於AI議題。Google的 Gemini 與 NotebookLM 比較熟悉的觀眾。應該都可以蠻輕鬆答出來的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_281.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=281" target="_blank"><strong># 測驗結果出爐！我的分數與答錯的題目</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最終答完後提交我的總得分是錯一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">稍微有點可惜。回去看一下錄影發現是有一題我看錯了。他是問哪一項不適合。用來為學生生成單字表。但我以為是適合就直接選錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_294.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=294" target="_blank"><strong># 考完後呢？如何領取與分享證書</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在考完之後他會將證書的連結寄送到我們的Email中。至此我們就得到這張證書了。證書的效期是三年。我們可以將它以PDF下載下來。或者是將證書公開。然後分享出去。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_307.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=307" target="_blank"><strong># 影片總結</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK 以上就是今天影片全部的內容。基本上就是簡單跟大家分享一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">有這個證書可以考。那麼各位觀眾。我們就下隻影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><p>最近 Google 推出了一個免費證書 ── Gemini AI 教師認證證書，主要是考驗教師在教學領域應用AI，與引導學生正確使用AI的相關能力，也考驗對於 Gemini、NoteBookLM這些AI工具的熟悉程度。因為算是蠻有趣的，所以今天來跟大家分享一下。</p><p>(P.S. 官方說明測驗主要有3大核心領域，但因為它實際測驗的內容有稍微超出他的描述，所以影片中我才會說是4個)</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>證書報名網址:</p><p><a href="https://educertifications.google/">https://educertifications.google/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-certification-for-educators/">https://the-walking-fish.com/p/gemini-certification-for-educators/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 Gemini 教師認證是什麼？</p><p>00:23 誰適合考？考試內容與難度</p><p>00:50 證照目標對象與四大驗證能力</p><p>01:25 手把手教學：如何註冊考試？</p><p>02:25 正式測驗開始！考試介面與翻譯技巧</p><p>02:43 考試題目解析 (1)：AI 幻覺與事實查核</p><p>03:15 考試題目解析 (2)：教育應用與 NotebookLM 功能</p><p>04:02 考試題目解析 (3)：AI 道德與行政應用</p><p>04:41 測驗結果出爐！我的分數與答錯的題目</p><p>04:54 考完後呢？如何領取與分享證書</p><p>05:07 影片總結</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/aVVMcliYJIw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><h1>值得閱讀的理由</h1><ul><li>了解如何免費獲得 Google Gemini 認證教師證書，提升個人專業技能。</li><li>深入理解 Google 在推廣 <strong>AI 負責任使用</strong>及<strong>AI 應用於教育</strong>領域的重點。</li><li>快速掌握考試內容與常見題型，為有意報考者提供實用準備方向。</li></ul><hr /><h1>摘要</h1><h2>引言與認證簡介</h2><p><strong>作者</strong>分享了 Google 最近推出的「<strong>Gemini 認證教師證書</strong>」，旨在推廣 <strong>AI 的負責任使用</strong>及將 <strong>AI 應用於教育</strong>。這張證書雖然名為「教師認證」，但並未限制報考者身份，所有人皆可參與，藉此驗證對 Google <strong>Gemini</strong> 及 <strong>NotebookLM</strong> 等工具的理解程度。這項考試僅有 37 題，<strong>作者</strong>約花 20 分鐘完成，建議有興趣的觀眾不妨一試，多一份免費證書。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_30.jpg" /></p><h2>認證目標與能力面向</h2><p>該證書的目標受眾為 K12 教師（幼稚園、小學、國高中），但 Google 未來也規劃為大學生及高中以下學生推出相關認證。本次教師認證主要驗證四個面向的能力：如何<strong>有效應用 Gemini 與 NotebookLM 提升工作效率</strong>；如何下 <strong>Prompt</strong> 使 AI 生成內容符合需求；對 <strong>Google Gemini</strong> 及 <strong>NotebookLM 功能的了解程度</strong>；以及如何<strong>將 AI 融入教學</strong>，並引導學生負責任地使用 AI。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p><h2>證書獲取流程</h2><p>要獲取這張證書，需先造訪 <code>educertifications.google</code> 網站並登入 Google 帳號。接著點擊「Gemini Educator」考試註冊，填寫基本資料並勾選底部兩項同意聲明後即可進入考試。<strong>作者</strong>指出，目前考試語言僅提供英文，建議可搭配翻譯工具輔助閱讀，如「沉浸式翻譯」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_140.jpg" /></p><h2>考試內容與實例解析</h2><p>影片中，<strong>作者</strong>舉例說明了幾道考題。例如，當 AI 總結歷史事件並給出可疑日期時，最佳解決方案是<strong>驗證資訊的真實性</strong>，因為 AI 存在「幻覺」問題。其他題目包括教師如何幫助學生理解 AI 輸出可能含有錯誤訊息或偏見，以及 <strong>NotebookLM</strong> 的語音摘要功能是否可調整音訊長度（答案為「是」）。此外，考題也涵蓋了 <strong>NotebookLM</strong> 的「<strong>學習指南</strong>」等基本功能操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_230.jpg" /></p><h2>進階考題與道德議題</h2><p>更深入的考題探討了如何利用 <strong>Gemini 減少行政文書工作</strong>，以及學生使用 AI 輔助或生成功課報告的<strong>道德問題</strong>。對於後者，教師能做的就是要求學生若有使用 AI 進行腦力激盪或起草，需<strong>註明引用</strong>。還有題目是關於新教練如何利用 <strong>NotebookLM 結合戰術手冊與比賽摘要</strong>，分析出最成功的戰術。<strong>作者</strong>表示，熟悉 Google AI 工具的觀眾應能輕鬆作答。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_5.jpg" /></p><h2>考試結果與證書取得</h2><p><strong>作者</strong>在考試中僅答錯一題，原因為看錯題目中的「不適合」。考完後，Google 會將證書連結寄送到註冊的 Email 中。這張證書<strong>效期為三年</strong>，可下載為 PDF 或公開分享。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_6.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># Gemini 教師認證是什麼？</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。今天來跟大家分享一個消息。Google 最近推出了 Gemini 認證教師的證書。主要算是在推廣如何負責任的使用AI。以及應當使用什麼方式。將AI應用在教育方面。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來帶大家簡單看一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如何獲得這張免費的證書。以及大約看一下。它考試裡面的內容是在問些什麼。當然 雖然今天這個證書叫做。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_23.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=23" target="_blank"><strong># 誰適合考？考試內容與難度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Gemini 認證教師證書。但它並沒有限制只有教師才能夠獲得。它的考試內容也能夠稍微驗證一下。我們對AI的理解。主要是對Google的 Gemini 以及 NotebookLM。這兩個方便的工具它的熟悉程度。所以有興趣的觀眾。建議大家都可以稍微考一下。它考起來並不難。總共只有37題。我大概花20分鐘左右的時間就考完了。就當作多拿一份免費的證書。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_50.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=50" target="_blank"><strong># 證照目標對象與四大驗證能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這次的證照(證書)它的目標對象。是提供給K12的教師。也就是幼稚園 小學 國高中的教師。但Google並沒有限制只有教師才能夠報考。未來也有規劃要推出大學生與高中以下學生的 Gemini 認證。而本次的教師認證。它主要要驗證的能力分為四個面向。分別為如何有效的應用 Gemini 與 NotebookLM 提升工作效率。如何下Prompt讓AI的生成符合需求。對Google Gemini 以及 NotebookLM的功能了解程度。以及如何將AI融入教學。並引導學生負責任的使用AI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=85" target="_blank"><strong># 手把手教學：如何註冊考試？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們就來看看如何獲得這張證書。首先我們需要先進到這個網頁。educertifications.google. 這個網頁最開始會叫我們要先登入Google帳號。登入後我們就可以看到目前下方。有一個 Gemini Educator 的考試可以註冊。點下去後。它會先要求我們要填入一些基本資訊。這些大致填一下就好了。不影響後續的考試。填完後滾到底部。在送出前我們要勾選底部兩個Checkbox。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只需要勾選底部兩個就好了。上面兩個是問你願不願意收到新聞以及被聯絡。進到下一步。這邊我們就可以按 Take Exam。然後它的語言目前就只有英文。這邊有一個比較麻煩的事情。不知道未來Google會不會把它整合好。但我們按下 Take Exam。進到下一個頁面後。我們還需要再重新填一次。我們剛剛填過的基本資料。就有點不知道到底在幹嘛。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之這些資料都填完之後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們終於可以點進 Gemini Certification for Educators 的測驗。開始考取這張證書了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_145.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=145" target="_blank"><strong># 正式測驗開始！考試介面與翻譯技巧</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">點進來之後可以看到。因為它目前只有英文這個語言選項。大家可以當作練練英文。或者是如果真的不想讀英文的話。就直接開翻譯吧。推薦大家可以用我之前介紹過的沉浸式翻譯。讓我們在它翻譯出來的東西有點怪怪的。看不太懂時。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還可以比對一下原文。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_163.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=163" target="_blank"><strong># 考試題目解析 (1)：AI 幻覺與事實查核</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們來看一下它的問題。這邊它的問題是。一位老師要求生成式AI。總結一個歷史事件。但裡面提到了一場戰役的具體日期。但老師覺得這個日期怪怪的。應該怎麼解決比較好。這邊最好的解決方式當然就是。要再去驗證這些資訊的真實性。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由於AI多少會有一些幻覺的問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它所提供的具體數字、具體日期。有時候會出一些差錯。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那我們就需要再去驗證一下。這些日期是否是正確的。甚至有一些模型幻覺比較嚴重的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還會自己瞎掰一些歷史事件。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_195.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=195" target="_blank"><strong># 考試題目解析 (2)：教育應用與 NotebookLM 功能</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們看到下一題。這邊它的內容就比較偏向教育方面了。問教師要如何幫助學生了解。AI的輸出可能包含錯誤的訊息或是偏見。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來下一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它要問的是 NotebookLM 的語音摘要。是否可以調整它生成的音訊長短。答案是「是」。它沒有什麼好疑問的。最開始版本的語音摘要。我們可能還要用自訂的Prompt。讓它嘗試能不能縮短一點或變長一點。但現在它已經有按鈕可以讓我們直接按了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">再來接下來就是考 NotebookLM 的基本功能。叫做學習指南。我們只需要將檔案全部都傳上去之後。在右側的報告裡點擊學習指南。讓它建立就可以了。後續的問題大約也都是這樣的類型。考使用者對Google家AI工具的了解程度。以及AI在教育領域需要解決的一些問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_242.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=242" target="_blank"><strong># 考試題目解析 (3)：AI 道德與行政應用</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我再來挑幾題我覺得比較有趣的給大家看一下。首先就是這邊這一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要如何使用 Gemini 來減少一些行政文書的工作。再來就是一個難以避免的道德問題。學生使用AI輔助。或者是直接使用AI生成功課與報告。那該怎麼辦。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那教師能做的也就只有要求學生。有使用到AI進行腦力激盪或起草的話。需要註明引用。再來是新來的教練該如何使用 NotebookLM。結合戰術手冊與上季的比賽摘要。整理出哪些戰術在比賽中最為成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對於AI議題。Google的 Gemini 與 NotebookLM 比較熟悉的觀眾。應該都可以蠻輕鬆答出來的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_281.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=281" target="_blank"><strong># 測驗結果出爐！我的分數與答錯的題目</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最終答完後提交我的總得分是錯一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">稍微有點可惜。回去看一下錄影發現是有一題我看錯了。他是問哪一項不適合。用來為學生生成單字表。但我以為是適合就直接選錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_294.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=294" target="_blank"><strong># 考完後呢？如何領取與分享證書</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在考完之後他會將證書的連結寄送到我們的Email中。至此我們就得到這張證書了。證書的效期是三年。我們可以將它以PDF下載下來。或者是將證書公開。然後分享出去。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_307.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=307" target="_blank"><strong># 影片總結</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK 以上就是今天影片全部的內容。基本上就是簡單跟大家分享一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">有這個證書可以考。那麼各位觀眾。我們就下隻影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><p>最近 Google 推出了一個免費證書 ── Gemini AI 教師認證證書，主要是考驗教師在教學領域應用AI，與引導學生正確使用AI的相關能力，也考驗對於 Gemini、NoteBookLM這些AI工具的熟悉程度。因為算是蠻有趣的，所以今天來跟大家分享一下。</p><p>(P.S. 官方說明測驗主要有3大核心領域，但因為它實際測驗的內容有稍微超出他的描述，所以影片中我才會說是4個)</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>證書報名網址:</p><p><a href="https://educertifications.google/">https://educertifications.google/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-certification-for-educators/">https://the-walking-fish.com/p/gemini-certification-for-educators/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 Gemini 教師認證是什麼？</p><p>00:23 誰適合考？考試內容與難度</p><p>00:50 證照目標對象與四大驗證能力</p><p>01:25 手把手教學：如何註冊考試？</p><p>02:25 正式測驗開始！考試介面與翻譯技巧</p><p>02:43 考試題目解析 (1)：AI 幻覺與事實查核</p><p>03:15 考試題目解析 (2)：教育應用與 NotebookLM 功能</p><p>04:02 考試題目解析 (3)：AI 道德與行政應用</p><p>04:41 測驗結果出爐！我的分數與答錯的題目</p><p>04:54 考完後呢？如何領取與分享證書</p><p>05:07 影片總結</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/aVVMcliYJIw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><h1>值得閱讀的理由</h1><ul><li>了解如何免費獲得 Google Gemini 認證教師證書，提升個人專業技能。</li><li>深入理解 Google 在推廣 <strong>AI 負責任使用</strong>及<strong>AI 應用於教育</strong>領域的重點。</li><li>快速掌握考試內容與常見題型，為有意報考者提供實用準備方向。</li></ul><hr /><h1>摘要</h1><h2>引言與認證簡介</h2><p><strong>作者</strong>分享了 Google 最近推出的「<strong>Gemini 認證教師證書</strong>」，旨在推廣 <strong>AI 的負責任使用</strong>及將 <strong>AI 應用於教育</strong>。這張證書雖然名為「教師認證」，但並未限制報考者身份，所有人皆可參與，藉此驗證對 Google <strong>Gemini</strong> 及 <strong>NotebookLM</strong> 等工具的理解程度。這項考試僅有 37 題，<strong>作者</strong>約花 20 分鐘完成，建議有興趣的觀眾不妨一試，多一份免費證書。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_30.jpg" /></p><h2>認證目標與能力面向</h2><p>該證書的目標受眾為 K12 教師（幼稚園、小學、國高中），但 Google 未來也規劃為大學生及高中以下學生推出相關認證。本次教師認證主要驗證四個面向的能力：如何<strong>有效應用 Gemini 與 NotebookLM 提升工作效率</strong>；如何下 <strong>Prompt</strong> 使 AI 生成內容符合需求；對 <strong>Google Gemini</strong> 及 <strong>NotebookLM 功能的了解程度</strong>；以及如何<strong>將 AI 融入教學</strong>，並引導學生負責任地使用 AI。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p><h2>證書獲取流程</h2><p>要獲取這張證書，需先造訪 <code>educertifications.google</code> 網站並登入 Google 帳號。接著點擊「Gemini Educator」考試註冊，填寫基本資料並勾選底部兩項同意聲明後即可進入考試。<strong>作者</strong>指出，目前考試語言僅提供英文，建議可搭配翻譯工具輔助閱讀，如「沉浸式翻譯」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_140.jpg" /></p><h2>考試內容與實例解析</h2><p>影片中，<strong>作者</strong>舉例說明了幾道考題。例如，當 AI 總結歷史事件並給出可疑日期時，最佳解決方案是<strong>驗證資訊的真實性</strong>，因為 AI 存在「幻覺」問題。其他題目包括教師如何幫助學生理解 AI 輸出可能含有錯誤訊息或偏見，以及 <strong>NotebookLM</strong> 的語音摘要功能是否可調整音訊長度（答案為「是」）。此外，考題也涵蓋了 <strong>NotebookLM</strong> 的「<strong>學習指南</strong>」等基本功能操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_230.jpg" /></p><h2>進階考題與道德議題</h2><p>更深入的考題探討了如何利用 <strong>Gemini 減少行政文書工作</strong>，以及學生使用 AI 輔助或生成功課報告的<strong>道德問題</strong>。對於後者，教師能做的就是要求學生若有使用 AI 進行腦力激盪或起草，需<strong>註明引用</strong>。還有題目是關於新教練如何利用 <strong>NotebookLM 結合戰術手冊與比賽摘要</strong>，分析出最成功的戰術。<strong>作者</strong>表示，熟悉 Google AI 工具的觀眾應能輕鬆作答。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_5.jpg" /></p><h2>考試結果與證書取得</h2><p><strong>作者</strong>在考試中僅答錯一題，原因為看錯題目中的「不適合」。考完後，Google 會將證書連結寄送到註冊的 Email 中。這張證書<strong>效期為三年</strong>，可下載為 PDF 或公開分享。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_6.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># Gemini 教師認證是什麼？</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。今天來跟大家分享一個消息。Google 最近推出了 Gemini 認證教師的證書。主要算是在推廣如何負責任的使用AI。以及應當使用什麼方式。將AI應用在教育方面。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來帶大家簡單看一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如何獲得這張免費的證書。以及大約看一下。它考試裡面的內容是在問些什麼。當然 雖然今天這個證書叫做。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_23.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=23" target="_blank"><strong># 誰適合考？考試內容與難度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Gemini 認證教師證書。但它並沒有限制只有教師才能夠獲得。它的考試內容也能夠稍微驗證一下。我們對AI的理解。主要是對Google的 Gemini 以及 NotebookLM。這兩個方便的工具它的熟悉程度。所以有興趣的觀眾。建議大家都可以稍微考一下。它考起來並不難。總共只有37題。我大概花20分鐘左右的時間就考完了。就當作多拿一份免費的證書。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_50.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=50" target="_blank"><strong># 證照目標對象與四大驗證能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">這次的證照(證書)它的目標對象。是提供給K12的教師。也就是幼稚園 小學 國高中的教師。但Google並沒有限制只有教師才能夠報考。未來也有規劃要推出大學生與高中以下學生的 Gemini 認證。而本次的教師認證。它主要要驗證的能力分為四個面向。分別為如何有效的應用 Gemini 與 NotebookLM 提升工作效率。如何下Prompt讓AI的生成符合需求。對Google Gemini 以及 NotebookLM的功能了解程度。以及如何將AI融入教學。並引導學生負責任的使用AI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_85.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=85" target="_blank"><strong># 手把手教學：如何註冊考試？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們就來看看如何獲得這張證書。首先我們需要先進到這個網頁。educertifications.google. 這個網頁最開始會叫我們要先登入Google帳號。登入後我們就可以看到目前下方。有一個 Gemini Educator 的考試可以註冊。點下去後。它會先要求我們要填入一些基本資訊。這些大致填一下就好了。不影響後續的考試。填完後滾到底部。在送出前我們要勾選底部兩個Checkbox。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只需要勾選底部兩個就好了。上面兩個是問你願不願意收到新聞以及被聯絡。進到下一步。這邊我們就可以按 Take Exam。然後它的語言目前就只有英文。這邊有一個比較麻煩的事情。不知道未來Google會不會把它整合好。但我們按下 Take Exam。進到下一個頁面後。我們還需要再重新填一次。我們剛剛填過的基本資料。就有點不知道到底在幹嘛。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之這些資料都填完之後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們終於可以點進 Gemini Certification for Educators 的測驗。開始考取這張證書了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_145.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=145" target="_blank"><strong># 正式測驗開始！考試介面與翻譯技巧</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">點進來之後可以看到。因為它目前只有英文這個語言選項。大家可以當作練練英文。或者是如果真的不想讀英文的話。就直接開翻譯吧。推薦大家可以用我之前介紹過的沉浸式翻譯。讓我們在它翻譯出來的東西有點怪怪的。看不太懂時。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還可以比對一下原文。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_163.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=163" target="_blank"><strong># 考試題目解析 (1)：AI 幻覺與事實查核</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們來看一下它的問題。這邊它的問題是。一位老師要求生成式AI。總結一個歷史事件。但裡面提到了一場戰役的具體日期。但老師覺得這個日期怪怪的。應該怎麼解決比較好。這邊最好的解決方式當然就是。要再去驗證這些資訊的真實性。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由於AI多少會有一些幻覺的問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它所提供的具體數字、具體日期。有時候會出一些差錯。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那我們就需要再去驗證一下。這些日期是否是正確的。甚至有一些模型幻覺比較嚴重的話。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">還會自己瞎掰一些歷史事件。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_195.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=195" target="_blank"><strong># 考試題目解析 (2)：教育應用與 NotebookLM 功能</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來我們看到下一題。這邊它的內容就比較偏向教育方面了。問教師要如何幫助學生了解。AI的輸出可能包含錯誤的訊息或是偏見。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來下一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它要問的是 NotebookLM 的語音摘要。是否可以調整它生成的音訊長短。答案是「是」。它沒有什麼好疑問的。最開始版本的語音摘要。我們可能還要用自訂的Prompt。讓它嘗試能不能縮短一點或變長一點。但現在它已經有按鈕可以讓我們直接按了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">再來接下來就是考 NotebookLM 的基本功能。叫做學習指南。我們只需要將檔案全部都傳上去之後。在右側的報告裡點擊學習指南。讓它建立就可以了。後續的問題大約也都是這樣的類型。考使用者對Google家AI工具的了解程度。以及AI在教育領域需要解決的一些問題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_242.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=242" target="_blank"><strong># 考試題目解析 (3)：AI 道德與行政應用</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我再來挑幾題我覺得比較有趣的給大家看一下。首先就是這邊這一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要如何使用 Gemini 來減少一些行政文書的工作。再來就是一個難以避免的道德問題。學生使用AI輔助。或者是直接使用AI生成功課與報告。那該怎麼辦。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那教師能做的也就只有要求學生。有使用到AI進行腦力激盪或起草的話。需要註明引用。再來是新來的教練該如何使用 NotebookLM。結合戰術手冊與上季的比賽摘要。整理出哪些戰術在比賽中最為成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">對於AI議題。Google的 Gemini 與 NotebookLM 比較熟悉的觀眾。應該都可以蠻輕鬆答出來的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_281.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=281" target="_blank"><strong># 測驗結果出爐！我的分數與答錯的題目</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最終答完後提交我的總得分是錯一題。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">稍微有點可惜。回去看一下錄影發現是有一題我看錯了。他是問哪一項不適合。用來為學生生成單字表。但我以為是適合就直接選錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_294.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=294" target="_blank"><strong># 考完後呢？如何領取與分享證書</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在考完之後他會將證書的連結寄送到我們的Email中。至此我們就得到這張證書了。證書的效期是三年。我們可以將它以PDF下載下來。或者是將證書公開。然後分享出去。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/aVVMcliYJIw_307.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/aVVMcliYJIw&t=307" target="_blank"><strong># 影片總結</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK 以上就是今天影片全部的內容。基本上就是簡單跟大家分享一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">有這個證書可以考。那麼各位觀眾。我們就下隻影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=aVVMcliYJIw">https://www.youtube.com/watch?v=aVVMcliYJIw</a></p><p>最近 Google 推出了一個免費證書 ── Gemini AI 教師認證證書，主要是考驗教師在教學領域應用AI，與引導學生正確使用AI的相關能力，也考驗對於 Gemini、NoteBookLM這些AI工具的熟悉程度。因為算是蠻有趣的，所以今天來跟大家分享一下。</p><p>(P.S. 官方說明測驗主要有3大核心領域，但因為它實際測驗的內容有稍微超出他的描述，所以影片中我才會說是4個)</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>證書報名網址:</p><p><a href="https://educertifications.google/">https://educertifications.google/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gemini-certification-for-educators/">https://the-walking-fish.com/p/gemini-certification-for-educators/</a></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 Gemini 教師認證是什麼？</p><p>00:23 誰適合考？考試內容與難度</p><p>00:50 證照目標對象與四大驗證能力</p><p>01:25 手把手教學：如何註冊考試？</p><p>02:25 正式測驗開始！考試介面與翻譯技巧</p><p>02:43 考試題目解析 (1)：AI 幻覺與事實查核</p><p>03:15 考試題目解析 (2)：教育應用與 NotebookLM 功能</p><p>04:02 考試題目解析 (3)：AI 道德與行政應用</p><p>04:41 測驗結果出爐！我的分數與答錯的題目</p><p>04:54 考完後呢？如何領取與分享證書</p><p>05:07 影片總結</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/aVVMcliYJIw/hqdefault.jpg"/>
      <pubDate>2025-09-14T09:15:00.000Z</pubDate>
    </item><item>
      <title><![CDATA[OpenAI 重磅開源！GPT-OSS 模型全面測試　本機部署、線上使用教學｜睽違五年　OpenAI 終於「Open」了！]]></title>
      <link>https://www.youtube.com/watch?v=DNuvuSwKqA4</link>
      <itunes:title><![CDATA[OpenAI 重磅開源！GPT-OSS 模型全面測試　本機部署、線上使用教學｜睽違五年　OpenAI 終於「Open」了！]]></itunes:title>
      <itunes:author><![CDATA[The walking fish 步行魚]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/DNuvuSwKqA4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解 OpenAI 近五年來首次開源的大型語言模型 <strong>GPT-OSS</strong> 的完整資訊。</li><li>學習如何在線上平台（如 <strong>OpenAI Playground</strong>、<strong>Poe</strong>、<strong>Groq</strong>）以及本機（使用 <strong>Ollama</strong>、<strong>LM Studio</strong>）部署和使用 <strong>GPT-OSS</strong> 模型。</li><li>透過詳細的基準測試和實際案例，全面評估 <strong>GPT-OSS</strong> 在邏輯推理、內容理解、程式編寫、幻覺問題及動畫生成等方面的表現，並與其他頂級模型進行比較。</li></ul><hr /><h1>摘要</h1><h2>GPT-OSS 介紹與開源動機</h2><p>作者宣布 <strong>OpenAI</strong> 睽違五年再度開源其大型語言模型 <strong>GPT-OSS</strong>，聲稱其性能媲美 <strong>GPT-3.5 Mini</strong> 和 <strong>GPT-4 Mini</strong>。此次開源採用 <strong>Apache 2.0 許可證</strong>，允許自由使用。作者指出，過去 <strong>OpenAI</strong> 因安全顧慮和商業模式轉變，偏向閉源 <strong>API</strong> 服務，與 <strong>Meta</strong> 和 <strong>阿里巴巴</strong> 等開源倡導者形成對比。然而，這次開源回應了市場對模型透明度和本地部署的需求，特別是考量到近期聊天記錄洩露事件後，本地部署模型對於處理敏感資訊的重要性。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_0.jpg" /></p><hr /><h2>GPT-OSS 技術規格與運行需求</h2><p><strong>GPT-OSS 模型</strong>提供 <strong>20B</strong> 和 <strong>120B</strong> 兩種參數版本。兩者均採用 <strong>MoE (混合專家模型)</strong> 架構，<strong>20B 模型</strong>運行時啟用 <strong>3.6B 參數</strong>，<strong>120B 模型</strong>啟用 <strong>5.1B 參數</strong>。模型支援原生 <strong>MXFP4 量化</strong>，有效降低運算資源需求。<strong>20B 模型</strong>適用於消費級硬體，僅需 <strong>16GB 顯示記憶體</strong>即可運行，若顯示記憶體不足，亦可透過 <strong>LLaMA.cpp 混合 CPU 運算</strong>。<strong>120B 模型</strong>則可在單張 <strong>80GB 顯卡（如 H100 或 MI300）</strong>上運行。為提升推論與記憶體效率，<strong>GPT-OSS</strong> 使用了 <strong>分組多重查詢注意力 (Grouped Multi-Query Attention)</strong> 技術，並原生支援 <strong>128K 的上下文視窗</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_69.jpg" /></p><hr /><h2>訓練資料與 Tokenizer</h2><p><strong>GPT-OSS</strong> 是一款<strong>純文字模型</strong>，主要透過<strong>英文訓練資料</strong>進行訓練，內容側重於 <strong>STEM 領域、程式編寫</strong>和<strong>一般知識</strong>。為避免模型被濫用，<strong>GPT-4o</strong> 被用於過濾掉敏感的生成式 <strong>AI 相關資訊</strong>。值得一提的是，<strong>OpenAI</strong> 本次也開源了 <strong>GPT-OSS</strong> 所使用的 <strong>O200K Harmony Tokenizer</strong>，此 <strong>Tokenizer</strong> 同時也用於 <strong>GPT-4 Mini</strong> 和 <strong>GPT-4o</strong>。作者強調，良好的 <strong>Tokenizer</strong> 對模型能力有正面影響，並決定模型能夠容納的最大輸入字數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_120.jpg" /></p><hr /><h2>模型訓練與後訓練階段</h2><p><strong>GPT-OSS</strong> 的訓練過程與 <strong>GPT-4 Mini</strong> 相似，包含<strong>監督式微調</strong>及<strong>強化學習</strong>，旨在讓模型學會運用 <strong>Chain-of-Thought (CoT) 推理</strong>並<strong>使用工具</strong>。其訓練資料集涵蓋了<strong>程式設計、數學</strong>及<strong>科學</strong>等領域。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_166.jpg" /></p><hr /><h2>各項能力評測表現</h2><p>在程式競賽平台 <strong>Codeforces</strong> 上，<strong>GPT-OSS 120B</strong> 在可調用工具的情況下，表現略遜於同樣可調用工具的 <strong>GPT-3</strong> 與 <strong>GPT-4</strong>。然而，<strong>GPT-OSS 20B</strong> 在不調用工具的情況下，超越了不調用工具的 <strong>GPT-3.5 Mini</strong>。在人類最終測試資料集 <strong>HumanEval</strong> 中，<strong>GPT-OSS 120B</strong> 和 <strong>20B</strong> 在可使用工具時，均與可使用工具的 <strong>GPT-4 Mini</strong> 表現相當，但不如不使用工具的 <strong>GPT-3</strong>。不過，<strong>GPT-OSS 120B</strong> 在不使用工具時，則超越了不使用工具的 <strong>GPT-3.5 Mini</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_185.jpg" /></p><p>在用於測試醫療領域知識的 <strong>HealthBench</strong> 測試中，<strong>OpenAI</strong> 提供了其他模型的得分（例如 <strong>Gemini 2.5 Pro 獲得 52%</strong>，<strong>Grok-3 獲得 54.3%</strong>），並備註 <strong>GPT-OSS 不應被用來取代專業醫療人員或診斷治療疾病</strong>。在科學能力測試中，<strong>GPT-OSS 120B</strong> 的表現介於 <strong>GPT-3 Mini</strong> 與 <strong>GPT-4 Mini</strong> 之間，而 <strong>20B 模型</strong>則稍有落後。<strong>MMLU 測試集</strong>中，各模型表現大致相近。在測試工具調用能力的 <strong>Toolbench</strong> 上，<strong>GPT-OSS 120B</strong> 表現相當不錯，但 <strong>20B 模型</strong>仍有差距。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_222.jpg" /></p><p>此外，<strong>OpenAI</strong> 還指出「思考長度」對測試分數的影響。<strong>GPT-OSS</strong> 允許開發者在系統訊息中加入 `Reason Effort` 來設定<strong>低、中、高三種不同的推理強度</strong>，以在<strong>延遲</strong>與<strong>效能</strong>之間進行權衡取捨。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_276.jpg" /></p><hr /><h2>GPT-OSS 的線上與本機使用教學</h2><p>針對<strong>線上使用</strong>，作者推薦可使用 <strong>OpenAI 官方提供的 GPT-OSS Playground</strong>，其介面簡潔直觀，並支援模型選擇和推理強度調整。其次是 <strong>Poe 平台</strong>，一個由 <strong>Quora</strong> 創建的模型整合網站，匯集了多種大型語言模型，無論是閉源還是開源的。免費使用者每日有 <strong>3000 點</strong>積分可使用。若有微量的 <strong>API 調用需求</strong>，則建議使用 <strong>Groq</strong> 平台，它採用自行研發的 <strong>LPU</strong> 進行模型推論，速度極快，每日也提供一定的免費額度，但針對 <strong>GPT-OSS</strong> 模型額度較少。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_295.jpg" /></p><p>至於<strong>本機運行</strong>，作者強烈推薦使用 <strong>Ollama</strong>。<strong>Ollama</strong> 現已內建聊天介面，方便用戶直接與模型對話。使用者只需至官網下載安裝，透過命令列 `ollama pull gpt-oss`（或 `ollama pull gpt-oss:120b`）下載模型，再以 `ollama run gpt-oss` 執行，或直接透過系統匣圖示開啟聊天介面。另一個推薦的本機運行工具是 <strong>LM Studio</strong>，它提供方便的聊天介面，並可從 <strong>Hugging Face</strong> 下載及管理模型。兩者底層均採用 <strong>LLaMA.cpp</strong>，因此運行速度差異不大。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_365.jpg" /></p><hr /><h2>模型實際表現測試</h2><p>作者進行了一系列 <strong>GPT-OSS 模型</strong>的實際測試。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>在<strong>邏輯推理（左輪手槍問題）</strong>測試中，<strong>GPT-OSS 120B</strong> 和 <strong>20B 模型</strong>都能正確回答問題，其中 <strong>20B 模型</strong>雖採取略顯迂迴的方式，但也給出了正確答案，且解釋與數學計算皆準確。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>對於<strong>字元計數能力</strong>，<strong>20B 模型</strong>能正確計數句子中的大寫字母和特定單字中的字母數量。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_455.jpg" /></p><p>在<strong>幻覺問題測試（虛構名詞與事件）</strong>中，<strong>GPT-OSS 120B 模型</strong>能正確識別出「量子纏繞穩定器」並非真實存在，並提供簡單的科學科普資訊。然而，本機運行的 <strong>20B 模型</strong>在識別出其不存在的同時，輸出的內容卻顯得過長，並<strong>虛構出相關的作品範例</strong>，呈現出「多說多錯」的現象。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_476.jpg" /></p><p>針對<strong>長文本理解與重組能力</strong>，作者測試模型將影片逐字稿轉化為文章。<strong>120B 模型</strong>產出的內容大致正確，但連結部分使用了 <strong>HTML 語法而非標準 Markdown</strong>，並且<strong>虛構了不存在的設定格式（NCP.json）</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_551.jpg" /></p><p>在<strong>程式編寫能力（部落格頁面與動畫）</strong>測試中，<strong>120B 模型</strong>成功生成了<strong>完美符合預期的部落格頁面</strong>。<strong>20B 模型</strong>首次開啟時因 <strong>Tailwind CSS CDN</strong> 引用錯誤，經手動修改後能生成出近似的介面，甚至<strong>底部設計比 120B 模型更好</strong>。作者提醒，<strong>GPT-OSS</strong> 在<strong>提示詞明確詳細</strong>時表現良好，但若提示詞過於籠統（例如「設計一個符合蘋果美學的個人網頁」），則可能產生不理想的結果。這表示 <strong>GPT-OSS</strong> 可能需要比 <strong>Gemini 2.5 Pro</strong> 或 <strong>Claude 4 系列</strong>等模型更明確的提示。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_591.jpg" /></p><p>在生成<strong>六邊形內彈跳的球動畫</strong>測試中，<strong>120B 模型</strong>生成了一個<strong>近乎完美的結果</strong>，球的彈跳和重力效果非常真實。<strong>20B 模型</strong>的效果則有些不盡理想，球的重力表現異常，會在尚未傾斜時就滑行，但它仍是 <strong>30B 參數量以下</strong>模型中少數能讓球碰到邊框並展現基本物理效果的模型。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_656.jpg" /></p><hr /><h2>總結與個人評價</h2><p>整體而言，作者認為 <strong>GPT-OSS</strong> 的表現<strong>相當不錯</strong>。<strong>20B 模型</strong>的尺寸與 <strong>MoE 架構</strong>使其適合許多家庭電腦運行。根據作者的初步測試，其<strong>程式編寫能力</strong>甚至優於 <strong>Qwen-3 30B 模型</strong>。作者特別提及，他查閱到一篇貶低 <strong>GPT-OSS 20B</strong> 並推崇 <strong>Qwen-3 30B</strong> 的文章，但在他<strong>重新測試該文章提供的範例後，發現未經量化的 Qwen-3 30B 在程式能力方面，仍舊不如 GPT-OSS 20B</strong>，暗示該文章的測試可能存在疑慮。作者在影片結尾感謝觀眾支持，並鼓勵按讚與訂閱。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_698.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><p>今天要來跟大家介紹最近終於開源的 gpt-oss，這是睽違 5 年，OpenAI 終於再度開源的 LLM。今天就來待大家看看，如何免費線上、本機使用到這個模型，以及 gpt-oss 模型的表現如何</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>OpenAI 官方介紹文章:</p><p><a href="https://openai.com/zh-Hant/index/introducing-gpt-oss/">https://openai.com/zh-Hant/index/introducing-gpt-oss/</a></p><p></p><p>gpt-oss 的 GitHub 頁面:</p><p><a href="https://github.com/openai/gpt-oss">https://github.com/openai/gpt-oss</a></p><p></p><p>網頁使用:</p><p>1. gpt-oss 官方試用網頁: <a href="https://gpt-oss.com/">https://gpt-oss.com/</a></p><p>2. Groq 免費推理、API平台: <a href="https://groq.com/">https://groq.com/</a></p><p></p><p>本機部署:</p><p>1. ollama: <a href="https://ollama.com/">https://ollama.com/</a></p><p>2. LM Studio: <a href="https://lmstudio.ai/">https://lmstudio.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gpt-oss/">https://the-walking-fish.com/p/gpt-oss/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場</p><p>00:25 OpenAI 為何從閉源轉向開源？</p><p>01:09 GPT-OSS 模型技術規格介紹</p><p>01:31 硬體需求與本地運行條件</p><p>02:00 訓練資料與 Tokenizer</p><p>02:46 模型訓練與後訓練階段</p><p>03:05 各項能力評測 (Benchmark) 表現</p><p>04:55 如何使用 GPT-OSS？</p><p>05:05 線上使用方式 (Playground, Poe, Groq)</p><p>06:05 本機運行教學 (Ollama)</p><p>06:52 本機運行工具 (LM Studio)</p><p>07:13 邏輯推理測試 (左輪手槍問題)</p><p>07:35 字元計數能力測試</p><p>07:56 幻覺問題測試 (虛構名詞與事件)</p><p>09:11 長文本理解與重組能力測試</p><p>09:51 程式編寫能力測試 (網頁與動畫)</p><p>11:38 總結與個人評價</p><p>11:59 額外測試：與 Qwen3 30b模型對比</p><p>13:11 結尾</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/DNuvuSwKqA4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解 OpenAI 近五年來首次開源的大型語言模型 <strong>GPT-OSS</strong> 的完整資訊。</li><li>學習如何在線上平台（如 <strong>OpenAI Playground</strong>、<strong>Poe</strong>、<strong>Groq</strong>）以及本機（使用 <strong>Ollama</strong>、<strong>LM Studio</strong>）部署和使用 <strong>GPT-OSS</strong> 模型。</li><li>透過詳細的基準測試和實際案例，全面評估 <strong>GPT-OSS</strong> 在邏輯推理、內容理解、程式編寫、幻覺問題及動畫生成等方面的表現，並與其他頂級模型進行比較。</li></ul><hr /><h1>摘要</h1><h2>GPT-OSS 介紹與開源動機</h2><p>作者宣布 <strong>OpenAI</strong> 睽違五年再度開源其大型語言模型 <strong>GPT-OSS</strong>，聲稱其性能媲美 <strong>GPT-3.5 Mini</strong> 和 <strong>GPT-4 Mini</strong>。此次開源採用 <strong>Apache 2.0 許可證</strong>，允許自由使用。作者指出，過去 <strong>OpenAI</strong> 因安全顧慮和商業模式轉變，偏向閉源 <strong>API</strong> 服務，與 <strong>Meta</strong> 和 <strong>阿里巴巴</strong> 等開源倡導者形成對比。然而，這次開源回應了市場對模型透明度和本地部署的需求，特別是考量到近期聊天記錄洩露事件後，本地部署模型對於處理敏感資訊的重要性。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_0.jpg" /></p><hr /><h2>GPT-OSS 技術規格與運行需求</h2><p><strong>GPT-OSS 模型</strong>提供 <strong>20B</strong> 和 <strong>120B</strong> 兩種參數版本。兩者均採用 <strong>MoE (混合專家模型)</strong> 架構，<strong>20B 模型</strong>運行時啟用 <strong>3.6B 參數</strong>，<strong>120B 模型</strong>啟用 <strong>5.1B 參數</strong>。模型支援原生 <strong>MXFP4 量化</strong>，有效降低運算資源需求。<strong>20B 模型</strong>適用於消費級硬體，僅需 <strong>16GB 顯示記憶體</strong>即可運行，若顯示記憶體不足，亦可透過 <strong>LLaMA.cpp 混合 CPU 運算</strong>。<strong>120B 模型</strong>則可在單張 <strong>80GB 顯卡（如 H100 或 MI300）</strong>上運行。為提升推論與記憶體效率，<strong>GPT-OSS</strong> 使用了 <strong>分組多重查詢注意力 (Grouped Multi-Query Attention)</strong> 技術，並原生支援 <strong>128K 的上下文視窗</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_69.jpg" /></p><hr /><h2>訓練資料與 Tokenizer</h2><p><strong>GPT-OSS</strong> 是一款<strong>純文字模型</strong>，主要透過<strong>英文訓練資料</strong>進行訓練，內容側重於 <strong>STEM 領域、程式編寫</strong>和<strong>一般知識</strong>。為避免模型被濫用，<strong>GPT-4o</strong> 被用於過濾掉敏感的生成式 <strong>AI 相關資訊</strong>。值得一提的是，<strong>OpenAI</strong> 本次也開源了 <strong>GPT-OSS</strong> 所使用的 <strong>O200K Harmony Tokenizer</strong>，此 <strong>Tokenizer</strong> 同時也用於 <strong>GPT-4 Mini</strong> 和 <strong>GPT-4o</strong>。作者強調，良好的 <strong>Tokenizer</strong> 對模型能力有正面影響，並決定模型能夠容納的最大輸入字數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_120.jpg" /></p><hr /><h2>模型訓練與後訓練階段</h2><p><strong>GPT-OSS</strong> 的訓練過程與 <strong>GPT-4 Mini</strong> 相似，包含<strong>監督式微調</strong>及<strong>強化學習</strong>，旨在讓模型學會運用 <strong>Chain-of-Thought (CoT) 推理</strong>並<strong>使用工具</strong>。其訓練資料集涵蓋了<strong>程式設計、數學</strong>及<strong>科學</strong>等領域。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_166.jpg" /></p><hr /><h2>各項能力評測表現</h2><p>在程式競賽平台 <strong>Codeforces</strong> 上，<strong>GPT-OSS 120B</strong> 在可調用工具的情況下，表現略遜於同樣可調用工具的 <strong>GPT-3</strong> 與 <strong>GPT-4</strong>。然而，<strong>GPT-OSS 20B</strong> 在不調用工具的情況下，超越了不調用工具的 <strong>GPT-3.5 Mini</strong>。在人類最終測試資料集 <strong>HumanEval</strong> 中，<strong>GPT-OSS 120B</strong> 和 <strong>20B</strong> 在可使用工具時，均與可使用工具的 <strong>GPT-4 Mini</strong> 表現相當，但不如不使用工具的 <strong>GPT-3</strong>。不過，<strong>GPT-OSS 120B</strong> 在不使用工具時，則超越了不使用工具的 <strong>GPT-3.5 Mini</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_185.jpg" /></p><p>在用於測試醫療領域知識的 <strong>HealthBench</strong> 測試中，<strong>OpenAI</strong> 提供了其他模型的得分（例如 <strong>Gemini 2.5 Pro 獲得 52%</strong>，<strong>Grok-3 獲得 54.3%</strong>），並備註 <strong>GPT-OSS 不應被用來取代專業醫療人員或診斷治療疾病</strong>。在科學能力測試中，<strong>GPT-OSS 120B</strong> 的表現介於 <strong>GPT-3 Mini</strong> 與 <strong>GPT-4 Mini</strong> 之間，而 <strong>20B 模型</strong>則稍有落後。<strong>MMLU 測試集</strong>中，各模型表現大致相近。在測試工具調用能力的 <strong>Toolbench</strong> 上，<strong>GPT-OSS 120B</strong> 表現相當不錯，但 <strong>20B 模型</strong>仍有差距。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_222.jpg" /></p><p>此外，<strong>OpenAI</strong> 還指出「思考長度」對測試分數的影響。<strong>GPT-OSS</strong> 允許開發者在系統訊息中加入 `Reason Effort` 來設定<strong>低、中、高三種不同的推理強度</strong>，以在<strong>延遲</strong>與<strong>效能</strong>之間進行權衡取捨。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_276.jpg" /></p><hr /><h2>GPT-OSS 的線上與本機使用教學</h2><p>針對<strong>線上使用</strong>，作者推薦可使用 <strong>OpenAI 官方提供的 GPT-OSS Playground</strong>，其介面簡潔直觀，並支援模型選擇和推理強度調整。其次是 <strong>Poe 平台</strong>，一個由 <strong>Quora</strong> 創建的模型整合網站，匯集了多種大型語言模型，無論是閉源還是開源的。免費使用者每日有 <strong>3000 點</strong>積分可使用。若有微量的 <strong>API 調用需求</strong>，則建議使用 <strong>Groq</strong> 平台，它採用自行研發的 <strong>LPU</strong> 進行模型推論，速度極快，每日也提供一定的免費額度，但針對 <strong>GPT-OSS</strong> 模型額度較少。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_295.jpg" /></p><p>至於<strong>本機運行</strong>，作者強烈推薦使用 <strong>Ollama</strong>。<strong>Ollama</strong> 現已內建聊天介面，方便用戶直接與模型對話。使用者只需至官網下載安裝，透過命令列 `ollama pull gpt-oss`（或 `ollama pull gpt-oss:120b`）下載模型，再以 `ollama run gpt-oss` 執行，或直接透過系統匣圖示開啟聊天介面。另一個推薦的本機運行工具是 <strong>LM Studio</strong>，它提供方便的聊天介面，並可從 <strong>Hugging Face</strong> 下載及管理模型。兩者底層均採用 <strong>LLaMA.cpp</strong>，因此運行速度差異不大。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_365.jpg" /></p><hr /><h2>模型實際表現測試</h2><p>作者進行了一系列 <strong>GPT-OSS 模型</strong>的實際測試。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>在<strong>邏輯推理（左輪手槍問題）</strong>測試中，<strong>GPT-OSS 120B</strong> 和 <strong>20B 模型</strong>都能正確回答問題，其中 <strong>20B 模型</strong>雖採取略顯迂迴的方式，但也給出了正確答案，且解釋與數學計算皆準確。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>對於<strong>字元計數能力</strong>，<strong>20B 模型</strong>能正確計數句子中的大寫字母和特定單字中的字母數量。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_455.jpg" /></p><p>在<strong>幻覺問題測試（虛構名詞與事件）</strong>中，<strong>GPT-OSS 120B 模型</strong>能正確識別出「量子纏繞穩定器」並非真實存在，並提供簡單的科學科普資訊。然而，本機運行的 <strong>20B 模型</strong>在識別出其不存在的同時，輸出的內容卻顯得過長，並<strong>虛構出相關的作品範例</strong>，呈現出「多說多錯」的現象。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_476.jpg" /></p><p>針對<strong>長文本理解與重組能力</strong>，作者測試模型將影片逐字稿轉化為文章。<strong>120B 模型</strong>產出的內容大致正確，但連結部分使用了 <strong>HTML 語法而非標準 Markdown</strong>，並且<strong>虛構了不存在的設定格式（NCP.json）</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_551.jpg" /></p><p>在<strong>程式編寫能力（部落格頁面與動畫）</strong>測試中，<strong>120B 模型</strong>成功生成了<strong>完美符合預期的部落格頁面</strong>。<strong>20B 模型</strong>首次開啟時因 <strong>Tailwind CSS CDN</strong> 引用錯誤，經手動修改後能生成出近似的介面，甚至<strong>底部設計比 120B 模型更好</strong>。作者提醒，<strong>GPT-OSS</strong> 在<strong>提示詞明確詳細</strong>時表現良好，但若提示詞過於籠統（例如「設計一個符合蘋果美學的個人網頁」），則可能產生不理想的結果。這表示 <strong>GPT-OSS</strong> 可能需要比 <strong>Gemini 2.5 Pro</strong> 或 <strong>Claude 4 系列</strong>等模型更明確的提示。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_591.jpg" /></p><p>在生成<strong>六邊形內彈跳的球動畫</strong>測試中，<strong>120B 模型</strong>生成了一個<strong>近乎完美的結果</strong>，球的彈跳和重力效果非常真實。<strong>20B 模型</strong>的效果則有些不盡理想，球的重力表現異常，會在尚未傾斜時就滑行，但它仍是 <strong>30B 參數量以下</strong>模型中少數能讓球碰到邊框並展現基本物理效果的模型。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_656.jpg" /></p><hr /><h2>總結與個人評價</h2><p>整體而言，作者認為 <strong>GPT-OSS</strong> 的表現<strong>相當不錯</strong>。<strong>20B 模型</strong>的尺寸與 <strong>MoE 架構</strong>使其適合許多家庭電腦運行。根據作者的初步測試，其<strong>程式編寫能力</strong>甚至優於 <strong>Qwen-3 30B 模型</strong>。作者特別提及，他查閱到一篇貶低 <strong>GPT-OSS 20B</strong> 並推崇 <strong>Qwen-3 30B</strong> 的文章，但在他<strong>重新測試該文章提供的範例後，發現未經量化的 Qwen-3 30B 在程式能力方面，仍舊不如 GPT-OSS 20B</strong>，暗示該文章的測試可能存在疑慮。作者在影片結尾感謝觀眾支持，並鼓勵按讚與訂閱。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_698.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><p>今天要來跟大家介紹最近終於開源的 gpt-oss，這是睽違 5 年，OpenAI 終於再度開源的 LLM。今天就來待大家看看，如何免費線上、本機使用到這個模型，以及 gpt-oss 模型的表現如何</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>OpenAI 官方介紹文章:</p><p><a href="https://openai.com/zh-Hant/index/introducing-gpt-oss/">https://openai.com/zh-Hant/index/introducing-gpt-oss/</a></p><p></p><p>gpt-oss 的 GitHub 頁面:</p><p><a href="https://github.com/openai/gpt-oss">https://github.com/openai/gpt-oss</a></p><p></p><p>網頁使用:</p><p>1. gpt-oss 官方試用網頁: <a href="https://gpt-oss.com/">https://gpt-oss.com/</a></p><p>2. Groq 免費推理、API平台: <a href="https://groq.com/">https://groq.com/</a></p><p></p><p>本機部署:</p><p>1. ollama: <a href="https://ollama.com/">https://ollama.com/</a></p><p>2. LM Studio: <a href="https://lmstudio.ai/">https://lmstudio.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gpt-oss/">https://the-walking-fish.com/p/gpt-oss/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場</p><p>00:25 OpenAI 為何從閉源轉向開源？</p><p>01:09 GPT-OSS 模型技術規格介紹</p><p>01:31 硬體需求與本地運行條件</p><p>02:00 訓練資料與 Tokenizer</p><p>02:46 模型訓練與後訓練階段</p><p>03:05 各項能力評測 (Benchmark) 表現</p><p>04:55 如何使用 GPT-OSS？</p><p>05:05 線上使用方式 (Playground, Poe, Groq)</p><p>06:05 本機運行教學 (Ollama)</p><p>06:52 本機運行工具 (LM Studio)</p><p>07:13 邏輯推理測試 (左輪手槍問題)</p><p>07:35 字元計數能力測試</p><p>07:56 幻覺問題測試 (虛構名詞與事件)</p><p>09:11 長文本理解與重組能力測試</p><p>09:51 程式編寫能力測試 (網頁與動畫)</p><p>11:38 總結與個人評價</p><p>11:59 額外測試：與 Qwen3 30b模型對比</p><p>13:11 結尾</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/DNuvuSwKqA4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解 OpenAI 近五年來首次開源的大型語言模型 <strong>GPT-OSS</strong> 的完整資訊。</li><li>學習如何在線上平台（如 <strong>OpenAI Playground</strong>、<strong>Poe</strong>、<strong>Groq</strong>）以及本機（使用 <strong>Ollama</strong>、<strong>LM Studio</strong>）部署和使用 <strong>GPT-OSS</strong> 模型。</li><li>透過詳細的基準測試和實際案例，全面評估 <strong>GPT-OSS</strong> 在邏輯推理、內容理解、程式編寫、幻覺問題及動畫生成等方面的表現，並與其他頂級模型進行比較。</li></ul><hr /><h1>摘要</h1><h2>GPT-OSS 介紹與開源動機</h2><p>作者宣布 <strong>OpenAI</strong> 睽違五年再度開源其大型語言模型 <strong>GPT-OSS</strong>，聲稱其性能媲美 <strong>GPT-3.5 Mini</strong> 和 <strong>GPT-4 Mini</strong>。此次開源採用 <strong>Apache 2.0 許可證</strong>，允許自由使用。作者指出，過去 <strong>OpenAI</strong> 因安全顧慮和商業模式轉變，偏向閉源 <strong>API</strong> 服務，與 <strong>Meta</strong> 和 <strong>阿里巴巴</strong> 等開源倡導者形成對比。然而，這次開源回應了市場對模型透明度和本地部署的需求，特別是考量到近期聊天記錄洩露事件後，本地部署模型對於處理敏感資訊的重要性。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_0.jpg" /></p><hr /><h2>GPT-OSS 技術規格與運行需求</h2><p><strong>GPT-OSS 模型</strong>提供 <strong>20B</strong> 和 <strong>120B</strong> 兩種參數版本。兩者均採用 <strong>MoE (混合專家模型)</strong> 架構，<strong>20B 模型</strong>運行時啟用 <strong>3.6B 參數</strong>，<strong>120B 模型</strong>啟用 <strong>5.1B 參數</strong>。模型支援原生 <strong>MXFP4 量化</strong>，有效降低運算資源需求。<strong>20B 模型</strong>適用於消費級硬體，僅需 <strong>16GB 顯示記憶體</strong>即可運行，若顯示記憶體不足，亦可透過 <strong>LLaMA.cpp 混合 CPU 運算</strong>。<strong>120B 模型</strong>則可在單張 <strong>80GB 顯卡（如 H100 或 MI300）</strong>上運行。為提升推論與記憶體效率，<strong>GPT-OSS</strong> 使用了 <strong>分組多重查詢注意力 (Grouped Multi-Query Attention)</strong> 技術，並原生支援 <strong>128K 的上下文視窗</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_69.jpg" /></p><hr /><h2>訓練資料與 Tokenizer</h2><p><strong>GPT-OSS</strong> 是一款<strong>純文字模型</strong>，主要透過<strong>英文訓練資料</strong>進行訓練，內容側重於 <strong>STEM 領域、程式編寫</strong>和<strong>一般知識</strong>。為避免模型被濫用，<strong>GPT-4o</strong> 被用於過濾掉敏感的生成式 <strong>AI 相關資訊</strong>。值得一提的是，<strong>OpenAI</strong> 本次也開源了 <strong>GPT-OSS</strong> 所使用的 <strong>O200K Harmony Tokenizer</strong>，此 <strong>Tokenizer</strong> 同時也用於 <strong>GPT-4 Mini</strong> 和 <strong>GPT-4o</strong>。作者強調，良好的 <strong>Tokenizer</strong> 對模型能力有正面影響，並決定模型能夠容納的最大輸入字數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_120.jpg" /></p><hr /><h2>模型訓練與後訓練階段</h2><p><strong>GPT-OSS</strong> 的訓練過程與 <strong>GPT-4 Mini</strong> 相似，包含<strong>監督式微調</strong>及<strong>強化學習</strong>，旨在讓模型學會運用 <strong>Chain-of-Thought (CoT) 推理</strong>並<strong>使用工具</strong>。其訓練資料集涵蓋了<strong>程式設計、數學</strong>及<strong>科學</strong>等領域。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_166.jpg" /></p><hr /><h2>各項能力評測表現</h2><p>在程式競賽平台 <strong>Codeforces</strong> 上，<strong>GPT-OSS 120B</strong> 在可調用工具的情況下，表現略遜於同樣可調用工具的 <strong>GPT-3</strong> 與 <strong>GPT-4</strong>。然而，<strong>GPT-OSS 20B</strong> 在不調用工具的情況下，超越了不調用工具的 <strong>GPT-3.5 Mini</strong>。在人類最終測試資料集 <strong>HumanEval</strong> 中，<strong>GPT-OSS 120B</strong> 和 <strong>20B</strong> 在可使用工具時，均與可使用工具的 <strong>GPT-4 Mini</strong> 表現相當，但不如不使用工具的 <strong>GPT-3</strong>。不過，<strong>GPT-OSS 120B</strong> 在不使用工具時，則超越了不使用工具的 <strong>GPT-3.5 Mini</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_185.jpg" /></p><p>在用於測試醫療領域知識的 <strong>HealthBench</strong> 測試中，<strong>OpenAI</strong> 提供了其他模型的得分（例如 <strong>Gemini 2.5 Pro 獲得 52%</strong>，<strong>Grok-3 獲得 54.3%</strong>），並備註 <strong>GPT-OSS 不應被用來取代專業醫療人員或診斷治療疾病</strong>。在科學能力測試中，<strong>GPT-OSS 120B</strong> 的表現介於 <strong>GPT-3 Mini</strong> 與 <strong>GPT-4 Mini</strong> 之間，而 <strong>20B 模型</strong>則稍有落後。<strong>MMLU 測試集</strong>中，各模型表現大致相近。在測試工具調用能力的 <strong>Toolbench</strong> 上，<strong>GPT-OSS 120B</strong> 表現相當不錯，但 <strong>20B 模型</strong>仍有差距。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_222.jpg" /></p><p>此外，<strong>OpenAI</strong> 還指出「思考長度」對測試分數的影響。<strong>GPT-OSS</strong> 允許開發者在系統訊息中加入 `Reason Effort` 來設定<strong>低、中、高三種不同的推理強度</strong>，以在<strong>延遲</strong>與<strong>效能</strong>之間進行權衡取捨。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_276.jpg" /></p><hr /><h2>GPT-OSS 的線上與本機使用教學</h2><p>針對<strong>線上使用</strong>，作者推薦可使用 <strong>OpenAI 官方提供的 GPT-OSS Playground</strong>，其介面簡潔直觀，並支援模型選擇和推理強度調整。其次是 <strong>Poe 平台</strong>，一個由 <strong>Quora</strong> 創建的模型整合網站，匯集了多種大型語言模型，無論是閉源還是開源的。免費使用者每日有 <strong>3000 點</strong>積分可使用。若有微量的 <strong>API 調用需求</strong>，則建議使用 <strong>Groq</strong> 平台，它採用自行研發的 <strong>LPU</strong> 進行模型推論，速度極快，每日也提供一定的免費額度，但針對 <strong>GPT-OSS</strong> 模型額度較少。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_295.jpg" /></p><p>至於<strong>本機運行</strong>，作者強烈推薦使用 <strong>Ollama</strong>。<strong>Ollama</strong> 現已內建聊天介面，方便用戶直接與模型對話。使用者只需至官網下載安裝，透過命令列 `ollama pull gpt-oss`（或 `ollama pull gpt-oss:120b`）下載模型，再以 `ollama run gpt-oss` 執行，或直接透過系統匣圖示開啟聊天介面。另一個推薦的本機運行工具是 <strong>LM Studio</strong>，它提供方便的聊天介面，並可從 <strong>Hugging Face</strong> 下載及管理模型。兩者底層均採用 <strong>LLaMA.cpp</strong>，因此運行速度差異不大。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_365.jpg" /></p><hr /><h2>模型實際表現測試</h2><p>作者進行了一系列 <strong>GPT-OSS 模型</strong>的實際測試。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>在<strong>邏輯推理（左輪手槍問題）</strong>測試中，<strong>GPT-OSS 120B</strong> 和 <strong>20B 模型</strong>都能正確回答問題，其中 <strong>20B 模型</strong>雖採取略顯迂迴的方式，但也給出了正確答案，且解釋與數學計算皆準確。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_433.jpg" /></p><p>對於<strong>字元計數能力</strong>，<strong>20B 模型</strong>能正確計數句子中的大寫字母和特定單字中的字母數量。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_455.jpg" /></p><p>在<strong>幻覺問題測試（虛構名詞與事件）</strong>中，<strong>GPT-OSS 120B 模型</strong>能正確識別出「量子纏繞穩定器」並非真實存在，並提供簡單的科學科普資訊。然而，本機運行的 <strong>20B 模型</strong>在識別出其不存在的同時，輸出的內容卻顯得過長，並<strong>虛構出相關的作品範例</strong>，呈現出「多說多錯」的現象。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_476.jpg" /></p><p>針對<strong>長文本理解與重組能力</strong>，作者測試模型將影片逐字稿轉化為文章。<strong>120B 模型</strong>產出的內容大致正確，但連結部分使用了 <strong>HTML 語法而非標準 Markdown</strong>，並且<strong>虛構了不存在的設定格式（NCP.json）</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_551.jpg" /></p><p>在<strong>程式編寫能力（部落格頁面與動畫）</strong>測試中，<strong>120B 模型</strong>成功生成了<strong>完美符合預期的部落格頁面</strong>。<strong>20B 模型</strong>首次開啟時因 <strong>Tailwind CSS CDN</strong> 引用錯誤，經手動修改後能生成出近似的介面，甚至<strong>底部設計比 120B 模型更好</strong>。作者提醒，<strong>GPT-OSS</strong> 在<strong>提示詞明確詳細</strong>時表現良好，但若提示詞過於籠統（例如「設計一個符合蘋果美學的個人網頁」），則可能產生不理想的結果。這表示 <strong>GPT-OSS</strong> 可能需要比 <strong>Gemini 2.5 Pro</strong> 或 <strong>Claude 4 系列</strong>等模型更明確的提示。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_591.jpg" /></p><p>在生成<strong>六邊形內彈跳的球動畫</strong>測試中，<strong>120B 模型</strong>生成了一個<strong>近乎完美的結果</strong>，球的彈跳和重力效果非常真實。<strong>20B 模型</strong>的效果則有些不盡理想，球的重力表現異常，會在尚未傾斜時就滑行，但它仍是 <strong>30B 參數量以下</strong>模型中少數能讓球碰到邊框並展現基本物理效果的模型。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_656.jpg" /></p><hr /><h2>總結與個人評價</h2><p>整體而言，作者認為 <strong>GPT-OSS</strong> 的表現<strong>相當不錯</strong>。<strong>20B 模型</strong>的尺寸與 <strong>MoE 架構</strong>使其適合許多家庭電腦運行。根據作者的初步測試，其<strong>程式編寫能力</strong>甚至優於 <strong>Qwen-3 30B 模型</strong>。作者特別提及，他查閱到一篇貶低 <strong>GPT-OSS 20B</strong> 並推崇 <strong>Qwen-3 30B</strong> 的文章，但在他<strong>重新測試該文章提供的範例後，發現未經量化的 Qwen-3 30B 在程式能力方面，仍舊不如 GPT-OSS 20B</strong>，暗示該文章的測試可能存在疑慮。作者在影片結尾感謝觀眾支持，並鼓勵按讚與訂閱。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/DNuvuSwKqA4_698.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=DNuvuSwKqA4">https://www.youtube.com/watch?v=DNuvuSwKqA4</a></p><p>今天要來跟大家介紹最近終於開源的 gpt-oss，這是睽違 5 年，OpenAI 終於再度開源的 LLM。今天就來待大家看看，如何免費線上、本機使用到這個模型，以及 gpt-oss 模型的表現如何</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>OpenAI 官方介紹文章:</p><p><a href="https://openai.com/zh-Hant/index/introducing-gpt-oss/">https://openai.com/zh-Hant/index/introducing-gpt-oss/</a></p><p></p><p>gpt-oss 的 GitHub 頁面:</p><p><a href="https://github.com/openai/gpt-oss">https://github.com/openai/gpt-oss</a></p><p></p><p>網頁使用:</p><p>1. gpt-oss 官方試用網頁: <a href="https://gpt-oss.com/">https://gpt-oss.com/</a></p><p>2. Groq 免費推理、API平台: <a href="https://groq.com/">https://groq.com/</a></p><p></p><p>本機部署:</p><p>1. ollama: <a href="https://ollama.com/">https://ollama.com/</a></p><p>2. LM Studio: <a href="https://lmstudio.ai/">https://lmstudio.ai/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/gpt-oss/">https://the-walking-fish.com/p/gpt-oss/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>我開發的 LLM 分佈式推理專案</p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p></p><p>什麼是開源？GPL 如何「感染」你的專案？【開源簡史與授權詳解】</p><p><a href="https://www.youtube.com/watch?v=ZVKZ9DIFQak">https://www.youtube.com/watch?v=ZVKZ9DIFQak</a></p><p></p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場</p><p>00:25 OpenAI 為何從閉源轉向開源？</p><p>01:09 GPT-OSS 模型技術規格介紹</p><p>01:31 硬體需求與本地運行條件</p><p>02:00 訓練資料與 Tokenizer</p><p>02:46 模型訓練與後訓練階段</p><p>03:05 各項能力評測 (Benchmark) 表現</p><p>04:55 如何使用 GPT-OSS？</p><p>05:05 線上使用方式 (Playground, Poe, Groq)</p><p>06:05 本機運行教學 (Ollama)</p><p>06:52 本機運行工具 (LM Studio)</p><p>07:13 邏輯推理測試 (左輪手槍問題)</p><p>07:35 字元計數能力測試</p><p>07:56 幻覺問題測試 (虛構名詞與事件)</p><p>09:11 長文本理解與重組能力測試</p><p>09:51 程式編寫能力測試 (網頁與動畫)</p><p>11:38 總結與個人評價</p><p>11:59 額外測試：與 Qwen3 30b模型對比</p><p>13:11 結尾</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/DNuvuSwKqA4/hqdefault.jpg"/>
      <pubDate>2025-08-10T13:56:10.000Z</pubDate>
    </item><item>
      <title><![CDATA[窮人版AI叢集！我做了一個把家裡電腦串起來跑 LLM 的專案，速度飆升2倍！(Llama.cpp 分散式推理)]]></title>
      <link>https://www.youtube.com/watch?v=UtaDMH_EZuw</link>
      <itunes:title><![CDATA[窮人版AI叢集！我做了一個把家裡電腦串起來跑 LLM 的專案，速度飆升2倍！(Llama.cpp 分散式推理)]]></itunes:title>
      <itunes:author><![CDATA[The walking fish 步行魚]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/UtaDMH_EZuw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解如何突破家用電腦顯示卡的記憶體限制，以運行大型語言模型（LLM）。</li> <li>探索一個實用的開源專案「llamacpp-distributed-inference」，該專案利用 Llama.cpp 的 RPC 功能實現分散式推理。</li> <li>學習如何整合多台規格較低的電腦，共同加速 LLM 的推理速度，並從中獲得顯著的效能提升（例如速度提升 2 倍）。</li> </ul> <hr /> <h1>摘要</h1> <h2>大模型的 VRAM 困境與效能瓶頸</h2> <p>作者在影片中指出，當前許多表現優異的開源大型語言模型，例如 Jemma 3 27B 和 Qwen 3 32B，在運行時需要 10 至 20GB 的顯示卡記憶體 (VRAM)。這對於大多數家用電腦的顯示卡（通常只有 8 到 12GB VRAM）來說，是一個難以達到的高門檻。當 VRAM 不足時，模型便需要依賴 CPU 和記憶體來混合運算，這會導致推理速度大幅下降。作者以自己的電腦（配備 Intel i5-14400F 和 RTX 4070 Super 顯示卡）運行 Deepseek 24B 模型為例，展示了其輸出速度僅為每秒約 7 到 8 個 Token，這樣的效能遠不足以支援日常開發或流暢的使用體驗。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_0.jpg" /></p> <hr /> <h2>分散式推理方案的探索與最終選擇</h2> <p>為了解決上述問題，作者開始探索是否能利用多台具備獨立顯示卡的筆記型電腦或桌上型電腦，實現分佈式推理。起初，作者考量了多種現有解決方案，包括企業級推理框架 <strong>vLLM</strong> 和專為 Mac 設計的 <strong>EXO</strong>，但這些方案在 Windows 環境下的設定複雜或相容性不佳，因此被排除。另一選項 <strong>Mistral RS</strong> 雖然支援多數模型，但在新模型支援速度和 GGUF 格式的廣泛性上仍有不足。最終，作者選擇了 <strong>Llama.cpp</strong>，因為其已內建 <strong>RPC (Remote Procedure Call)</strong> 伺服器功能，能夠實現模型的分散式推理並自動分配各個節點載入的模型比例。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_110.jpg" /></p> <hr /> <h2>概念驗證與 GUI 工具的開發</h2> <p>為了驗證 Llama.cpp RPC 功能的可行性，作者首先進行了手動設定和測試。他將 Llama.cpp 的二進位檔案部署到兩台電腦上，一台作為 RPC 伺服器，另一台作為主機，透過設定 IP 位址和通訊埠進行連線。測試結果顯示，模型輸出速度從原本的每秒 7 到 8 個 Token 提升至每秒 17 個 Token 以上，證明了分散式推理的有效性。隨後，為簡化設定與管理流程，作者決定開發一個圖形使用者介面（GUI）工具。在開發過程中，作者利用了 <strong>AI 工具 (RoboDev CLI)</strong>，透過在 Google AI Studio 中提供需求重點，並讓 Gemini 2.5 Pro 整理出開發文件，再由 RoboDev CLI 逐步產生程式碼並進行調校，大幅提高了開發效率。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_184.jpg" /></p> <hr /> <h2>「窮人版 AI 叢集」工具的展示與功能介紹</h2> <p>這款由作者開發的 <strong>LLM 分散式推理工具</strong>，能夠在程式啟動時自動開啟 RPC 伺服器，並自動在區域網路內搜尋其他運行中的節點。如果自動偵測失敗，用戶也能手動添加 IP 位址。工具的介面直觀易用，右側顯示本機的網路資訊和已連線的節點，左下方則提供 API 伺服器設定，包括 API Token 類型、GPU 層數和 API 並行呼叫的數量。此外，該工具還提供了簡易的網頁對話介面，方便使用者直接與模型互動，並且可以與像 OpenWebUI 等其他工具整合，極大化其應用彈性。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_352.jpg" /></p> <hr /> <h2>安全性警告與未來展望</h2> <p>作者特別強調，<strong>Llama.cpp 的 RPC 功能目前仍處於實驗階段，且已被確認存在相關的安全性漏洞</strong>。因此，他強烈建議使用者僅在安全的內部網路環境中（例如家庭網路）使用此專案，避免在生產環境中部署。儘管 Llama.cpp 的平行處理能力並非頂尖，但對於個人使用者而言，如果家中有閒置的多台電腦，這個專案提供了一個經濟實惠且有效的解決方案，讓他們能夠運行更大的語言模型。作者已將此專案開源至 GitHub，並提供打包好的可執行檔供大眾下載使用，未來也將持續更新與優化。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_454.jpg" /></p> <hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p>今天要來跟大家介紹的，是我上週做的專案 ── llamacpp-distributed-inference。這是一個可以利用多台電腦來運行LLM的專案，雖然本身沒用什麼泰特別的技術，就是使用 llamacpp 現在已經支援的 rpc 功能，但因為還是有一些用處，所以就拿出來跟大家分享w</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>專案 GitHub 頁面:</p><p><a href="https://github.com/ADT109119/llamacpp-distributed-inference">https://github.com/ADT109119/llamacpp-distributed-inference</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/llamacpp-distributed-inference/">https://the-walking-fish.com/p/llamacpp-distributed-inference/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 前言：大模型的 VRAM 困境</p><p>00:45 問題演示：單機運行速度有多慢？</p><p>01:21 問題根源：CPU 與記憶體頻寬瓶頸</p><p>01:40 解決方案：用分散式推理組建電腦戰隊！</p><p>01:50 方案探索：vLLM, exo為何不適用？</p><p>02:44 最終選擇：Llama.cpp 的 RPC 功能</p><p>03:04 概念驗證：手動開啟 RPC 伺服器分佈推理</p><p>04:42 從指令到介面：開發 GUI 工具</p><p>04:53 開發過程全公開：我如何用 AI (RoboDev CLI) 寫程式</p><p>05:52 成品展示：LLM 分散式推理工具登場！</p><p>06:21 實戰演示：多台電腦自動偵測與連線</p><p>06:34 功能介紹：API 設定、GPU 層數與並行數量</p><p>07:34 ⚠️【重要】安全性警告與使用須知</p><p>08:08 結語與總結</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/UtaDMH_EZuw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解如何突破家用電腦顯示卡的記憶體限制，以運行大型語言模型（LLM）。</li> <li>探索一個實用的開源專案「llamacpp-distributed-inference」，該專案利用 Llama.cpp 的 RPC 功能實現分散式推理。</li> <li>學習如何整合多台規格較低的電腦，共同加速 LLM 的推理速度，並從中獲得顯著的效能提升（例如速度提升 2 倍）。</li> </ul> <hr /> <h1>摘要</h1> <h2>大模型的 VRAM 困境與效能瓶頸</h2> <p>作者在影片中指出，當前許多表現優異的開源大型語言模型，例如 Jemma 3 27B 和 Qwen 3 32B，在運行時需要 10 至 20GB 的顯示卡記憶體 (VRAM)。這對於大多數家用電腦的顯示卡（通常只有 8 到 12GB VRAM）來說，是一個難以達到的高門檻。當 VRAM 不足時，模型便需要依賴 CPU 和記憶體來混合運算，這會導致推理速度大幅下降。作者以自己的電腦（配備 Intel i5-14400F 和 RTX 4070 Super 顯示卡）運行 Deepseek 24B 模型為例，展示了其輸出速度僅為每秒約 7 到 8 個 Token，這樣的效能遠不足以支援日常開發或流暢的使用體驗。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_0.jpg" /></p> <hr /> <h2>分散式推理方案的探索與最終選擇</h2> <p>為了解決上述問題，作者開始探索是否能利用多台具備獨立顯示卡的筆記型電腦或桌上型電腦，實現分佈式推理。起初，作者考量了多種現有解決方案，包括企業級推理框架 <strong>vLLM</strong> 和專為 Mac 設計的 <strong>EXO</strong>，但這些方案在 Windows 環境下的設定複雜或相容性不佳，因此被排除。另一選項 <strong>Mistral RS</strong> 雖然支援多數模型，但在新模型支援速度和 GGUF 格式的廣泛性上仍有不足。最終，作者選擇了 <strong>Llama.cpp</strong>，因為其已內建 <strong>RPC (Remote Procedure Call)</strong> 伺服器功能，能夠實現模型的分散式推理並自動分配各個節點載入的模型比例。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_110.jpg" /></p> <hr /> <h2>概念驗證與 GUI 工具的開發</h2> <p>為了驗證 Llama.cpp RPC 功能的可行性，作者首先進行了手動設定和測試。他將 Llama.cpp 的二進位檔案部署到兩台電腦上，一台作為 RPC 伺服器，另一台作為主機，透過設定 IP 位址和通訊埠進行連線。測試結果顯示，模型輸出速度從原本的每秒 7 到 8 個 Token 提升至每秒 17 個 Token 以上，證明了分散式推理的有效性。隨後，為簡化設定與管理流程，作者決定開發一個圖形使用者介面（GUI）工具。在開發過程中，作者利用了 <strong>AI 工具 (RoboDev CLI)</strong>，透過在 Google AI Studio 中提供需求重點，並讓 Gemini 2.5 Pro 整理出開發文件，再由 RoboDev CLI 逐步產生程式碼並進行調校，大幅提高了開發效率。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_184.jpg" /></p> <hr /> <h2>「窮人版 AI 叢集」工具的展示與功能介紹</h2> <p>這款由作者開發的 <strong>LLM 分散式推理工具</strong>，能夠在程式啟動時自動開啟 RPC 伺服器，並自動在區域網路內搜尋其他運行中的節點。如果自動偵測失敗，用戶也能手動添加 IP 位址。工具的介面直觀易用，右側顯示本機的網路資訊和已連線的節點，左下方則提供 API 伺服器設定，包括 API Token 類型、GPU 層數和 API 並行呼叫的數量。此外，該工具還提供了簡易的網頁對話介面，方便使用者直接與模型互動，並且可以與像 OpenWebUI 等其他工具整合，極大化其應用彈性。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_352.jpg" /></p> <hr /> <h2>安全性警告與未來展望</h2> <p>作者特別強調，<strong>Llama.cpp 的 RPC 功能目前仍處於實驗階段，且已被確認存在相關的安全性漏洞</strong>。因此，他強烈建議使用者僅在安全的內部網路環境中（例如家庭網路）使用此專案，避免在生產環境中部署。儘管 Llama.cpp 的平行處理能力並非頂尖，但對於個人使用者而言，如果家中有閒置的多台電腦，這個專案提供了一個經濟實惠且有效的解決方案，讓他們能夠運行更大的語言模型。作者已將此專案開源至 GitHub，並提供打包好的可執行檔供大眾下載使用，未來也將持續更新與優化。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_454.jpg" /></p> <hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p>今天要來跟大家介紹的，是我上週做的專案 ── llamacpp-distributed-inference。這是一個可以利用多台電腦來運行LLM的專案，雖然本身沒用什麼泰特別的技術，就是使用 llamacpp 現在已經支援的 rpc 功能，但因為還是有一些用處，所以就拿出來跟大家分享w</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>專案 GitHub 頁面:</p><p><a href="https://github.com/ADT109119/llamacpp-distributed-inference">https://github.com/ADT109119/llamacpp-distributed-inference</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/llamacpp-distributed-inference/">https://the-walking-fish.com/p/llamacpp-distributed-inference/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 前言：大模型的 VRAM 困境</p><p>00:45 問題演示：單機運行速度有多慢？</p><p>01:21 問題根源：CPU 與記憶體頻寬瓶頸</p><p>01:40 解決方案：用分散式推理組建電腦戰隊！</p><p>01:50 方案探索：vLLM, exo為何不適用？</p><p>02:44 最終選擇：Llama.cpp 的 RPC 功能</p><p>03:04 概念驗證：手動開啟 RPC 伺服器分佈推理</p><p>04:42 從指令到介面：開發 GUI 工具</p><p>04:53 開發過程全公開：我如何用 AI (RoboDev CLI) 寫程式</p><p>05:52 成品展示：LLM 分散式推理工具登場！</p><p>06:21 實戰演示：多台電腦自動偵測與連線</p><p>06:34 功能介紹：API 設定、GPU 層數與並行數量</p><p>07:34 ⚠️【重要】安全性警告與使用須知</p><p>08:08 結語與總結</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/UtaDMH_EZuw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解如何突破家用電腦顯示卡的記憶體限制，以運行大型語言模型（LLM）。</li> <li>探索一個實用的開源專案「llamacpp-distributed-inference」，該專案利用 Llama.cpp 的 RPC 功能實現分散式推理。</li> <li>學習如何整合多台規格較低的電腦，共同加速 LLM 的推理速度，並從中獲得顯著的效能提升（例如速度提升 2 倍）。</li> </ul> <hr /> <h1>摘要</h1> <h2>大模型的 VRAM 困境與效能瓶頸</h2> <p>作者在影片中指出，當前許多表現優異的開源大型語言模型，例如 Jemma 3 27B 和 Qwen 3 32B，在運行時需要 10 至 20GB 的顯示卡記憶體 (VRAM)。這對於大多數家用電腦的顯示卡（通常只有 8 到 12GB VRAM）來說，是一個難以達到的高門檻。當 VRAM 不足時，模型便需要依賴 CPU 和記憶體來混合運算，這會導致推理速度大幅下降。作者以自己的電腦（配備 Intel i5-14400F 和 RTX 4070 Super 顯示卡）運行 Deepseek 24B 模型為例，展示了其輸出速度僅為每秒約 7 到 8 個 Token，這樣的效能遠不足以支援日常開發或流暢的使用體驗。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_0.jpg" /></p> <hr /> <h2>分散式推理方案的探索與最終選擇</h2> <p>為了解決上述問題，作者開始探索是否能利用多台具備獨立顯示卡的筆記型電腦或桌上型電腦，實現分佈式推理。起初，作者考量了多種現有解決方案，包括企業級推理框架 <strong>vLLM</strong> 和專為 Mac 設計的 <strong>EXO</strong>，但這些方案在 Windows 環境下的設定複雜或相容性不佳，因此被排除。另一選項 <strong>Mistral RS</strong> 雖然支援多數模型，但在新模型支援速度和 GGUF 格式的廣泛性上仍有不足。最終，作者選擇了 <strong>Llama.cpp</strong>，因為其已內建 <strong>RPC (Remote Procedure Call)</strong> 伺服器功能，能夠實現模型的分散式推理並自動分配各個節點載入的模型比例。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_110.jpg" /></p> <hr /> <h2>概念驗證與 GUI 工具的開發</h2> <p>為了驗證 Llama.cpp RPC 功能的可行性，作者首先進行了手動設定和測試。他將 Llama.cpp 的二進位檔案部署到兩台電腦上，一台作為 RPC 伺服器，另一台作為主機，透過設定 IP 位址和通訊埠進行連線。測試結果顯示，模型輸出速度從原本的每秒 7 到 8 個 Token 提升至每秒 17 個 Token 以上，證明了分散式推理的有效性。隨後，為簡化設定與管理流程，作者決定開發一個圖形使用者介面（GUI）工具。在開發過程中，作者利用了 <strong>AI 工具 (RoboDev CLI)</strong>，透過在 Google AI Studio 中提供需求重點，並讓 Gemini 2.5 Pro 整理出開發文件，再由 RoboDev CLI 逐步產生程式碼並進行調校，大幅提高了開發效率。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_184.jpg" /></p> <hr /> <h2>「窮人版 AI 叢集」工具的展示與功能介紹</h2> <p>這款由作者開發的 <strong>LLM 分散式推理工具</strong>，能夠在程式啟動時自動開啟 RPC 伺服器，並自動在區域網路內搜尋其他運行中的節點。如果自動偵測失敗，用戶也能手動添加 IP 位址。工具的介面直觀易用，右側顯示本機的網路資訊和已連線的節點，左下方則提供 API 伺服器設定，包括 API Token 類型、GPU 層數和 API 並行呼叫的數量。此外，該工具還提供了簡易的網頁對話介面，方便使用者直接與模型互動，並且可以與像 OpenWebUI 等其他工具整合，極大化其應用彈性。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_352.jpg" /></p> <hr /> <h2>安全性警告與未來展望</h2> <p>作者特別強調，<strong>Llama.cpp 的 RPC 功能目前仍處於實驗階段，且已被確認存在相關的安全性漏洞</strong>。因此，他強烈建議使用者僅在安全的內部網路環境中（例如家庭網路）使用此專案，避免在生產環境中部署。儘管 Llama.cpp 的平行處理能力並非頂尖，但對於個人使用者而言，如果家中有閒置的多台電腦，這個專案提供了一個經濟實惠且有效的解決方案，讓他們能夠運行更大的語言模型。作者已將此專案開源至 GitHub，並提供打包好的可執行檔供大眾下載使用，未來也將持續更新與優化。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/UtaDMH_EZuw_454.jpg" /></p> <hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=UtaDMH_EZuw">https://www.youtube.com/watch?v=UtaDMH_EZuw</a></p><p>今天要來跟大家介紹的，是我上週做的專案 ── llamacpp-distributed-inference。這是一個可以利用多台電腦來運行LLM的專案，雖然本身沒用什麼泰特別的技術，就是使用 llamacpp 現在已經支援的 rpc 功能，但因為還是有一些用處，所以就拿出來跟大家分享w</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>專案 GitHub 頁面:</p><p><a href="https://github.com/ADT109119/llamacpp-distributed-inference">https://github.com/ADT109119/llamacpp-distributed-inference</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/llamacpp-distributed-inference/">https://the-walking-fish.com/p/llamacpp-distributed-inference/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 前言：大模型的 VRAM 困境</p><p>00:45 問題演示：單機運行速度有多慢？</p><p>01:21 問題根源：CPU 與記憶體頻寬瓶頸</p><p>01:40 解決方案：用分散式推理組建電腦戰隊！</p><p>01:50 方案探索：vLLM, exo為何不適用？</p><p>02:44 最終選擇：Llama.cpp 的 RPC 功能</p><p>03:04 概念驗證：手動開啟 RPC 伺服器分佈推理</p><p>04:42 從指令到介面：開發 GUI 工具</p><p>04:53 開發過程全公開：我如何用 AI (RoboDev CLI) 寫程式</p><p>05:52 成品展示：LLM 分散式推理工具登場！</p><p>06:21 實戰演示：多台電腦自動偵測與連線</p><p>06:34 功能介紹：API 設定、GPU 層數與並行數量</p><p>07:34 ⚠️【重要】安全性警告與使用須知</p><p>08:08 結語與總結</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/UtaDMH_EZuw/hqdefault.jpg"/>
      <pubDate>2025-07-27T09:00:39.000Z</pubDate>
    </item><item>
      <title><![CDATA[免費版 Claude Code！每天免費 2000 萬 tokens　白漂 Claude Sonnet 4！｜Rovo Dev CLI 安裝到實戰完整教學　快速上手！]]></title>
      <link>https://www.youtube.com/watch?v=SnyLxg4snHw</link>
      <itunes:title><![CDATA[免費版 Claude Code！每天免費 2000 萬 tokens　白漂 Claude Sonnet 4！｜Rovo Dev CLI 安裝到實戰完整教學　快速上手！]]></itunes:title>
      <itunes:author><![CDATA[The walking fish 步行魚]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/SnyLxg4snHw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解由 Atlassian 推出的免費指令列 AI 工具 Rovo Dev CLI，及其採用的強大模型 <strong>Claude Sonnet 4</strong>。</li> <li>學習如何安裝 Rovo Dev CLI、設定 <strong>API Token</strong>，並進行基本操作。</li> <li>透過作者的實際專案示範，了解 Rovo Dev CLI 在程式開發上的應用與效能表現，以及與 Google Gemini CLI 的比較，並注意目前存在的<strong>已知問題</strong>。</li> </ul> <hr /> <h1>摘要</h1> <p>影片中，作者介紹了一款名為 <strong>Rovo Dev CLI</strong> 的指令列 Agent 工具。這款工具由 Atlassian 公司開發，並使用 Anthropic 的 <strong>Claude Sonnet 4</strong> 模型，偶爾會自動切換至 Sonnet 3.7 或 Sonnet 3.5v2。目前處於免費 Beta 階段，每天提供高達 <strong>2000 萬個 tokens</strong> 的使用額度，作者認為這對於中小專案來說已相當充足。作者也分享測試心得，認為 Claude Sonnet 4 在程式能力方面的表現略優於 Gemini 2.5 Pro。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_100.jpg" /></p> <h2>安裝與設定</h2> <p>作者接著詳細說明了 Rovo Dev CLI 的安裝流程。首先需要在 Atlassian 官網註冊帳號（支援 Google 登入）。接著下載 Rovo Dev CLI 的<strong>二進位檔</strong> (.exe)，作者建議直接下載後手動加到系統的 <strong>Path 環境變數</strong>中，例如放到 `System32` 資料夾或自訂位置後設定環境變數。安裝成功後，可以在命令提示字元中輸入 `acli --version` 來確認版本資訊。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_230.jpg" /></p> <p>安裝程式本體後，需要到 Atlassian 後台註冊使用 Rovo Dev CLI 所需的 <strong>API Token</strong>。作者提醒，基於安全考量，Token 最長只能設定一年的有效期限。創建 Token 後，需要將其複製下來，因為關閉視窗後將無法再次複製。接著在命令提示字元中輸入 `acli rovodev auth login`，依指示輸入註冊的 Email 和複製的 API Token 即可完成驗證。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p> <h2>初次使用與基本指令</h2> <p>作者強調 Rovo Dev CLI 的工作路徑是依照啟動時終端機所在的目錄位置。首次執行 `acli rovodev run` 指令時，系統會提示需要安裝「Rovo Dev agent」，並提供一個網址。作者引導觀眾透過網址頁面完成 agent 安裝後，再次執行 `acli rovodev run` 即可進入 Rovo Dev CLI 的命令列介面。在這個介面底部可以輸入指令。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_390.jpg" /></p> <p>透過輸入 `/help` 指令，作者展示了 Rovo Dev CLI 提供的一些基本指令，例如 `/sessions` 檢視過往對話、`/clear` 清除目前對話、`/prune` 壓縮對話（此功能目前有 Bug）、`/memory init` 創建記憶文件，以及 `/usage` 查看當日用量。作者認為其指令介面說明不如 Gemini CLI 詳細。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p> <h2>專案實測與權限控制</h2> <p>作者以修改一個舊的記帳程式專案作為示範。他預先編寫好修改計畫，並將其輸入給 Agent。在 Agent 執行修改的過程中，如果需要執行指令或修改檔案，Agent 會<strong>詢問權限</strong>。Rovo Dev CLI 提供了「只同意一次」、「在這個 Session 中都同意」、「永遠都允許」或「拒絕」等選項，比 Gemini CLI 更具彈性。作者也說明了若設定錯誤，可以手動到使用者的 `.rovodev` 資料夾中的 `config.yml` 檔案，修改 `toolPermissions` 項目來調整權限設定。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_580.jpg" /></p> <p>在操作介面中，作者展示了目前 Session 使用的 Token 數量以及每日額度的用量。專案修改完成後，作者表示最終花費大約一個小時的時間（分兩天完成，總共使用 1600 萬 tokens），就做出了功能基本完善的記帳程式，對成果感到相當滿意。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_11.jpg" /></p> <h2>與 Gemini CLI 的比較及已知問題</h2> <p>作者比較了 Rovo Dev CLI 和 Gemini CLI。Rovo Dev CLI 的明顯優勢在於免費使用時幾乎總是使用程式能力較強的 <strong>Claude Sonnet 4</strong>。相較之下，Gemini CLI 的免費額度用盡後會降級為程式能力較弱的 Gemini 2.5 Flash。然而，Gemini CLI 預設支援網頁抓取和 Google 搜尋功能，而 Rovo Dev CLI 需要手動設定 <strong>mcp server</strong> (在 `.rovodev/mcp.json` 中配置) 才能使用這些工具。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_12.jpg" /></p> <p>作者特別提醒 Rovo Dev CLI 目前有一個重要的已知問題：使用 `/prune` 指令嘗試壓縮對話內容時會<strong>發生錯誤並導致 CLI 崩潰退出</strong>，之後甚至無法再次啟動 Rovo Dev CLI。解決方法是手動前往使用者的 `.rovodev/sessions` 資料夾，刪除最新（有問題）的 Session 資料夾。作者建議使用者目前應避免使用此指令，直到問題修復。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_14.jpg" /></p> <h2>總結與推薦</h2> <p>總體而言，作者認為 Rovo Dev CLI 在實際撰寫程式的效果上優於 Gemini CLI，許多修改只需說明一次即可完成，產生的程式錯誤也較少。他推測這可能與 Gemini CLI 內部使用的提示詞或工具調用格式有關。作者強力推薦大家在 Beta 階段多多嘗試 Rovo Dev CLI，免費體驗 Claude Sonnet 4 的程式輔助能力。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_15.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=0" target="_blank"><strong># Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在上週我跟大家介紹了。Google 推出的 Gemini CLI。這款基於 Gemini 模型的命令列 Agent 工具。而今天我們來跟大家介紹另一款工具。Rovo Dev CLI. 它也是一個使用命令列來操作的 Agent 工具。但它所使用的模型是 Anthropic 的 Claude Sonnet 4。目前這個工具正處於免費使用階段(Beta)。每天可以使用的免費額度高達 2000 萬個 tokens。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來跟大家簡單介紹一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 是由 Atlassian 這間公司所推出的一款新產品。這間公司它也有一些其他的知名產品。像管理專案用的 Jira 還有 Trello(收購來的)。總之這次他們推出的 Rovo Dev CLI。可以說是相當的佛心。使用的是 Anthropic 的 Claude Sonnet 4 模型。視情況可能會自動切換為 Sonnet 3.7 或者是 Sonnet 3.5v2。並且每日提供 20M。也就是 2000 萬 tokens 的使用量。這個用量做一些中小型的專案。基本上算用不太完。而之前在 Claude 4 推出的時候。我有稍微簡單測試了一下。得出的結論大約是 Claude Sonnet 4 程式能力方面的表現。是稍微優於 Gemini 2.5 Pro 的。只能說 Atlassian 真的佛心公司。那麼接下來我們就來跟大家介紹一下。要如何在自己電腦上使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_79.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=79" target="_blank"><strong># 【安裝教學】註冊與下載 Rovo Dev CLI</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 的安裝相較於 Gemini CLI 比較麻煩一點點。首先我們需要先進到 Rovo Dev CLI 的這個頁面。在這裡它會告訴我們。我們需要先註冊一個 Atlassian 的帳號。註冊的部分這邊大家不用擔心。它可以直接使用 Google 登入。在註冊完後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就要來安裝 Rovo Dev CLI 的程式本體。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Atlassian 它有提供二進位檔。我們可以直接下載來使用。我們點進這邊 Windows 的連結。在裡面它有提供 x86 以及 arm64 的下載指令。這邊我會比較推薦不要直接使用這個指令來下載。因為最終我們還是要手動。將這個東西給加到環境變數的 Path 裡面。除非我們使用管理員權限來開啟 PowerShell。並且到 System32 這類預設已經加入到 Path 環境變數的地方。執行這條指令才能夠直接使用。所以我個人是不太建議使用這個指令的。我們直接複製中間它這個 exe 檔的網址。然後開個新分頁貼上按 Enter 下載。下載完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來就看大家習慣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果圖方便的話。我們可以直接將這個檔案丟到 C 槽。裡的 Windows 裡的 System32 資料夾。這個資料夾預設有被加入到 Path 環境變數中。所以丟在裡面的 exe 檔。可以直接在命令提示字元中執行。我個人習慣會到 Program Files 資料夾裡。創建一個新的資料夾。這邊我就給它取名一個 Rovo Dev CLI。將這一個檔案放到裡面。然後將它加到環境變數。放好檔案後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_164.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=164" target="_blank"><strong># 【驗證設定】獲取 API Token 並登入驗證</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們再開一個命令提示字元。在裡面輸入 `acli --version`。如果有跳出版本訊息的話。就代表我們安裝成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們需要到 Atlassian 的後台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">註冊使用 Rovo Dev CLI 所需要的 API Token。在這邊稍微有一點比較特別的是。Atlassian 它只允許我們創建。最長一年的 API Token。它給出的理由是基於安全原因。所以 token 不能夠是不會過期的。那我們就把它的時間稍微拉長一點。然後取個我們方便辨識的名字。像這邊我就可以取 Rovo Dev。然後點擊創建。創建完這一個視窗我們不要把它關起來。關起來後。那我們就沒有辦法再複製它了。我們先打開一個命令提示字元。然後輸入以下這條指令：。`acli rovodev auth login` 來進行驗證。它應該會跳出要我們輸入 email。以及 API Token。我們就給它輸入。然後複製 API Token。將它貼上。輸入完按 Enter。沒有意外的話。它應該會顯示一個驗證成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_224.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就可以開始使用 Rovo Dev CLI 了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_227.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=227" target="_blank"><strong># 【首次啟動】建立 Agent 並進入操作介面</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 與 Gemini CLI 等這類工具一樣。它的工作路徑。是依據我們在啟動它時。terminal 所在的目錄位置。所以這邊我就先進到一個我想要修改的專案。在檔案總管上方的路徑列。裡面輸入 `cmd`。開啟一個路徑為此目錄的命令提示字元。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就可以輸入。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">`acli rovodev run`. 如果這個帳號是第一次輸這條指令的話。那打開的時候它應該會跳一個。`Rovo Dev agent is not installed on your site`. 然後附上一個網址。這邊我們就直接按著 Ctrl。對它點左鍵。它會進到 Rovo Dev agent 的創建網站網頁。這邊我們不用動它直接按 continue 進去。然後稍等一下。看到裡面它有顯示一些工具出來。那我們就可以回到命令提示字元。再輸入一次剛剛的指令了。沒有意外的話。我們應該就可以看到這個頁面。在底部我們就可以來輸入我們想要的命令。免費使用 Claude Sonnet 4。來做一些專案了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_287.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=287" target="_blank"><strong># 基本指令介紹 (/help, /sessions, /clear...)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在一開始我們當然還是一樣。使用"/help"來看一下它有哪些指令。然後它的這個指令介面。說實在寫得其實並不算太好。並沒有像 Gemini CLI 這麼詳細。但是一些基本的用法還是可以從這邊看到。像我們可以用「/sessions」。來叫出過往的對話。「/clear」清除目前的對話。「/prune」來壓縮目前的對話。只不過這個功能目前有 bug。等一下會提到。「/memory init」. 來創建記憶文件。以及「/usage」。來查看今日我們使用了多少的用量。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=320" target="_blank"><strong># 【實戰開始】用 AI 修改既有專案</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就直接上。我今天想要修改的東西。這個是我很久很久以前。剛學一點前端。用來練習製作的一個記帳程式。這邊我已經先編寫好了一個修改的計畫。我們這邊就輸入。讓它根據這個檔案開始進行修改。在修改的途中如果有需要執行指令。或者是要修改檔案。它也一樣會詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_341.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=341" target="_blank"><strong># 獨特的權限管理系統 (同意/拒絕指令)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那這邊相較於 Gemini CLI。它多了一點選擇。可以讓我們只同意一次、在這個 session 中都同意。或者是永遠都允許這個指令。拒絕的部分也一樣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">當然如果不小心設錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還是有修改的餘地。我們可以進到 C 槽、「使用者」、我們的使用者名稱。裡面會有一個 `.rovodev` 的資料夾。打開 `config.yml`。稍微往下滾一點。就可以看到 `toolPermissions` 的項目。像如果我們不想讓 `mkdir` 這個指令。可以每次都執行的話。我們就將它的 permission。從 `allow` 改為 `ask`。這樣它就會每次要執行的時候都詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_377.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=377" target="_blank"><strong># AI 執行與互動過程展示</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK看回到 Rovo Dev CLI 的操作介面。在這裡面。剛剛我們執行的第一段指令。它已經執行到一個段落了。此時在下方它會顯示我們目前的用量。它有寫目前這個 session 有多少 token。以及我們每日額度用了多少。而接下來的操作其實就跟在使用。Gemini CLI 或其他類似的工具時一樣。就要開始微調我們所生成的東西。我們可以貼上我們遇到的錯誤。或者是可以根據需求再額外添加、修改。想要的介面與功能。最終大概花一個小時左右的時間。就做出了一個功能基本上完善的記帳程式。當然在今天我正錄影的當下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實我還是有再稍微使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改一下細節的功能還有一些樣式。整體效果我個人感覺算還蠻滿意的。總共使用的 token 數量是 7M + 9M。也就是 1600 萬個 token。之所以會分兩天。主要是昨天測試的時候已經太晚了。弄一弄太累就直接去睡了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天才來繼續把它做完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_435.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=435" target="_blank"><strong># - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">而且 Rovo Dev CLI。它目前有一個非常明顯的好處。就是基本上它都會是使用 Claude Sonnet 4。而如果是使用 Gemini CLI。雖然它的免費額度也是給蠻多的。但 Gemini 2.5 Pro 的免費額度其實並不算太多。用一用就會變 Gemini 2.5 Flash。而 Gemini 2.5 Flash。它在程式方面的能力。基本上算是不太可用的。但 Gemini CLI 還是有它的優勢。像它預設就支援。可以使用網頁抓取。以及可以免費使用 Google 搜尋的功能。這些功能在 Rovo Dev CLI 上。我們都必須手動設定 mcp server 才能夠使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=470" target="_blank"><strong># - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">哦對了既然講到了就順便提一下。Rovo Dev CLI 要設定 mcp server。要進到 C 槽的「使用者」、使用者名稱裡面的 `.rovodev` 資料夾。在這裡創建一個 `mcp.json`。裡面的內容按照以下的格式填寫。就可以添加 Rovo Dev CLI 能夠使用的工具了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_489.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=489" target="_blank"><strong># - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後來稍微講一下 Rovo Dev 目前它有的一個問題。在輸入斜線後我們可以看到它有一個 `prune` 指令。能夠修剪、壓縮我們目前 session 裡的對話內容。以防它超過 Claude Sonnet 4 的 200K context window 大小。但這個功能目前有 bug。我們輸入 `prune` 之後。稍等一下就會看到它顯示發生錯誤。然後直接退出了 Rovo Dev CLI 的介面。此時甚至我們不做處理的話。就再也沒辦法開啟 Rovo Dev CLI 了。我們輸一下 `acli rovodev run`。可以發現它會顯示發生錯誤然後退出。我們到其他資料夾裡面也是一樣的結果。而此時的解決辦法就是我們要到 C 槽、「使用者」、我們的使用者名稱裡面的 `.rovodev` 資料夾中。進到 `sessions` 裡。直接讓它按修改時間排序。最上面應該就會是我們剛剛對話的 session。將這個資料夾刪除掉就可以解決。當然我們可以先進去檢查一下。如果是有問題的 session 的話。點進資料夾它裡面的 `session_context.json`。會是完全沒有內容的。而其他的 session 我們打開來看。可以看到它裡面會有我們的對話、還有它調用工具的紀錄等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_558.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之將有問題的 session 刪掉。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們就可以再正常的打開了。所以稍微注意一下。目前沒事不要亂輸這個指令。也不知道他們什麼時候會修好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_565.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=565" target="_blank"><strong># - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK以上就是今天影片全部的內容。個人感覺 Rovo Dev CLI 它使用起來寫程式的效果。其實是比 Gemini CLI 還要好的。很多的修改我幾乎都只要講一次。就可以修改完成。而產出的程式也幾乎不會遇到太多錯誤。這部分模型方面的影響可能不是決定性的。因為之前在測試 Claude Sonnet 4 的時候。跟當時還在 Preview 版的 Gemini 2.5 Pro 相比。Claude Sonnet 4 並沒有強上多少。而現在更強的 Gemini 2.5 Pro 正式版都出來了。沒道理 Gemini CLI 需要更多次的提示。才能夠完成一個任務。而使用 VS Code 搭配 Cline 插件。Gemini 2.5 Pro 的表現又非常的好。所以基本上可以確定。它的問題是出在 Gemini CLI。它所使用的提示詞。或者是工具調用回傳的格式影響。導致它的表現並沒有這麼好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_614.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=614" target="_blank"><strong># - 結語 & 最終推薦</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之目前非常推薦大家。可以用用看這個 Rovo Dev CLI 的工具。免費用 Claude Sonnet 4 來幫我們做一些東西。雖然不知道它的 beta 到什麼時候會結束。OK各位觀眾。我們就。下支影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><p>上週跟大家介紹了 Google 的 Gemini CLI，今天要來跟大家介紹另外一款，目前一樣免費，而且是使用 Claude Sonnet 4 模型的 CLI Agent 工具 ── Rovo Dev CLI。他可以免費使用 Claude Sonnet 4 模型，且免費額度非常高，每日有 2000 萬 Tokens。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>官方安裝教學:</p><p><a href="https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623">https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623</a></p><p></p><p>Rovo Dev CLI 官方介紹:</p><p><a href="https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information">https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information</a></p><p></p><p>今天測試的專案成品連結:</p><p><a href="https://jijun.the-walking-fish.com/">https://jijun.the-walking-fish.com/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/rovo-dev-cli/">https://the-walking-fish.com/p/rovo-dev-cli/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</p><p>00:00 Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</p><p>01:19 【安裝教學】註冊與下載 Rovo Dev CLI</p><p>02:44 【驗證設定】獲取 API Token 並登入驗證</p><p>03:47 【首次啟動】建立 Agent 並進入操作介面</p><p>04:47 基本指令介紹 (/help, /sessions, /clear...)</p><p>05:20 【實戰開始】用 AI 修改既有專案</p><p>05:41 獨特的權限管理系統 (同意/拒絕指令)</p><p>06:17 AI 執行與互動過程展示</p><p>07:15 - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</p><p>07:50 - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</p><p>08:09 - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</p><p>09:25 - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</p><p>10:14 - 結語 & 最終推薦</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/SnyLxg4snHw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解由 Atlassian 推出的免費指令列 AI 工具 Rovo Dev CLI，及其採用的強大模型 <strong>Claude Sonnet 4</strong>。</li> <li>學習如何安裝 Rovo Dev CLI、設定 <strong>API Token</strong>，並進行基本操作。</li> <li>透過作者的實際專案示範，了解 Rovo Dev CLI 在程式開發上的應用與效能表現，以及與 Google Gemini CLI 的比較，並注意目前存在的<strong>已知問題</strong>。</li> </ul> <hr /> <h1>摘要</h1> <p>影片中，作者介紹了一款名為 <strong>Rovo Dev CLI</strong> 的指令列 Agent 工具。這款工具由 Atlassian 公司開發，並使用 Anthropic 的 <strong>Claude Sonnet 4</strong> 模型，偶爾會自動切換至 Sonnet 3.7 或 Sonnet 3.5v2。目前處於免費 Beta 階段，每天提供高達 <strong>2000 萬個 tokens</strong> 的使用額度，作者認為這對於中小專案來說已相當充足。作者也分享測試心得，認為 Claude Sonnet 4 在程式能力方面的表現略優於 Gemini 2.5 Pro。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_100.jpg" /></p> <h2>安裝與設定</h2> <p>作者接著詳細說明了 Rovo Dev CLI 的安裝流程。首先需要在 Atlassian 官網註冊帳號（支援 Google 登入）。接著下載 Rovo Dev CLI 的<strong>二進位檔</strong> (.exe)，作者建議直接下載後手動加到系統的 <strong>Path 環境變數</strong>中，例如放到 `System32` 資料夾或自訂位置後設定環境變數。安裝成功後，可以在命令提示字元中輸入 `acli --version` 來確認版本資訊。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_230.jpg" /></p> <p>安裝程式本體後，需要到 Atlassian 後台註冊使用 Rovo Dev CLI 所需的 <strong>API Token</strong>。作者提醒，基於安全考量，Token 最長只能設定一年的有效期限。創建 Token 後，需要將其複製下來，因為關閉視窗後將無法再次複製。接著在命令提示字元中輸入 `acli rovodev auth login`，依指示輸入註冊的 Email 和複製的 API Token 即可完成驗證。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p> <h2>初次使用與基本指令</h2> <p>作者強調 Rovo Dev CLI 的工作路徑是依照啟動時終端機所在的目錄位置。首次執行 `acli rovodev run` 指令時，系統會提示需要安裝「Rovo Dev agent」，並提供一個網址。作者引導觀眾透過網址頁面完成 agent 安裝後，再次執行 `acli rovodev run` 即可進入 Rovo Dev CLI 的命令列介面。在這個介面底部可以輸入指令。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_390.jpg" /></p> <p>透過輸入 `/help` 指令，作者展示了 Rovo Dev CLI 提供的一些基本指令，例如 `/sessions` 檢視過往對話、`/clear` 清除目前對話、`/prune` 壓縮對話（此功能目前有 Bug）、`/memory init` 創建記憶文件，以及 `/usage` 查看當日用量。作者認為其指令介面說明不如 Gemini CLI 詳細。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p> <h2>專案實測與權限控制</h2> <p>作者以修改一個舊的記帳程式專案作為示範。他預先編寫好修改計畫，並將其輸入給 Agent。在 Agent 執行修改的過程中，如果需要執行指令或修改檔案，Agent 會<strong>詢問權限</strong>。Rovo Dev CLI 提供了「只同意一次」、「在這個 Session 中都同意」、「永遠都允許」或「拒絕」等選項，比 Gemini CLI 更具彈性。作者也說明了若設定錯誤，可以手動到使用者的 `.rovodev` 資料夾中的 `config.yml` 檔案，修改 `toolPermissions` 項目來調整權限設定。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_580.jpg" /></p> <p>在操作介面中，作者展示了目前 Session 使用的 Token 數量以及每日額度的用量。專案修改完成後，作者表示最終花費大約一個小時的時間（分兩天完成，總共使用 1600 萬 tokens），就做出了功能基本完善的記帳程式，對成果感到相當滿意。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_11.jpg" /></p> <h2>與 Gemini CLI 的比較及已知問題</h2> <p>作者比較了 Rovo Dev CLI 和 Gemini CLI。Rovo Dev CLI 的明顯優勢在於免費使用時幾乎總是使用程式能力較強的 <strong>Claude Sonnet 4</strong>。相較之下，Gemini CLI 的免費額度用盡後會降級為程式能力較弱的 Gemini 2.5 Flash。然而，Gemini CLI 預設支援網頁抓取和 Google 搜尋功能，而 Rovo Dev CLI 需要手動設定 <strong>mcp server</strong> (在 `.rovodev/mcp.json` 中配置) 才能使用這些工具。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_12.jpg" /></p> <p>作者特別提醒 Rovo Dev CLI 目前有一個重要的已知問題：使用 `/prune` 指令嘗試壓縮對話內容時會<strong>發生錯誤並導致 CLI 崩潰退出</strong>，之後甚至無法再次啟動 Rovo Dev CLI。解決方法是手動前往使用者的 `.rovodev/sessions` 資料夾，刪除最新（有問題）的 Session 資料夾。作者建議使用者目前應避免使用此指令，直到問題修復。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_14.jpg" /></p> <h2>總結與推薦</h2> <p>總體而言，作者認為 Rovo Dev CLI 在實際撰寫程式的效果上優於 Gemini CLI，許多修改只需說明一次即可完成，產生的程式錯誤也較少。他推測這可能與 Gemini CLI 內部使用的提示詞或工具調用格式有關。作者強力推薦大家在 Beta 階段多多嘗試 Rovo Dev CLI，免費體驗 Claude Sonnet 4 的程式輔助能力。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_15.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=0" target="_blank"><strong># Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在上週我跟大家介紹了。Google 推出的 Gemini CLI。這款基於 Gemini 模型的命令列 Agent 工具。而今天我們來跟大家介紹另一款工具。Rovo Dev CLI. 它也是一個使用命令列來操作的 Agent 工具。但它所使用的模型是 Anthropic 的 Claude Sonnet 4。目前這個工具正處於免費使用階段(Beta)。每天可以使用的免費額度高達 2000 萬個 tokens。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來跟大家簡單介紹一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 是由 Atlassian 這間公司所推出的一款新產品。這間公司它也有一些其他的知名產品。像管理專案用的 Jira 還有 Trello(收購來的)。總之這次他們推出的 Rovo Dev CLI。可以說是相當的佛心。使用的是 Anthropic 的 Claude Sonnet 4 模型。視情況可能會自動切換為 Sonnet 3.7 或者是 Sonnet 3.5v2。並且每日提供 20M。也就是 2000 萬 tokens 的使用量。這個用量做一些中小型的專案。基本上算用不太完。而之前在 Claude 4 推出的時候。我有稍微簡單測試了一下。得出的結論大約是 Claude Sonnet 4 程式能力方面的表現。是稍微優於 Gemini 2.5 Pro 的。只能說 Atlassian 真的佛心公司。那麼接下來我們就來跟大家介紹一下。要如何在自己電腦上使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_79.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=79" target="_blank"><strong># 【安裝教學】註冊與下載 Rovo Dev CLI</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 的安裝相較於 Gemini CLI 比較麻煩一點點。首先我們需要先進到 Rovo Dev CLI 的這個頁面。在這裡它會告訴我們。我們需要先註冊一個 Atlassian 的帳號。註冊的部分這邊大家不用擔心。它可以直接使用 Google 登入。在註冊完後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就要來安裝 Rovo Dev CLI 的程式本體。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Atlassian 它有提供二進位檔。我們可以直接下載來使用。我們點進這邊 Windows 的連結。在裡面它有提供 x86 以及 arm64 的下載指令。這邊我會比較推薦不要直接使用這個指令來下載。因為最終我們還是要手動。將這個東西給加到環境變數的 Path 裡面。除非我們使用管理員權限來開啟 PowerShell。並且到 System32 這類預設已經加入到 Path 環境變數的地方。執行這條指令才能夠直接使用。所以我個人是不太建議使用這個指令的。我們直接複製中間它這個 exe 檔的網址。然後開個新分頁貼上按 Enter 下載。下載完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來就看大家習慣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果圖方便的話。我們可以直接將這個檔案丟到 C 槽。裡的 Windows 裡的 System32 資料夾。這個資料夾預設有被加入到 Path 環境變數中。所以丟在裡面的 exe 檔。可以直接在命令提示字元中執行。我個人習慣會到 Program Files 資料夾裡。創建一個新的資料夾。這邊我就給它取名一個 Rovo Dev CLI。將這一個檔案放到裡面。然後將它加到環境變數。放好檔案後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_164.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=164" target="_blank"><strong># 【驗證設定】獲取 API Token 並登入驗證</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們再開一個命令提示字元。在裡面輸入 `acli --version`。如果有跳出版本訊息的話。就代表我們安裝成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們需要到 Atlassian 的後台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">註冊使用 Rovo Dev CLI 所需要的 API Token。在這邊稍微有一點比較特別的是。Atlassian 它只允許我們創建。最長一年的 API Token。它給出的理由是基於安全原因。所以 token 不能夠是不會過期的。那我們就把它的時間稍微拉長一點。然後取個我們方便辨識的名字。像這邊我就可以取 Rovo Dev。然後點擊創建。創建完這一個視窗我們不要把它關起來。關起來後。那我們就沒有辦法再複製它了。我們先打開一個命令提示字元。然後輸入以下這條指令：。`acli rovodev auth login` 來進行驗證。它應該會跳出要我們輸入 email。以及 API Token。我們就給它輸入。然後複製 API Token。將它貼上。輸入完按 Enter。沒有意外的話。它應該會顯示一個驗證成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_224.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就可以開始使用 Rovo Dev CLI 了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_227.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=227" target="_blank"><strong># 【首次啟動】建立 Agent 並進入操作介面</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 與 Gemini CLI 等這類工具一樣。它的工作路徑。是依據我們在啟動它時。terminal 所在的目錄位置。所以這邊我就先進到一個我想要修改的專案。在檔案總管上方的路徑列。裡面輸入 `cmd`。開啟一個路徑為此目錄的命令提示字元。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就可以輸入。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">`acli rovodev run`. 如果這個帳號是第一次輸這條指令的話。那打開的時候它應該會跳一個。`Rovo Dev agent is not installed on your site`. 然後附上一個網址。這邊我們就直接按著 Ctrl。對它點左鍵。它會進到 Rovo Dev agent 的創建網站網頁。這邊我們不用動它直接按 continue 進去。然後稍等一下。看到裡面它有顯示一些工具出來。那我們就可以回到命令提示字元。再輸入一次剛剛的指令了。沒有意外的話。我們應該就可以看到這個頁面。在底部我們就可以來輸入我們想要的命令。免費使用 Claude Sonnet 4。來做一些專案了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_287.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=287" target="_blank"><strong># 基本指令介紹 (/help, /sessions, /clear...)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在一開始我們當然還是一樣。使用"/help"來看一下它有哪些指令。然後它的這個指令介面。說實在寫得其實並不算太好。並沒有像 Gemini CLI 這麼詳細。但是一些基本的用法還是可以從這邊看到。像我們可以用「/sessions」。來叫出過往的對話。「/clear」清除目前的對話。「/prune」來壓縮目前的對話。只不過這個功能目前有 bug。等一下會提到。「/memory init」. 來創建記憶文件。以及「/usage」。來查看今日我們使用了多少的用量。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=320" target="_blank"><strong># 【實戰開始】用 AI 修改既有專案</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就直接上。我今天想要修改的東西。這個是我很久很久以前。剛學一點前端。用來練習製作的一個記帳程式。這邊我已經先編寫好了一個修改的計畫。我們這邊就輸入。讓它根據這個檔案開始進行修改。在修改的途中如果有需要執行指令。或者是要修改檔案。它也一樣會詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_341.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=341" target="_blank"><strong># 獨特的權限管理系統 (同意/拒絕指令)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那這邊相較於 Gemini CLI。它多了一點選擇。可以讓我們只同意一次、在這個 session 中都同意。或者是永遠都允許這個指令。拒絕的部分也一樣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">當然如果不小心設錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還是有修改的餘地。我們可以進到 C 槽、「使用者」、我們的使用者名稱。裡面會有一個 `.rovodev` 的資料夾。打開 `config.yml`。稍微往下滾一點。就可以看到 `toolPermissions` 的項目。像如果我們不想讓 `mkdir` 這個指令。可以每次都執行的話。我們就將它的 permission。從 `allow` 改為 `ask`。這樣它就會每次要執行的時候都詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_377.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=377" target="_blank"><strong># AI 執行與互動過程展示</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK看回到 Rovo Dev CLI 的操作介面。在這裡面。剛剛我們執行的第一段指令。它已經執行到一個段落了。此時在下方它會顯示我們目前的用量。它有寫目前這個 session 有多少 token。以及我們每日額度用了多少。而接下來的操作其實就跟在使用。Gemini CLI 或其他類似的工具時一樣。就要開始微調我們所生成的東西。我們可以貼上我們遇到的錯誤。或者是可以根據需求再額外添加、修改。想要的介面與功能。最終大概花一個小時左右的時間。就做出了一個功能基本上完善的記帳程式。當然在今天我正錄影的當下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實我還是有再稍微使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改一下細節的功能還有一些樣式。整體效果我個人感覺算還蠻滿意的。總共使用的 token 數量是 7M + 9M。也就是 1600 萬個 token。之所以會分兩天。主要是昨天測試的時候已經太晚了。弄一弄太累就直接去睡了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天才來繼續把它做完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_435.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=435" target="_blank"><strong># - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">而且 Rovo Dev CLI。它目前有一個非常明顯的好處。就是基本上它都會是使用 Claude Sonnet 4。而如果是使用 Gemini CLI。雖然它的免費額度也是給蠻多的。但 Gemini 2.5 Pro 的免費額度其實並不算太多。用一用就會變 Gemini 2.5 Flash。而 Gemini 2.5 Flash。它在程式方面的能力。基本上算是不太可用的。但 Gemini CLI 還是有它的優勢。像它預設就支援。可以使用網頁抓取。以及可以免費使用 Google 搜尋的功能。這些功能在 Rovo Dev CLI 上。我們都必須手動設定 mcp server 才能夠使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=470" target="_blank"><strong># - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">哦對了既然講到了就順便提一下。Rovo Dev CLI 要設定 mcp server。要進到 C 槽的「使用者」、使用者名稱裡面的 `.rovodev` 資料夾。在這裡創建一個 `mcp.json`。裡面的內容按照以下的格式填寫。就可以添加 Rovo Dev CLI 能夠使用的工具了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_489.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=489" target="_blank"><strong># - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後來稍微講一下 Rovo Dev 目前它有的一個問題。在輸入斜線後我們可以看到它有一個 `prune` 指令。能夠修剪、壓縮我們目前 session 裡的對話內容。以防它超過 Claude Sonnet 4 的 200K context window 大小。但這個功能目前有 bug。我們輸入 `prune` 之後。稍等一下就會看到它顯示發生錯誤。然後直接退出了 Rovo Dev CLI 的介面。此時甚至我們不做處理的話。就再也沒辦法開啟 Rovo Dev CLI 了。我們輸一下 `acli rovodev run`。可以發現它會顯示發生錯誤然後退出。我們到其他資料夾裡面也是一樣的結果。而此時的解決辦法就是我們要到 C 槽、「使用者」、我們的使用者名稱裡面的 `.rovodev` 資料夾中。進到 `sessions` 裡。直接讓它按修改時間排序。最上面應該就會是我們剛剛對話的 session。將這個資料夾刪除掉就可以解決。當然我們可以先進去檢查一下。如果是有問題的 session 的話。點進資料夾它裡面的 `session_context.json`。會是完全沒有內容的。而其他的 session 我們打開來看。可以看到它裡面會有我們的對話、還有它調用工具的紀錄等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_558.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之將有問題的 session 刪掉。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們就可以再正常的打開了。所以稍微注意一下。目前沒事不要亂輸這個指令。也不知道他們什麼時候會修好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_565.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=565" target="_blank"><strong># - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK以上就是今天影片全部的內容。個人感覺 Rovo Dev CLI 它使用起來寫程式的效果。其實是比 Gemini CLI 還要好的。很多的修改我幾乎都只要講一次。就可以修改完成。而產出的程式也幾乎不會遇到太多錯誤。這部分模型方面的影響可能不是決定性的。因為之前在測試 Claude Sonnet 4 的時候。跟當時還在 Preview 版的 Gemini 2.5 Pro 相比。Claude Sonnet 4 並沒有強上多少。而現在更強的 Gemini 2.5 Pro 正式版都出來了。沒道理 Gemini CLI 需要更多次的提示。才能夠完成一個任務。而使用 VS Code 搭配 Cline 插件。Gemini 2.5 Pro 的表現又非常的好。所以基本上可以確定。它的問題是出在 Gemini CLI。它所使用的提示詞。或者是工具調用回傳的格式影響。導致它的表現並沒有這麼好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_614.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=614" target="_blank"><strong># - 結語 & 最終推薦</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之目前非常推薦大家。可以用用看這個 Rovo Dev CLI 的工具。免費用 Claude Sonnet 4 來幫我們做一些東西。雖然不知道它的 beta 到什麼時候會結束。OK各位觀眾。我們就。下支影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><p>上週跟大家介紹了 Google 的 Gemini CLI，今天要來跟大家介紹另外一款，目前一樣免費，而且是使用 Claude Sonnet 4 模型的 CLI Agent 工具 ── Rovo Dev CLI。他可以免費使用 Claude Sonnet 4 模型，且免費額度非常高，每日有 2000 萬 Tokens。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>官方安裝教學:</p><p><a href="https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623">https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623</a></p><p></p><p>Rovo Dev CLI 官方介紹:</p><p><a href="https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information">https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information</a></p><p></p><p>今天測試的專案成品連結:</p><p><a href="https://jijun.the-walking-fish.com/">https://jijun.the-walking-fish.com/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/rovo-dev-cli/">https://the-walking-fish.com/p/rovo-dev-cli/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</p><p>00:00 Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</p><p>01:19 【安裝教學】註冊與下載 Rovo Dev CLI</p><p>02:44 【驗證設定】獲取 API Token 並登入驗證</p><p>03:47 【首次啟動】建立 Agent 並進入操作介面</p><p>04:47 基本指令介紹 (/help, /sessions, /clear...)</p><p>05:20 【實戰開始】用 AI 修改既有專案</p><p>05:41 獨特的權限管理系統 (同意/拒絕指令)</p><p>06:17 AI 執行與互動過程展示</p><p>07:15 - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</p><p>07:50 - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</p><p>08:09 - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</p><p>09:25 - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</p><p>10:14 - 結語 & 最終推薦</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/SnyLxg4snHw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><h1>值得閱讀的理由</h1> <ul> <li>了解由 Atlassian 推出的免費指令列 AI 工具 Rovo Dev CLI，及其採用的強大模型 <strong>Claude Sonnet 4</strong>。</li> <li>學習如何安裝 Rovo Dev CLI、設定 <strong>API Token</strong>，並進行基本操作。</li> <li>透過作者的實際專案示範，了解 Rovo Dev CLI 在程式開發上的應用與效能表現，以及與 Google Gemini CLI 的比較，並注意目前存在的<strong>已知問題</strong>。</li> </ul> <hr /> <h1>摘要</h1> <p>影片中，作者介紹了一款名為 <strong>Rovo Dev CLI</strong> 的指令列 Agent 工具。這款工具由 Atlassian 公司開發，並使用 Anthropic 的 <strong>Claude Sonnet 4</strong> 模型，偶爾會自動切換至 Sonnet 3.7 或 Sonnet 3.5v2。目前處於免費 Beta 階段，每天提供高達 <strong>2000 萬個 tokens</strong> 的使用額度，作者認為這對於中小專案來說已相當充足。作者也分享測試心得，認為 Claude Sonnet 4 在程式能力方面的表現略優於 Gemini 2.5 Pro。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_100.jpg" /></p> <h2>安裝與設定</h2> <p>作者接著詳細說明了 Rovo Dev CLI 的安裝流程。首先需要在 Atlassian 官網註冊帳號（支援 Google 登入）。接著下載 Rovo Dev CLI 的<strong>二進位檔</strong> (.exe)，作者建議直接下載後手動加到系統的 <strong>Path 環境變數</strong>中，例如放到 `System32` 資料夾或自訂位置後設定環境變數。安裝成功後，可以在命令提示字元中輸入 `acli --version` 來確認版本資訊。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_230.jpg" /></p> <p>安裝程式本體後，需要到 Atlassian 後台註冊使用 Rovo Dev CLI 所需的 <strong>API Token</strong>。作者提醒，基於安全考量，Token 最長只能設定一年的有效期限。創建 Token 後，需要將其複製下來，因為關閉視窗後將無法再次複製。接著在命令提示字元中輸入 `acli rovodev auth login`，依指示輸入註冊的 Email 和複製的 API Token 即可完成驗證。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p> <h2>初次使用與基本指令</h2> <p>作者強調 Rovo Dev CLI 的工作路徑是依照啟動時終端機所在的目錄位置。首次執行 `acli rovodev run` 指令時，系統會提示需要安裝「Rovo Dev agent」，並提供一個網址。作者引導觀眾透過網址頁面完成 agent 安裝後，再次執行 `acli rovodev run` 即可進入 Rovo Dev CLI 的命令列介面。在這個介面底部可以輸入指令。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_390.jpg" /></p> <p>透過輸入 `/help` 指令，作者展示了 Rovo Dev CLI 提供的一些基本指令，例如 `/sessions` 檢視過往對話、`/clear` 清除目前對話、`/prune` 壓縮對話（此功能目前有 Bug）、`/memory init` 創建記憶文件，以及 `/usage` 查看當日用量。作者認為其指令介面說明不如 Gemini CLI 詳細。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p> <h2>專案實測與權限控制</h2> <p>作者以修改一個舊的記帳程式專案作為示範。他預先編寫好修改計畫，並將其輸入給 Agent。在 Agent 執行修改的過程中，如果需要執行指令或修改檔案，Agent 會<strong>詢問權限</strong>。Rovo Dev CLI 提供了「只同意一次」、「在這個 Session 中都同意」、「永遠都允許」或「拒絕」等選項，比 Gemini CLI 更具彈性。作者也說明了若設定錯誤，可以手動到使用者的 `.rovodev` 資料夾中的 `config.yml` 檔案，修改 `toolPermissions` 項目來調整權限設定。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_580.jpg" /></p> <p>在操作介面中，作者展示了目前 Session 使用的 Token 數量以及每日額度的用量。專案修改完成後，作者表示最終花費大約一個小時的時間（分兩天完成，總共使用 1600 萬 tokens），就做出了功能基本完善的記帳程式，對成果感到相當滿意。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_11.jpg" /></p> <h2>與 Gemini CLI 的比較及已知問題</h2> <p>作者比較了 Rovo Dev CLI 和 Gemini CLI。Rovo Dev CLI 的明顯優勢在於免費使用時幾乎總是使用程式能力較強的 <strong>Claude Sonnet 4</strong>。相較之下，Gemini CLI 的免費額度用盡後會降級為程式能力較弱的 Gemini 2.5 Flash。然而，Gemini CLI 預設支援網頁抓取和 Google 搜尋功能，而 Rovo Dev CLI 需要手動設定 <strong>mcp server</strong> (在 `.rovodev/mcp.json` 中配置) 才能使用這些工具。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_12.jpg" /></p> <p>作者特別提醒 Rovo Dev CLI 目前有一個重要的已知問題：使用 `/prune` 指令嘗試壓縮對話內容時會<strong>發生錯誤並導致 CLI 崩潰退出</strong>，之後甚至無法再次啟動 Rovo Dev CLI。解決方法是手動前往使用者的 `.rovodev/sessions` 資料夾，刪除最新（有問題）的 Session 資料夾。作者建議使用者目前應避免使用此指令，直到問題修復。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_14.jpg" /></p> <h2>總結與推薦</h2> <p>總體而言，作者認為 Rovo Dev CLI 在實際撰寫程式的效果上優於 Gemini CLI，許多修改只需說明一次即可完成，產生的程式錯誤也較少。他推測這可能與 Gemini CLI 內部使用的提示詞或工具調用格式有關。作者強力推薦大家在 Beta 階段多多嘗試 Rovo Dev CLI，免費體驗 Claude Sonnet 4 的程式輔助能力。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_15.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><strong># 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</strong></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Hello 大家好 這裡是步行魚的頻道。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=0" target="_blank"><strong># Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在上週我跟大家介紹了。Google 推出的 Gemini CLI。這款基於 Gemini 模型的命令列 Agent 工具。而今天我們來跟大家介紹另一款工具。Rovo Dev CLI. 它也是一個使用命令列來操作的 Agent 工具。但它所使用的模型是 Anthropic 的 Claude Sonnet 4。目前這個工具正處於免費使用階段(Beta)。每天可以使用的免費額度高達 2000 萬個 tokens。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天我們就來跟大家簡單介紹一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 是由 Atlassian 這間公司所推出的一款新產品。這間公司它也有一些其他的知名產品。像管理專案用的 Jira 還有 Trello(收購來的)。總之這次他們推出的 Rovo Dev CLI。可以說是相當的佛心。使用的是 Anthropic 的 Claude Sonnet 4 模型。視情況可能會自動切換為 Sonnet 3.7 或者是 Sonnet 3.5v2。並且每日提供 20M。也就是 2000 萬 tokens 的使用量。這個用量做一些中小型的專案。基本上算用不太完。而之前在 Claude 4 推出的時候。我有稍微簡單測試了一下。得出的結論大約是 Claude Sonnet 4 程式能力方面的表現。是稍微優於 Gemini 2.5 Pro 的。只能說 Atlassian 真的佛心公司。那麼接下來我們就來跟大家介紹一下。要如何在自己電腦上使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_79.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=79" target="_blank"><strong># 【安裝教學】註冊與下載 Rovo Dev CLI</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 的安裝相較於 Gemini CLI 比較麻煩一點點。首先我們需要先進到 Rovo Dev CLI 的這個頁面。在這裡它會告訴我們。我們需要先註冊一個 Atlassian 的帳號。註冊的部分這邊大家不用擔心。它可以直接使用 Google 登入。在註冊完後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就要來安裝 Rovo Dev CLI 的程式本體。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Atlassian 它有提供二進位檔。我們可以直接下載來使用。我們點進這邊 Windows 的連結。在裡面它有提供 x86 以及 arm64 的下載指令。這邊我會比較推薦不要直接使用這個指令來下載。因為最終我們還是要手動。將這個東西給加到環境變數的 Path 裡面。除非我們使用管理員權限來開啟 PowerShell。並且到 System32 這類預設已經加入到 Path 環境變數的地方。執行這條指令才能夠直接使用。所以我個人是不太建議使用這個指令的。我們直接複製中間它這個 exe 檔的網址。然後開個新分頁貼上按 Enter 下載。下載完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下來就看大家習慣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果圖方便的話。我們可以直接將這個檔案丟到 C 槽。裡的 Windows 裡的 System32 資料夾。這個資料夾預設有被加入到 Path 環境變數中。所以丟在裡面的 exe 檔。可以直接在命令提示字元中執行。我個人習慣會到 Program Files 資料夾裡。創建一個新的資料夾。這邊我就給它取名一個 Rovo Dev CLI。將這一個檔案放到裡面。然後將它加到環境變數。放好檔案後。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_164.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=164" target="_blank"><strong># 【驗證設定】獲取 API Token 並登入驗證</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們再開一個命令提示字元。在裡面輸入 `acli --version`。如果有跳出版本訊息的話。就代表我們安裝成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們需要到 Atlassian 的後台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">註冊使用 Rovo Dev CLI 所需要的 API Token。在這邊稍微有一點比較特別的是。Atlassian 它只允許我們創建。最長一年的 API Token。它給出的理由是基於安全原因。所以 token 不能夠是不會過期的。那我們就把它的時間稍微拉長一點。然後取個我們方便辨識的名字。像這邊我就可以取 Rovo Dev。然後點擊創建。創建完這一個視窗我們不要把它關起來。關起來後。那我們就沒有辦法再複製它了。我們先打開一個命令提示字元。然後輸入以下這條指令：。`acli rovodev auth login` 來進行驗證。它應該會跳出要我們輸入 email。以及 API Token。我們就給它輸入。然後複製 API Token。將它貼上。輸入完按 Enter。沒有意外的話。它應該會顯示一個驗證成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_224.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就可以開始使用 Rovo Dev CLI 了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_227.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=227" target="_blank"><strong># 【首次啟動】建立 Agent 並進入操作介面</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Rovo Dev CLI 與 Gemini CLI 等這類工具一樣。它的工作路徑。是依據我們在啟動它時。terminal 所在的目錄位置。所以這邊我就先進到一個我想要修改的專案。在檔案總管上方的路徑列。裡面輸入 `cmd`。開啟一個路徑為此目錄的命令提示字元。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接著我們就可以輸入。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">`acli rovodev run`. 如果這個帳號是第一次輸這條指令的話。那打開的時候它應該會跳一個。`Rovo Dev agent is not installed on your site`. 然後附上一個網址。這邊我們就直接按著 Ctrl。對它點左鍵。它會進到 Rovo Dev agent 的創建網站網頁。這邊我們不用動它直接按 continue 進去。然後稍等一下。看到裡面它有顯示一些工具出來。那我們就可以回到命令提示字元。再輸入一次剛剛的指令了。沒有意外的話。我們應該就可以看到這個頁面。在底部我們就可以來輸入我們想要的命令。免費使用 Claude Sonnet 4。來做一些專案了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_287.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=287" target="_blank"><strong># 基本指令介紹 (/help, /sessions, /clear...)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">在一開始我們當然還是一樣。使用"/help"來看一下它有哪些指令。然後它的這個指令介面。說實在寫得其實並不算太好。並沒有像 Gemini CLI 這麼詳細。但是一些基本的用法還是可以從這邊看到。像我們可以用「/sessions」。來叫出過往的對話。「/clear」清除目前的對話。「/prune」來壓縮目前的對話。只不過這個功能目前有 bug。等一下會提到。「/memory init」. 來創建記憶文件。以及「/usage」。來查看今日我們使用了多少的用量。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_320.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=320" target="_blank"><strong># 【實戰開始】用 AI 修改既有專案</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那接下來我們就直接上。我今天想要修改的東西。這個是我很久很久以前。剛學一點前端。用來練習製作的一個記帳程式。這邊我已經先編寫好了一個修改的計畫。我們這邊就輸入。讓它根據這個檔案開始進行修改。在修改的途中如果有需要執行指令。或者是要修改檔案。它也一樣會詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_341.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=341" target="_blank"><strong># 獨特的權限管理系統 (同意/拒絕指令)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">那這邊相較於 Gemini CLI。它多了一點選擇。可以讓我們只同意一次、在這個 session 中都同意。或者是永遠都允許這個指令。拒絕的部分也一樣。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">當然如果不小心設錯了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們還是有修改的餘地。我們可以進到 C 槽、「使用者」、我們的使用者名稱。裡面會有一個 `.rovodev` 的資料夾。打開 `config.yml`。稍微往下滾一點。就可以看到 `toolPermissions` 的項目。像如果我們不想讓 `mkdir` 這個指令。可以每次都執行的話。我們就將它的 permission。從 `allow` 改為 `ask`。這樣它就會每次要執行的時候都詢問。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_377.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=377" target="_blank"><strong># AI 執行與互動過程展示</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK看回到 Rovo Dev CLI 的操作介面。在這裡面。剛剛我們執行的第一段指令。它已經執行到一個段落了。此時在下方它會顯示我們目前的用量。它有寫目前這個 session 有多少 token。以及我們每日額度用了多少。而接下來的操作其實就跟在使用。Gemini CLI 或其他類似的工具時一樣。就要開始微調我們所生成的東西。我們可以貼上我們遇到的錯誤。或者是可以根據需求再額外添加、修改。想要的介面與功能。最終大概花一個小時左右的時間。就做出了一個功能基本上完善的記帳程式。當然在今天我正錄影的當下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其實我還是有再稍微使用 Rovo Dev CLI。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">修改一下細節的功能還有一些樣式。整體效果我個人感覺算還蠻滿意的。總共使用的 token 數量是 7M + 9M。也就是 1600 萬個 token。之所以會分兩天。主要是昨天測試的時候已經太晚了。弄一弄太累就直接去睡了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天才來繼續把它做完。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_435.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=435" target="_blank"><strong># - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">而且 Rovo Dev CLI。它目前有一個非常明顯的好處。就是基本上它都會是使用 Claude Sonnet 4。而如果是使用 Gemini CLI。雖然它的免費額度也是給蠻多的。但 Gemini 2.5 Pro 的免費額度其實並不算太多。用一用就會變 Gemini 2.5 Flash。而 Gemini 2.5 Flash。它在程式方面的能力。基本上算是不太可用的。但 Gemini CLI 還是有它的優勢。像它預設就支援。可以使用網頁抓取。以及可以免費使用 Google 搜尋的功能。這些功能在 Rovo Dev CLI 上。我們都必須手動設定 mcp server 才能夠使用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_470.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=470" target="_blank"><strong># - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">哦對了既然講到了就順便提一下。Rovo Dev CLI 要設定 mcp server。要進到 C 槽的「使用者」、使用者名稱裡面的 `.rovodev` 資料夾。在這裡創建一個 `mcp.json`。裡面的內容按照以下的格式填寫。就可以添加 Rovo Dev CLI 能夠使用的工具了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_489.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=489" target="_blank"><strong># - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">最後來稍微講一下 Rovo Dev 目前它有的一個問題。在輸入斜線後我們可以看到它有一個 `prune` 指令。能夠修剪、壓縮我們目前 session 裡的對話內容。以防它超過 Claude Sonnet 4 的 200K context window 大小。但這個功能目前有 bug。我們輸入 `prune` 之後。稍等一下就會看到它顯示發生錯誤。然後直接退出了 Rovo Dev CLI 的介面。此時甚至我們不做處理的話。就再也沒辦法開啟 Rovo Dev CLI 了。我們輸一下 `acli rovodev run`。可以發現它會顯示發生錯誤然後退出。我們到其他資料夾裡面也是一樣的結果。而此時的解決辦法就是我們要到 C 槽、「使用者」、我們的使用者名稱裡面的 `.rovodev` 資料夾中。進到 `sessions` 裡。直接讓它按修改時間排序。最上面應該就會是我們剛剛對話的 session。將這個資料夾刪除掉就可以解決。當然我們可以先進去檢查一下。如果是有問題的 session 的話。點進資料夾它裡面的 `session_context.json`。會是完全沒有內容的。而其他的 session 我們打開來看。可以看到它裡面會有我們的對話、還有它調用工具的紀錄等。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_558.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之將有問題的 session 刪掉。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我們就可以再正常的打開了。所以稍微注意一下。目前沒事不要亂輸這個指令。也不知道他們什麼時候會修好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_565.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=565" target="_blank"><strong># - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OK以上就是今天影片全部的內容。個人感覺 Rovo Dev CLI 它使用起來寫程式的效果。其實是比 Gemini CLI 還要好的。很多的修改我幾乎都只要講一次。就可以修改完成。而產出的程式也幾乎不會遇到太多錯誤。這部分模型方面的影響可能不是決定性的。因為之前在測試 Claude Sonnet 4 的時候。跟當時還在 Preview 版的 Gemini 2.5 Pro 相比。Claude Sonnet 4 並沒有強上多少。而現在更強的 Gemini 2.5 Pro 正式版都出來了。沒道理 Gemini CLI 需要更多次的提示。才能夠完成一個任務。而使用 VS Code 搭配 Cline 插件。Gemini 2.5 Pro 的表現又非常的好。所以基本上可以確定。它的問題是出在 Gemini CLI。它所使用的提示詞。或者是工具調用回傳的格式影響。導致它的表現並沒有這麼好。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202503/file-cache/SnyLxg4snHw_614.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/SnyLxg4snHw&t=614" target="_blank"><strong># - 結語 & 最終推薦</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">總之目前非常推薦大家。可以用用看這個 Rovo Dev CLI 的工具。免費用 Claude Sonnet 4 來幫我們做一些東西。雖然不知道它的 beta 到什麼時候會結束。OK各位觀眾。我們就。下支影片見w。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=SnyLxg4snHw">https://www.youtube.com/watch?v=SnyLxg4snHw</a></p><p>上週跟大家介紹了 Google 的 Gemini CLI，今天要來跟大家介紹另外一款，目前一樣免費，而且是使用 Claude Sonnet 4 模型的 CLI Agent 工具 ── Rovo Dev CLI。他可以免費使用 Claude Sonnet 4 模型，且免費額度非常高，每日有 2000 萬 Tokens。</p><p>==================</p><p>【The Walking Fish的程式小站】<a href="https://the-walking-fish.com/">https://the-walking-fish.com/</a></p><p>【在LBRY上訂閱步行魚的頻道】<a href="https://odysee.com/@The-Walking-Fish">https://odysee.com/@The-Walking-Fish</a></p><p>【也可以點此接受我的LBRY邀請】<a href="https://odysee.com/$/invite/@The-Walking-Fish:2">https://odysee.com/$/invite/@The-Walking-Fish:2</a></p><p>==================</p><p>官方安裝教學:</p><p><a href="https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623">https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623</a></p><p></p><p>Rovo Dev CLI 官方介紹:</p><p><a href="https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information">https://rovodevagents-beta.atlassian.net/wiki/external/Yzc2NzI4MTk3YTBhNDdiYjkzZDhhZTc3MjE0ZmE4Y2Q#Technical-information</a></p><p></p><p>今天測試的專案成品連結:</p><p><a href="https://jijun.the-walking-fish.com/">https://jijun.the-walking-fish.com/</a></p><p></p><p></p><p>本集的文章版:</p><p><a href="https://the-walking-fish.com/p/rovo-dev-cli/">https://the-walking-fish.com/p/rovo-dev-cli/</a></p><p></p><p></p><p></p><p>【推★薦★影★片】</p><p>FLUX.1 介紹影片</p><p><a href="https://www.youtube.com/watch?v=eyM_GTytfXg">https://www.youtube.com/watch?v=eyM_GTytfXg</a></p><p></p><p>HuggingChat 介紹</p><p><a href="https://www.youtube.com/watch?v=P__XJEnqSVo">https://www.youtube.com/watch?v=P__XJEnqSVo</a></p><p></p><p>LM Studio 介紹</p><p><a href="https://www.youtube.com/watch?v=c7t08lPxwW4">https://www.youtube.com/watch?v=c7t08lPxwW4</a></p><p></p><p>==================</p><p>也可以使用BTC或使用我的Pionex、FreeBitcoin推薦連結來贊助我的頻道</p><p>【Donate Me With Bitcoin】16PTGbq3JxupPA89YPb2kWi6Yv9z7fSHqw</p><p>【Pionex推薦連結】 <a href="https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V">https://www.pionex.com/zh-TW/signUp?r=0nWTXbvRL5V</a></p><p>【FreeBitcoin推薦連結(我有設定將推薦收入50%給使用我推薦連結的人)】<a href="https://freebitco.in/?r=4393852">https://freebitco.in/?r=4393852</a></p><p>==================</p><p>00:00 開場 & Rovo Dev CLI 介紹 (Atlassian 免費佛心工具)</p><p>00:00 Rovo Dev CLI 亮點：免費 Claude Sonnet 4 與 2000 萬 Token 額度</p><p>01:19 【安裝教學】註冊與下載 Rovo Dev CLI</p><p>02:44 【驗證設定】獲取 API Token 並登入驗證</p><p>03:47 【首次啟動】建立 Agent 並進入操作介面</p><p>04:47 基本指令介紹 (/help, /sessions, /clear...)</p><p>05:20 【實戰開始】用 AI 修改既有專案</p><p>05:41 獨特的權限管理系統 (同意/拒絕指令)</p><p>06:17 AI 執行與互動過程展示</p><p>07:15 - Rovo Dev CLI vs. Gemini CLI 優劣勢分析</p><p>07:50 - 【進階技巧】如何為 Rovo Dev CLI 新增工具 (mcp_server)</p><p>08:09 - 【重要】已知 Bug 與解決方案 (/prune 指令錯誤)</p><p>09:25 - 總結：為何 Rovo Dev CLI 的程式撰寫體驗更好？</p><p>10:14 - 結語 & 最終推薦</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/SnyLxg4snHw/hqdefault.jpg"/>
      <pubDate>2025-07-06T12:38:50.000Z</pubDate>
    </item></channel>
</rss>